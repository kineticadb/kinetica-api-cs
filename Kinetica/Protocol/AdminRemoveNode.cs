/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>A set of parameters for <see
    /// cref="Kinetica.adminRemoveNode(int,IDictionary{string, string})" />.
    /// <br />
    /// Remove a node from the cluster.  Note that this operation could take a
    /// long time to complete for big clusters.  The data is transferred to
    /// other nodes in the cluster before the node is removed.</summary>
    public class AdminRemoveNodeRequest : KineticaData
    {

        /// <summary>Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveNodeRequest.Options.RESHARD">RESHARD</see>:</term>
        ///         <description>When <i>true</i>, then the shards from nodes
        /// will be moved to the other nodes in the cluster. When false, then
        /// the node will only be removed from the cluster if the node does not
        /// contain any data shards, otherwise an error is returned.  Note that
        /// for big clusters, this data transfer could be time consuming and
        /// also result in delay in responding to queries for busy clusters.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveNodeRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveNodeRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="AdminRemoveNodeRequest.Options.TRUE">TRUE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveNodeRequest.Options.FORCE">FORCE</see>:</term>
        ///         <description>When <i>true</i>, the rank is immediately
        /// shutdown and removed from the cluster.  This will result in loss of
        /// any data that is present in the node at the time of the request.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveNodeRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveNodeRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="AdminRemoveNodeRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        /// </list>
        /// <br />
        /// A set of string constants for the parameter <see cref="options"
        /// />.</summary>
        public struct Options
        {

            /// <summary>When <i>true</i>, then the shards from nodes will be
            /// moved to the other nodes in the cluster. When false, then the
            /// node will only be removed from the cluster if the node does not
            /// contain any data shards, otherwise an error is returned.  Note
            /// that for big clusters, this data transfer could be time
            /// consuming and also result in delay in responding to queries for
            /// busy clusters.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="AdminRemoveNodeRequest.Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="AdminRemoveNodeRequest.Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="AdminRemoveNodeRequest.Options.TRUE">TRUE</see>.</summary>
            public const string RESHARD = "reshard";
            public const string TRUE = "true";
            public const string FALSE = "false";

            /// <summary>When <i>true</i>, the rank is immediately shutdown and
            /// removed from the cluster.  This will result in loss of any data
            /// that is present in the node at the time of the request.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="AdminRemoveNodeRequest.Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="AdminRemoveNodeRequest.Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="AdminRemoveNodeRequest.Options.FALSE">FALSE</see>.</summary>
            public const string FORCE = "force";
        } // end struct Options


        /// <summary>Rank number of the node being removed from the cluster.
        /// </summary>
        public int rank { get; set; }

        /// <summary>Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveNodeRequest.Options.RESHARD">RESHARD</see>:</term>
        ///         <description>When <i>true</i>, then the shards from nodes
        /// will be moved to the other nodes in the cluster. When false, then
        /// the node will only be removed from the cluster if the node does not
        /// contain any data shards, otherwise an error is returned.  Note that
        /// for big clusters, this data transfer could be time consuming and
        /// also result in delay in responding to queries for busy clusters.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveNodeRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveNodeRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="AdminRemoveNodeRequest.Options.TRUE">TRUE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveNodeRequest.Options.FORCE">FORCE</see>:</term>
        ///         <description>When <i>true</i>, the rank is immediately
        /// shutdown and removed from the cluster.  This will result in loss of
        /// any data that is present in the node at the time of the request.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveNodeRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveNodeRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="AdminRemoveNodeRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        /// </list>
        ///   </summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs an AdminRemoveNodeRequest object with default
        /// parameters.</summary>
        public AdminRemoveNodeRequest() { }

        /// <summary>Constructs an AdminRemoveNodeRequest object with the
        /// specified parameters.</summary>
        /// 
        /// <param name="rank">Rank number of the node being removed from the
        /// cluster.  </param>
        /// <param name="options">Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveNodeRequest.Options.RESHARD">RESHARD</see>:</term>
        ///         <description>When <i>true</i>, then the shards from nodes
        /// will be moved to the other nodes in the cluster. When false, then
        /// the node will only be removed from the cluster if the node does not
        /// contain any data shards, otherwise an error is returned.  Note that
        /// for big clusters, this data transfer could be time consuming and
        /// also result in delay in responding to queries for busy clusters.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveNodeRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveNodeRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="AdminRemoveNodeRequest.Options.TRUE">TRUE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveNodeRequest.Options.FORCE">FORCE</see>:</term>
        ///         <description>When <i>true</i>, the rank is immediately
        /// shutdown and removed from the cluster.  This will result in loss of
        /// any data that is present in the node at the time of the request.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveNodeRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveNodeRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="AdminRemoveNodeRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        /// </list>
        ///   </param>
        /// 
        public AdminRemoveNodeRequest( int rank,
                                       IDictionary<string, string> options = null)
        {
            this.rank = rank;
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class AdminRemoveNodeRequest



    /// <summary>A set of results returned by <see
    /// cref="Kinetica.adminRemoveNode(int,IDictionary{string, string})"
    /// />.</summary>
    public class AdminRemoveNodeResponse : KineticaData
    {

        /// <summary>Node that was removed from the cluster.  </summary>
        public int rank { get; set; }

    } // end class AdminRemoveNodeResponse




}  // end namespace kinetica
