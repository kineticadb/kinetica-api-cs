/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{
    /// @cond NO_DOCS
    /// <summary>A set of parameters for <see
    /// cref="Kinetica.importModel(string,string,string,string,string,IDictionary{string, string})"
    /// />.
    /// <br />
    /// </summary>
    public class ImportModelRequest : KineticaData
    {

        /// <summary>
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="ImportModelRequest.Options.MEMORY_LIMIT">MEMORY_LIMIT</see>:</term>
        ///         <description>  The default value is ''.</description>
        ///     </item>
        /// </list>
        /// <br />
        /// A set of string constants for the parameter <see cref="options"
        /// />.</summary>
        public struct Options
        {

            /// <summary>  The default value is ''.</summary>
            public const string MEMORY_LIMIT = "memory_limit";
        } // end struct Options

        public string model_name { get; set; }
        public string registry_name { get; set; }
        public string container { get; set; }
        public string run_function { get; set; }
        public string model_type { get; set; }

        /// <summary>
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="ImportModelRequest.Options.MEMORY_LIMIT">MEMORY_LIMIT</see>:</term>
        ///         <description>  The default value is ''.</description>
        ///     </item>
        /// </list>
        /// </summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs an ImportModelRequest object with default
        /// parameters.</summary>
        public ImportModelRequest() { }

        /// <summary>Constructs an ImportModelRequest object with the specified
        /// parameters.</summary>
        /// 
        /// <param name="model_name"></param>
        /// <param name="registry_name"></param>
        /// <param name="container"></param>
        /// <param name="run_function"></param>
        /// <param name="model_type"></param>
        /// <param name="options">
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="ImportModelRequest.Options.MEMORY_LIMIT">MEMORY_LIMIT</see>:</term>
        ///         <description>  The default value is ''.</description>
        ///     </item>
        /// </list>
        /// </param>
        /// 
        public ImportModelRequest( string model_name,
                                   string registry_name,
                                   string container,
                                   string run_function,
                                   string model_type,
                                   IDictionary<string, string> options = null)
        {
            this.model_name = model_name ?? "";
            this.registry_name = registry_name ?? "";
            this.container = container ?? "";
            this.run_function = run_function ?? "";
            this.model_type = model_type ?? "";
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class ImportModelRequest
    /// @endcond



    /// @cond NO_DOCS
    /// <summary>A set of results returned by <see
    /// cref="Kinetica.importModel(string,string,string,string,string,IDictionary{string, string})"
    /// />.</summary>
    public class ImportModelResponse : KineticaData
    {

        /// <summary>
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="ImportModelResponse.Info.KML_RESPONSE">KML_RESPONSE</see>:</term>
        ///         <description></description>
        ///     </item>
        /// </list>
        /// <br />
        /// A set of string constants for the parameter <member name="info"
        /// />.</summary>
        public struct Info
        {
            public const string KML_RESPONSE = "kml_response";
        } // end struct Info

        public string model_name { get; set; }
        public int entity_id { get; set; }

        /// <summary>
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="ImportModelResponse.Info.KML_RESPONSE">KML_RESPONSE</see>:</term>
        ///         <description></description>
        ///     </item>
        /// </list>
        /// </summary>
        public IDictionary<string, string> info { get; set; } = new Dictionary<string, string>();

    } // end class ImportModelResponse
    /// @endcond





}  // end namespace kinetica
