/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>A set of parameters for <see
    /// cref="Kinetica.alterResourceGroup(string,IDictionary{string, IDictionary{string, string}},IList{string},IDictionary{string, string})"
    /// />.
    /// <br />
    /// Alters properties of exisiting resource group to facilitate resource
    /// management.</summary>
    public class AlterResourceGroupRequest : KineticaData
    {

        /// <summary>Optional map containing group limits for tier-specific
        /// attributes such as memory.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AlterResourceGroupRequest.TierAttributes.MAX_MEMORY">MAX_MEMORY</see>:</term>
        ///         <description>Maximum amount of memory usable in the given
        /// tier at one time for this group.</description>
        ///     </item>
        /// </list>
        /// <br />
        /// A set of string constants for the parameter <see
        /// cref="tier_attributes" />.</summary>
        public struct TierAttributes
        {

            /// <summary>Maximum amount of memory usable in the given tier at
            /// one time for this group.</summary>
            public const string MAX_MEMORY = "max_memory";
        } // end struct TierAttributes


        /// <summary>Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AlterResourceGroupRequest.Options.MAX_CPU_CONCURRENCY">MAX_CPU_CONCURRENCY</see>:</term>
        ///         <description>Maximum number of simultaneous threads that
        /// will be used to execute a request for this group.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AlterResourceGroupRequest.Options.MAX_SCHEDULING_PRIORITY">MAX_SCHEDULING_PRIORITY</see>:</term>
        ///         <description>Maximum priority of a scheduled task for this
        /// group.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AlterResourceGroupRequest.Options.MAX_TIER_PRIORITY">MAX_TIER_PRIORITY</see>:</term>
        ///         <description>Maximum priority of a tiered object for this
        /// group.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AlterResourceGroupRequest.Options.IS_DEFAULT_GROUP">IS_DEFAULT_GROUP</see>:</term>
        ///         <description>If true this request applies to the global
        /// default resource group. It is an error for this field to be true
        /// when the <paramref cref="AlterResourceGroupRequest.name" /> field
        /// is also populated.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AlterResourceGroupRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AlterResourceGroupRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="AlterResourceGroupRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        /// </list>
        /// <br />
        /// A set of string constants for the parameter <see cref="options"
        /// />.</summary>
        public struct Options
        {

            /// <summary>Maximum number of simultaneous threads that will be
            /// used to execute a request for this group.</summary>
            public const string MAX_CPU_CONCURRENCY = "max_cpu_concurrency";

            /// <summary>Maximum priority of a scheduled task for this
            /// group.</summary>
            public const string MAX_SCHEDULING_PRIORITY = "max_scheduling_priority";

            /// <summary>Maximum priority of a tiered object for this
            /// group.</summary>
            public const string MAX_TIER_PRIORITY = "max_tier_priority";

            /// <summary>If true this request applies to the global default
            /// resource group. It is an error for this field to be true when
            /// the <see cref="name" /> field is also populated.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="AlterResourceGroupRequest.Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="AlterResourceGroupRequest.Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="AlterResourceGroupRequest.Options.FALSE">FALSE</see>.</summary>
            public const string IS_DEFAULT_GROUP = "is_default_group";
            public const string TRUE = "true";
            public const string FALSE = "false";
        } // end struct Options


        /// <summary>Name of the group to be altered. Must match existing
        /// resource group name.  </summary>
        public string name { get; set; }

        /// <summary>Optional map containing group limits for tier-specific
        /// attributes such as memory.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AlterResourceGroupRequest.TierAttributes.MAX_MEMORY">MAX_MEMORY</see>:</term>
        ///         <description>Maximum amount of memory usable in the given
        /// tier at one time for this group.</description>
        ///     </item>
        /// </list>
        ///   </summary>
        public IDictionary<string, IDictionary<string, string>> tier_attributes { get; set; } = new Dictionary<string, IDictionary<string, string>>();

        /// <summary>Optional array that defines the default tiering strategy
        /// for this group. Each element pair defines an existing tier and its
        /// preferred priority. e.g. ['RAM 50',VRAM 30']  </summary>
        public IList<string> tier_strategy { get; set; } = new List<string>();

        /// <summary>Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AlterResourceGroupRequest.Options.MAX_CPU_CONCURRENCY">MAX_CPU_CONCURRENCY</see>:</term>
        ///         <description>Maximum number of simultaneous threads that
        /// will be used to execute a request for this group.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AlterResourceGroupRequest.Options.MAX_SCHEDULING_PRIORITY">MAX_SCHEDULING_PRIORITY</see>:</term>
        ///         <description>Maximum priority of a scheduled task for this
        /// group.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AlterResourceGroupRequest.Options.MAX_TIER_PRIORITY">MAX_TIER_PRIORITY</see>:</term>
        ///         <description>Maximum priority of a tiered object for this
        /// group.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AlterResourceGroupRequest.Options.IS_DEFAULT_GROUP">IS_DEFAULT_GROUP</see>:</term>
        ///         <description>If true this request applies to the global
        /// default resource group. It is an error for this field to be true
        /// when the <paramref cref="AlterResourceGroupRequest.name" /> field
        /// is also populated.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AlterResourceGroupRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AlterResourceGroupRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="AlterResourceGroupRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        /// </list>
        ///   </summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs an AlterResourceGroupRequest object with
        /// default parameters.</summary>
        public AlterResourceGroupRequest() { }

        /// <summary>Constructs an AlterResourceGroupRequest object with the
        /// specified parameters.</summary>
        /// 
        /// <param name="name">Name of the group to be altered. Must match
        /// existing resource group name.  </param>
        /// <param name="tier_attributes">Optional map containing group limits
        /// for tier-specific attributes such as memory.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AlterResourceGroupRequest.TierAttributes.MAX_MEMORY">MAX_MEMORY</see>:</term>
        ///         <description>Maximum amount of memory usable in the given
        /// tier at one time for this group.</description>
        ///     </item>
        /// </list>
        ///   </param>
        /// <param name="tier_strategy">Optional array that defines the default
        /// tiering strategy for this group. Each element pair defines an
        /// existing tier and its preferred priority. e.g. ['RAM 50',VRAM 30']
        /// </param>
        /// <param name="options">Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AlterResourceGroupRequest.Options.MAX_CPU_CONCURRENCY">MAX_CPU_CONCURRENCY</see>:</term>
        ///         <description>Maximum number of simultaneous threads that
        /// will be used to execute a request for this group.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AlterResourceGroupRequest.Options.MAX_SCHEDULING_PRIORITY">MAX_SCHEDULING_PRIORITY</see>:</term>
        ///         <description>Maximum priority of a scheduled task for this
        /// group.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AlterResourceGroupRequest.Options.MAX_TIER_PRIORITY">MAX_TIER_PRIORITY</see>:</term>
        ///         <description>Maximum priority of a tiered object for this
        /// group.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AlterResourceGroupRequest.Options.IS_DEFAULT_GROUP">IS_DEFAULT_GROUP</see>:</term>
        ///         <description>If true this request applies to the global
        /// default resource group. It is an error for this field to be true
        /// when the <paramref cref="AlterResourceGroupRequest.name" /> field
        /// is also populated.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AlterResourceGroupRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AlterResourceGroupRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="AlterResourceGroupRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        /// </list>
        ///   </param>
        /// 
        public AlterResourceGroupRequest( string name,
                                          IDictionary<string, IDictionary<string, string>> tier_attributes,
                                          IList<string> tier_strategy,
                                          IDictionary<string, string> options = null)
        {
            this.name = name ?? "";
            this.tier_attributes = tier_attributes ?? new Dictionary<string, IDictionary<string, string>>();
            this.tier_strategy = tier_strategy ?? new List<string>();
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class AlterResourceGroupRequest



    /// <summary>A set of results returned by <see
    /// cref="Kinetica.alterResourceGroup(string,IDictionary{string, IDictionary{string, string}},IList{string},IDictionary{string, string})"
    /// />.</summary>
    public class AlterResourceGroupResponse : KineticaData
    {

        /// <summary>Value of <paramref cref="AlterResourceGroupRequest.name"
        /// />.  </summary>
        public string name { get; set; }

        /// <summary>Additional information.  </summary>
        public IDictionary<string, string> info { get; set; } = new Dictionary<string, string>();

    } // end class AlterResourceGroupResponse




}  // end namespace kinetica
