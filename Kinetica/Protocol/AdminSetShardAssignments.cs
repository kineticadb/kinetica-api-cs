/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>@private
    /// A set of parameters for /admin/setshardassignments.
    /// <br />
    /// </summary>
    public class AdminSetShardAssignmentsRequest : KineticaData
    {

        /// <summary>@private
        /// </summary>

        /// <summary>@private
        /// </summary>
        public long version { get; set; }

        /// <summary>@private
        /// </summary>
        public bool partial_reassignment { get; set; }

        /// <summary>@private
        /// </summary>
        public IList<int> shard_assignments_rank { get; set; } = new List<int>();

        /// <summary>@private
        /// </summary>
        public IList<int> shard_assignments_tom { get; set; } = new List<int>();

        /// <summary>@private
        /// </summary>
        public IList<int> assignment_index { get; set; } = new List<int>();

        /// <summary>@private
        /// </summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>@private
        /// Constructs an AdminSetShardAssignmentsRequest object with default
        /// parameters.</summary>
        public AdminSetShardAssignmentsRequest() { }

        /// <summary>@private
        /// Constructs an AdminSetShardAssignmentsRequest object with the
        /// specified parameters.</summary>
        /// 
        /// <param name="version"></param>
        /// <param name="partial_reassignment"></param>
        /// <param name="shard_assignments_rank"></param>
        /// <param name="shard_assignments_tom"></param>
        /// <param name="assignment_index"></param>
        /// <param name="options"></param>
        /// 
        public AdminSetShardAssignmentsRequest( long version,
                                                bool partial_reassignment,
                                                IList<int> shard_assignments_rank,
                                                IList<int> shard_assignments_tom,
                                                IList<int> assignment_index,
                                                IDictionary<string, string> options = null)
        {
            this.version = version;
            this.partial_reassignment = partial_reassignment;
            this.shard_assignments_rank = shard_assignments_rank ?? new List<int>();
            this.shard_assignments_tom = shard_assignments_tom ?? new List<int>();
            this.assignment_index = assignment_index ?? new List<int>();
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor


    /// <summary>@private
    /// </summary>
    } // end class AdminSetShardAssignmentsRequest



    /// <summary>@private
    /// A set of results returned by /admin/setshardassignments.</summary>
    public class AdminSetShardAssignmentsResponse : KineticaData
    {

        /// <summary>@private
        /// </summary>

        /// <summary>@private
        /// </summary>
        public long version { get; set; }


    /// <summary>@private
    /// </summary>
    } // end class AdminSetShardAssignmentsResponse




}  // end namespace kinetica
