/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>A set of parameters for <see
    /// cref="Kinetica.aggregateMinMax(string,string,IDictionary{string, string})"
    /// />.
    /// <br />
    /// Calculates and returns the minimum and maximum values of a particular
    /// column in a table.</summary>
    public class AggregateMinMaxRequest : KineticaData
    {

        /// <summary>Name of the table on which the operation will be
        /// performed. Must be an existing table.  </summary>
        public string table_name { get; set; }

        /// <summary>Name of a column or an expression of one or more column on
        /// which the min-max will be calculated.  </summary>
        public string column_name { get; set; }

        /// <summary>Optional parameters.  The default value is an empty {@link
        /// Dictionary}.</summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs an AggregateMinMaxRequest object with default
        /// parameters.</summary>
        public AggregateMinMaxRequest() { }

        /// <summary>Constructs an AggregateMinMaxRequest object with the
        /// specified parameters.</summary>
        /// 
        /// <param name="table_name">Name of the table on which the operation
        /// will be performed. Must be an existing table.  </param>
        /// <param name="column_name">Name of a column or an expression of one
        /// or more column on which the min-max will be calculated.  </param>
        /// <param name="options">Optional parameters.  The default value is an
        /// empty {@link Dictionary}.</param>
        /// 
        public AggregateMinMaxRequest( string table_name,
                                       string column_name,
                                       IDictionary<string, string> options = null)
        {
            this.table_name = table_name ?? "";
            this.column_name = column_name ?? "";
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class AggregateMinMaxRequest



    /// <summary>A set of results returned by <see
    /// cref="Kinetica.aggregateMinMax(string,string,IDictionary{string, string})"
    /// />.</summary>
    public class AggregateMinMaxResponse : KineticaData
    {

        /// <summary>Minimum value of the <paramref
        /// cref="AggregateMinMaxRequest.column_name" />.  </summary>
        public double min { get; set; }

        /// <summary>Maximum value of the <paramref
        /// cref="AggregateMinMaxRequest.column_name" />.  </summary>
        public double max { get; set; }

        /// <summary>Additional information.  </summary>
        public IDictionary<string, string> info { get; set; } = new Dictionary<string, string>();

    } // end class AggregateMinMaxResponse




}  // end namespace kinetica
