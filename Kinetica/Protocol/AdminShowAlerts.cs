/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>A set of parameters for <see
    /// cref="Kinetica.adminShowAlerts(int,IDictionary{string, string})" />.
    /// <br />
    /// Retrieves a list of the most recent alerts generated.  The number of
    /// alerts to retrieve is specified in this request.
    /// Returns lists of alert data, earliest to latest</summary>
    public class AdminShowAlertsRequest : KineticaData
    {

        /// <summary>Number of most recent alerts to request. The response will
        /// return <paramref cref="AdminShowAlertsRequest.num_alerts" />
        /// alerts, or less if there are less in the system. A value of 0
        /// returns all stored alerts.  </summary>
        public int num_alerts { get; set; }

        /// <summary>Optional parameters.  The default value is an empty {@link
        /// Dictionary}.</summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs an AdminShowAlertsRequest object with default
        /// parameters.</summary>
        public AdminShowAlertsRequest() { }

        /// <summary>Constructs an AdminShowAlertsRequest object with the
        /// specified parameters.</summary>
        /// 
        /// <param name="num_alerts">Number of most recent alerts to request.
        /// The response will return <paramref
        /// cref="AdminShowAlertsRequest.num_alerts" /> alerts, or less if
        /// there are less in the system. A value of 0 returns all stored
        /// alerts.  </param>
        /// <param name="options">Optional parameters.  The default value is an
        /// empty {@link Dictionary}.</param>
        /// 
        public AdminShowAlertsRequest( int num_alerts,
                                       IDictionary<string, string> options = null)
        {
            this.num_alerts = num_alerts;
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class AdminShowAlertsRequest



    /// <summary>A set of results returned by <see
    /// cref="Kinetica.adminShowAlerts(int,IDictionary{string, string})"
    /// />.</summary>
    public class AdminShowAlertsResponse : KineticaData
    {

        /// <summary>System alert timestamps.  The array is sorted from
        /// earliest to latest.  Each array entry corresponds with the entries
        /// at the same index in <member name="types" /> and <member
        /// name="_params" />.  </summary>
        public IList<string> timestamps { get; set; } = new List<string>();

        /// <summary>System alert types.  The array is sorted from earliest to
        /// latest. Each array entry corresponds with the entries at the same
        /// index in <member name="timestamps" /> and <member name="_params"
        /// />.  </summary>
        public IList<string> types { get; set; } = new List<string>();

        /// <summary>Parameters for each alert.  The array is sorted from
        /// earliest to latest. Each array entry corresponds with the entries
        /// at the same index in <member name="timestamps" /> and <member
        /// name="types" />.  </summary>
        public IList<IDictionary<string, string>> _params { get; set; } = new List<IDictionary<string, string>>();

    } // end class AdminShowAlertsResponse




}  // end namespace kinetica
