/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>A set of parameters for <see
    /// cref="Kinetica.adminRemoveRanks(IList{int},IDictionary{string, string})"
    /// />.
    /// <br />
    /// Remove one or more ranks from the cluster. All data in the ranks to be
    /// removed is rebalanced to other ranks before the node is removed unless
    /// the <i>rebalance_sharded_data</i> or <i>rebalance_unsharded_data</i>
    /// parameters are set to <i>false</i> in the <see cref="options" />.
    /// <br />
    /// Due to the rebalancing, this endpoint may take a long time to run,
    /// depending on the amount of data in the system. The API call may time
    /// out if run directly.  It is recommended to run this endpoint
    /// asynchronously via <see
    /// cref="Kinetica.createJob(string,string,byte[],string,IDictionary{string, string})"
    /// />.</summary>
    public class AdminRemoveRanksRequest : KineticaData
    {

        /// <summary>Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveRanksRequest.Options.REBALANCE_SHARDED_DATA">REBALANCE_SHARDED_DATA</see>:</term>
        ///         <description>When <i>true</i>, data with primary keys or
        /// shard keys will be rebalanced to other ranks prior to rank removal.
        /// Note that for big clusters, this data transfer could be time
        /// consuming and result in delayed query responses.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveRanksRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveRanksRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="AdminRemoveRanksRequest.Options.TRUE">TRUE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveRanksRequest.Options.REBALANCE_UNSHARDED_DATA">REBALANCE_UNSHARDED_DATA</see>:</term>
        ///         <description>When <i>true</i>, unsharded data (data without
        /// primary keys and without shard keys) will be rebalanced to other
        /// ranks prior to rank removal. Note that for big clusters, this data
        /// transfer could be time consuming and result in delayed query
        /// responses.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveRanksRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveRanksRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="AdminRemoveRanksRequest.Options.TRUE">TRUE</see>.</description>
        ///     </item>
        /// </list>
        /// <br />
        /// A set of string constants for the parameter <see cref="options"
        /// />.</summary>
        public struct Options
        {

            /// <summary>When <i>true</i>, data with primary keys or shard keys
            /// will be rebalanced to other ranks prior to rank removal. Note
            /// that for big clusters, this data transfer could be time
            /// consuming and result in delayed query responses.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="AdminRemoveRanksRequest.Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="AdminRemoveRanksRequest.Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="AdminRemoveRanksRequest.Options.TRUE">TRUE</see>.</summary>
            public const string REBALANCE_SHARDED_DATA = "rebalance_sharded_data";
            public const string TRUE = "true";
            public const string FALSE = "false";

            /// <summary>When <i>true</i>, unsharded data (data without primary
            /// keys and without shard keys) will be rebalanced to other ranks
            /// prior to rank removal. Note that for big clusters, this data
            /// transfer could be time consuming and result in delayed query
            /// responses.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="AdminRemoveRanksRequest.Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="AdminRemoveRanksRequest.Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="AdminRemoveRanksRequest.Options.TRUE">TRUE</see>.</summary>
            public const string REBALANCE_UNSHARDED_DATA = "rebalance_unsharded_data";
        } // end struct Options


        /// <summary>Rank numbers of the ranks to be removed from the cluster.
        /// </summary>
        public IList<int> ranks { get; set; } = new List<int>();

        /// <summary>Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveRanksRequest.Options.REBALANCE_SHARDED_DATA">REBALANCE_SHARDED_DATA</see>:</term>
        ///         <description>When <i>true</i>, data with primary keys or
        /// shard keys will be rebalanced to other ranks prior to rank removal.
        /// Note that for big clusters, this data transfer could be time
        /// consuming and result in delayed query responses.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveRanksRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveRanksRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="AdminRemoveRanksRequest.Options.TRUE">TRUE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveRanksRequest.Options.REBALANCE_UNSHARDED_DATA">REBALANCE_UNSHARDED_DATA</see>:</term>
        ///         <description>When <i>true</i>, unsharded data (data without
        /// primary keys and without shard keys) will be rebalanced to other
        /// ranks prior to rank removal. Note that for big clusters, this data
        /// transfer could be time consuming and result in delayed query
        /// responses.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveRanksRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveRanksRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="AdminRemoveRanksRequest.Options.TRUE">TRUE</see>.</description>
        ///     </item>
        /// </list>
        ///   </summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs an AdminRemoveRanksRequest object with default
        /// parameters.</summary>
        public AdminRemoveRanksRequest() { }

        /// <summary>Constructs an AdminRemoveRanksRequest object with the
        /// specified parameters.</summary>
        /// 
        /// <param name="ranks">Rank numbers of the ranks to be removed from
        /// the cluster.  </param>
        /// <param name="options">Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveRanksRequest.Options.REBALANCE_SHARDED_DATA">REBALANCE_SHARDED_DATA</see>:</term>
        ///         <description>When <i>true</i>, data with primary keys or
        /// shard keys will be rebalanced to other ranks prior to rank removal.
        /// Note that for big clusters, this data transfer could be time
        /// consuming and result in delayed query responses.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveRanksRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveRanksRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="AdminRemoveRanksRequest.Options.TRUE">TRUE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveRanksRequest.Options.REBALANCE_UNSHARDED_DATA">REBALANCE_UNSHARDED_DATA</see>:</term>
        ///         <description>When <i>true</i>, unsharded data (data without
        /// primary keys and without shard keys) will be rebalanced to other
        /// ranks prior to rank removal. Note that for big clusters, this data
        /// transfer could be time consuming and result in delayed query
        /// responses.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveRanksRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="AdminRemoveRanksRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="AdminRemoveRanksRequest.Options.TRUE">TRUE</see>.</description>
        ///     </item>
        /// </list>
        ///   </param>
        /// 
        public AdminRemoveRanksRequest( IList<int> ranks,
                                        IDictionary<string, string> options = null)
        {
            this.ranks = ranks ?? new List<int>();
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class AdminRemoveRanksRequest



    /// <summary>A set of results returned by <see
    /// cref="Kinetica.adminRemoveRanks(IList{int},IDictionary{string, string})"
    /// />.</summary>
    public class AdminRemoveRanksResponse : KineticaData
    {

        /// <summary>Ranks that were removed from the cluster.  May be empty in
        /// the case of failures.  </summary>
        public IList<int> removed_ranks { get; set; } = new List<int>();

        /// <summary>Text description of the result of each rank being removed.
        /// Indicates the reason for any errors that occur. Entries are in the
        /// same order as the <paramref cref="AdminRemoveRanksRequest.ranks"
        /// />.  </summary>
        public IList<string> results { get; set; } = new List<string>();

        /// <summary>Additional information.  </summary>
        public IDictionary<string, string> info { get; set; } = new Dictionary<string, string>();

    } // end class AdminRemoveRanksResponse




}  // end namespace kinetica
