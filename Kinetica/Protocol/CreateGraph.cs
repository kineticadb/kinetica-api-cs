/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>A set of parameters for <see
    /// cref="Kinetica.createGraph(string,bool,IList{string},IList{string},IList{string},IList{string},IDictionary{string, string})"
    /// />.
    /// <br />
    /// Creates a new graph network using given nodes, edges, weights, and
    /// restrictions.
    /// <br />
    /// IMPORTANT: It's highly recommended that you review the
    /// <a href="../../../graph_solver/network_graph_solver/"
    /// target="_top">Network Graphs & Solvers</a>
    /// concepts documentation, the
    /// <a href="../../../guides/graph_rest_guide/" target="_top">Graph REST
    /// Tutorial</a>,
    /// and/or some <a href="../../../guide-tags/graph/" target="_top">graph
    /// examples</a> before
    /// using this endpoint.</summary>
    public class CreateGraphRequest : KineticaData
    {

        /// <summary>If set to <i>true</i>, the graph will be directed. If set
        /// to <i>false</i>, the graph will not be directed. Consult <a
        /// href="../../../graph_solver/network_graph_solver/#directed-graphs"
        /// target="_top">Directed Graphs</a> for more details.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.DirectedGraph.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.DirectedGraph.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.DirectedGraph.TRUE">TRUE</see>.
        /// A set of string constants for the parameter <see
        /// cref="directed_graph" />.</summary>
        public struct DirectedGraph
        {
            public const string TRUE = "true";
            public const string FALSE = "false";
        } // end struct DirectedGraph


        /// <summary>Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.RESTRICTION_THRESHOLD_VALUE">RESTRICTION_THRESHOLD_VALUE</see>:</term>
        ///         <description>Value-based restriction comparison. Any node
        /// or edge with a RESTRICTIONS_VALUECOMPARED value greater than the
        /// <i>restriction_threshold_value</i> will not be included in the
        /// graph.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.MERGE_TOLERANCE">MERGE_TOLERANCE</see>:</term>
        ///         <description>If node geospatial positions are input (e.g.,
        /// WKTPOINT, X, Y), determines the minimum separation allowed between
        /// unique nodes. If nodes are within the tolerance of each other, they
        /// will be merged as a single node.  The default value is
        /// '1.0E-4'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.MIN_X">MIN_X</see>:</term>
        ///         <description>Minimum x (longitude) value for spatial graph
        /// associations.  The default value is '-180.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.MAX_X">MAX_X</see>:</term>
        ///         <description>Maximum x (longitude) value for spatial graph
        /// associations.  The default value is '180.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.MIN_Y">MIN_Y</see>:</term>
        ///         <description>Minimum y (latitude) value for spatial graph
        /// associations.  The default value is '-90.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.MAX_Y">MAX_Y</see>:</term>
        ///         <description>Maximum y (latitude) value for spatial graph
        /// associations.  The default value is '90.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.RECREATE">RECREATE</see>:</term>
        ///         <description>If set to <i>true</i> and the graph (using
        /// <paramref cref="CreateGraphRequest.graph_name" />) already exists,
        /// the graph is deleted and recreated.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.MODIFY">MODIFY</see>:</term>
        ///         <description>If set to <i>true</i>, <i>recreate</i> is set
        /// to <i>true</i>, and the graph (specified using <paramref
        /// cref="CreateGraphRequest.graph_name" />) already exists, the graph
        /// is updated with the given components.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.EXPORT_CREATE_RESULTS">EXPORT_CREATE_RESULTS</see>:</term>
        ///         <description>If set to <i>true</i>, returns the graph
        /// topology in the response as arrays.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.ENABLE_GRAPH_DRAW">ENABLE_GRAPH_DRAW</see>:</term>
        ///         <description>If set to <i>true</i>, adds a 'EDGE_WKTLINE'
        /// column identifier to the specified <i>graph_table</i> so the graph
        /// can be viewed via WMS; for social and non-geospatial graphs, the
        /// 'EDGE_WKTLINE' column identifier will be populated with spatial
        /// coordinates derived from a flattening layout algorithm so the graph
        /// can still be viewed.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.SAVE_PERSIST">SAVE_PERSIST</see>:</term>
        ///         <description>If set to <i>true</i>, the graph will be saved
        /// in the persist directory (see the <a
        /// href="../../../config/#config-main-persistence"
        /// target="_top">config reference</a> for more information). If set to
        /// <i>false</i>, the graph will be removed when the graph server is
        /// shutdown.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.SYNC_DB">SYNC_DB</see>:</term>
        ///         <description>If set to <i>true</i> and <i>save_persist</i>
        /// is set to <i>true</i>, the graph will be fully reconstructed upon a
        /// database restart and be updated to align with any source table(s)
        /// updates made since the creation of the graph. If dynamic graph
        /// updates upon table inserts are desired, use
        /// <i>add_table_monitor</i> instead.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.ADD_TABLE_MONITOR">ADD_TABLE_MONITOR</see>:</term>
        ///         <description>Adds a table monitor to every table used in
        /// the creation of the graph; this table monitor will trigger the
        /// graph to update dynamically upon inserts to the source table(s).
        /// Note that upon database restart, if <i>save_persist</i> is also set
        /// to <i>true</i>, the graph will be fully reconstructed and the table
        /// monitors will be reattached. For more details on table monitors,
        /// see /create/tablemonitor.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.GRAPH_TABLE">GRAPH_TABLE</see>:</term>
        ///         <description>If specified, the created graph is also
        /// created as a table with the given name, in [schema_name.]table_name
        /// format, using standard <a
        /// href="../../../concepts/tables/#table-name-resolution"
        /// target="_top">name resolution rules</a> and meeting <a
        /// href="../../../concepts/tables/#table-naming-criteria"
        /// target="_top">table naming criteria</a>.  The table will have the
        /// following identifier columns: 'EDGE_ID', 'EDGE_NODE1_ID',
        /// 'EDGE_NODE2_ID'. If left blank, no table is created.  The default
        /// value is ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.REMOVE_LABEL_ONLY">REMOVE_LABEL_ONLY</see>:</term>
        ///         <description>When RESTRICTIONS on labeled entities
        /// requested, if set to true this will NOT delete the entity but only
        /// the label associated with the entity. Otherwise (default), it'll
        /// delete the label AND the entity.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.ADD_TURNS">ADD_TURNS</see>:</term>
        ///         <description>Adds dummy 'pillowed' edges around
        /// intersection nodes where there are more than three edges so that
        /// additional weight penalties can be imposed by the solve endpoints.
        /// (increases the total number of edges).
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TURN_ANGLE">TURN_ANGLE</see>:</term>
        ///         <description>Value in degrees modifies the thresholds for
        /// attributing right, left, sharp turns, and intersections. It is the
        /// vertical deviation angle from the incoming edge to the intersection
        /// node. The larger the value, the larger the threshold for sharp
        /// turns and intersections; the smaller the value, the larger the
        /// threshold for right and left turns; 0 < turn_angle < 90.  The
        /// default value is '60'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.IS_PARTITIONED">IS_PARTITIONED</see>:</term>
        ///         <description>
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.SERVER_ID">SERVER_ID</see>:</term>
        ///         <description>Indicates which graph server(s) to send the
        /// request to. Default is to send to the server with the most
        /// available memory.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.USE_RTREE">USE_RTREE</see>:</term>
        ///         <description>Use an range tree structure to accelerate and
        /// improve the accuracy of snapping, especially to edges.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.LABEL_DELIMITER">LABEL_DELIMITER</see>:</term>
        ///         <description>If provided the label string will be split
        /// according to this delimiter and each sub-string will be applied as
        /// a separate label onto the specified edge.  The default value is
        /// ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.SQL_REQUEST_AVRO_JSON">SQL_REQUEST_AVRO_JSON</see>:</term>
        ///         <description>  The default value is ''.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.
        /// A set of string constants for the parameter <see cref="options"
        /// />.</summary>
        public struct Options
        {

            /// <summary>Value-based restriction comparison. Any node or edge
            /// with a RESTRICTIONS_VALUECOMPARED value greater than the
            /// <i>restriction_threshold_value</i> will not be included in the
            /// graph.</summary>
            public const string RESTRICTION_THRESHOLD_VALUE = "restriction_threshold_value";

            /// <summary>If node geospatial positions are input (e.g.,
            /// WKTPOINT, X, Y), determines the minimum separation allowed
            /// between unique nodes. If nodes are within the tolerance of each
            /// other, they will be merged as a single node.  The default value
            /// is '1.0E-4'.</summary>
            public const string MERGE_TOLERANCE = "merge_tolerance";

            /// <summary>Minimum x (longitude) value for spatial graph
            /// associations.  The default value is '-180.0'.</summary>
            public const string MIN_X = "min_x";

            /// <summary>Maximum x (longitude) value for spatial graph
            /// associations.  The default value is '180.0'.</summary>
            public const string MAX_X = "max_x";

            /// <summary>Minimum y (latitude) value for spatial graph
            /// associations.  The default value is '-90.0'.</summary>
            public const string MIN_Y = "min_y";

            /// <summary>Maximum y (latitude) value for spatial graph
            /// associations.  The default value is '90.0'.</summary>
            public const string MAX_Y = "max_y";

            /// <summary>If set to <i>true</i> and the graph (using <see
            /// cref="graph_name" />) already exists, the graph is deleted and
            /// recreated.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</summary>
            public const string RECREATE = "recreate";
            public const string TRUE = "true";
            public const string FALSE = "false";

            /// <summary>If set to <i>true</i>, <i>recreate</i> is set to
            /// <i>true</i>, and the graph (specified using <see
            /// cref="graph_name" />) already exists, the graph is updated with
            /// the given components.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</summary>
            public const string MODIFY = "modify";

            /// <summary>If set to <i>true</i>, returns the graph topology in
            /// the response as arrays.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</summary>
            public const string EXPORT_CREATE_RESULTS = "export_create_results";

            /// <summary>If set to <i>true</i>, adds a 'EDGE_WKTLINE' column
            /// identifier to the specified <i>graph_table</i> so the graph can
            /// be viewed via WMS; for social and non-geospatial graphs, the
            /// 'EDGE_WKTLINE' column identifier will be populated with spatial
            /// coordinates derived from a flattening layout algorithm so the
            /// graph can still be viewed.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</summary>
            public const string ENABLE_GRAPH_DRAW = "enable_graph_draw";

            /// <summary>If set to <i>true</i>, the graph will be saved in the
            /// persist directory (see the <a
            /// href="../../../config/#config-main-persistence"
            /// target="_top">config reference</a> for more information). If
            /// set to <i>false</i>, the graph will be removed when the graph
            /// server is shutdown.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</summary>
            public const string SAVE_PERSIST = "save_persist";

            /// <summary>If set to <i>true</i> and <i>save_persist</i> is set
            /// to <i>true</i>, the graph will be fully reconstructed upon a
            /// database restart and be updated to align with any source
            /// table(s) updates made since the creation of the graph. If
            /// dynamic graph updates upon table inserts are desired, use
            /// <i>add_table_monitor</i> instead.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</summary>
            public const string SYNC_DB = "sync_db";

            /// <summary>Adds a table monitor to every table used in the
            /// creation of the graph; this table monitor will trigger the
            /// graph to update dynamically upon inserts to the source
            /// table(s). Note that upon database restart, if
            /// <i>save_persist</i> is also set to <i>true</i>, the graph will
            /// be fully reconstructed and the table monitors will be
            /// reattached. For more details on table monitors, see <see
            /// cref="Kinetica.createTableMonitor(string,IDictionary{string, string})"
            /// />.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</summary>
            public const string ADD_TABLE_MONITOR = "add_table_monitor";

            /// <summary>If specified, the created graph is also created as a
            /// table with the given name, in [schema_name.]table_name format,
            /// using standard <a
            /// href="../../../concepts/tables/#table-name-resolution"
            /// target="_top">name resolution rules</a> and meeting <a
            /// href="../../../concepts/tables/#table-naming-criteria"
            /// target="_top">table naming criteria</a>.  The table will have
            /// the following identifier columns: 'EDGE_ID', 'EDGE_NODE1_ID',
            /// 'EDGE_NODE2_ID'. If left blank, no table is created.  The
            /// default value is ''.</summary>
            public const string GRAPH_TABLE = "graph_table";

            /// <summary>When RESTRICTIONS on labeled entities requested, if
            /// set to true this will NOT delete the entity but only the label
            /// associated with the entity. Otherwise (default), it'll delete
            /// the label AND the entity.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</summary>
            public const string REMOVE_LABEL_ONLY = "remove_label_only";

            /// <summary>Adds dummy 'pillowed' edges around intersection nodes
            /// where there are more than three edges so that additional weight
            /// penalties can be imposed by the solve endpoints. (increases the
            /// total number of edges).
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</summary>
            public const string ADD_TURNS = "add_turns";

            /// <summary>Value in degrees modifies the thresholds for
            /// attributing right, left, sharp turns, and intersections. It is
            /// the vertical deviation angle from the incoming edge to the
            /// intersection node. The larger the value, the larger the
            /// threshold for sharp turns and intersections; the smaller the
            /// value, the larger the threshold for right and left turns; 0 <
            /// turn_angle < 90.  The default value is '60'.</summary>
            public const string TURN_ANGLE = "turn_angle";

            /// <summary>
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</summary>
            public const string IS_PARTITIONED = "is_partitioned";

            /// <summary>Indicates which graph server(s) to send the request
            /// to. Default is to send to the server with the most available
            /// memory.</summary>
            public const string SERVER_ID = "server_id";

            /// <summary>Use an range tree structure to accelerate and improve
            /// the accuracy of snapping, especially to edges.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</summary>
            public const string USE_RTREE = "use_rtree";

            /// <summary>If provided the label string will be split according
            /// to this delimiter and each sub-string will be applied as a
            /// separate label onto the specified edge.  The default value is
            /// ''.</summary>
            public const string LABEL_DELIMITER = "label_delimiter";

            /// <summary>  The default value is ''.</summary>
            public const string SQL_REQUEST_AVRO_JSON = "sql_request_avro_json";
        } // end struct Options


        /// <summary>Name of the graph resource to generate.  </summary>
        public string graph_name { get; set; }

        /// <summary>If set to <i>true</i>, the graph will be directed. If set
        /// to <i>false</i>, the graph will not be directed. Consult <a
        /// href="../../../graph_solver/network_graph_solver/#directed-graphs"
        /// target="_top">Directed Graphs</a> for more details.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.DirectedGraph.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.DirectedGraph.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.DirectedGraph.TRUE">TRUE</see>.
        /// </summary>
        public bool directed_graph { get; set; } = true;

        /// <summary>Nodes represent fundamental topological units of a graph.
        /// Nodes must be specified using
        /// <a href="../../../graph_solver/network_graph_solver/#identifiers"
        /// target="_top">identifiers</a>;
        /// identifiers are grouped as
        /// <a href="../../../graph_solver/network_graph_solver/#id-combos"
        /// target="_top">combinations</a>.
        /// Identifiers can be used with existing column names, e.g.,
        /// 'table.column AS NODE_ID', expressions, e.g.,
        /// 'ST_MAKEPOINT(column1, column2) AS NODE_WKTPOINT', or constant
        /// values, e.g.,
        /// '{9, 10, 11} AS NODE_ID'.
        /// If using constant values in an identifier combination, the number
        /// of values
        /// specified must match across the combination.  </summary>
        public IList<string> nodes { get; set; } = new List<string>();

        /// <summary>Edges represent the required fundamental topological unit
        /// of
        /// a graph that typically connect nodes. Edges must be specified using
        /// <a href="../../../graph_solver/network_graph_solver/#identifiers"
        /// target="_top">identifiers</a>;
        /// identifiers are grouped as
        /// <a href="../../../graph_solver/network_graph_solver/#id-combos"
        /// target="_top">combinations</a>.
        /// Identifiers can be used with existing column names, e.g.,
        /// 'table.column AS EDGE_ID', expressions, e.g.,
        /// 'SUBSTR(column, 1, 6) AS EDGE_NODE1_NAME', or constant values,
        /// e.g.,
        /// "{'family', 'coworker'} AS EDGE_LABEL".
        /// If using constant values in an identifier combination, the number
        /// of values
        /// specified must match across the combination.  </summary>
        public IList<string> edges { get; set; } = new List<string>();

        /// <summary>Weights represent a method of informing the graph solver
        /// of
        /// the cost of including a given edge in a solution. Weights must be
        /// specified
        /// using
        /// <a href="../../../graph_solver/network_graph_solver/#identifiers"
        /// target="_top">identifiers</a>;
        /// identifiers are grouped as
        /// <a href="../../../graph_solver/network_graph_solver/#id-combos"
        /// target="_top">combinations</a>.
        /// Identifiers can be used with existing column names, e.g.,
        /// 'table.column AS WEIGHTS_EDGE_ID', expressions, e.g.,
        /// 'ST_LENGTH(wkt) AS WEIGHTS_VALUESPECIFIED', or constant values,
        /// e.g.,
        /// '{4, 15} AS WEIGHTS_VALUESPECIFIED'.
        /// If using constant values in an identifier combination, the number
        /// of values specified
        /// must match across the combination.  </summary>
        public IList<string> weights { get; set; } = new List<string>();

        /// <summary>Restrictions represent a method of informing the graph
        /// solver which edges and/or nodes should be ignored for the solution.
        /// Restrictions
        /// must be specified using
        /// <a href="../../../graph_solver/network_graph_solver/#identifiers"
        /// target="_top">identifiers</a>;
        /// identifiers are grouped as
        /// <a href="../../../graph_solver/network_graph_solver/#id-combos"
        /// target="_top">combinations</a>.
        /// Identifiers can be used with existing column names, e.g.,
        /// 'table.column AS RESTRICTIONS_EDGE_ID', expressions, e.g.,
        /// 'column/2 AS RESTRICTIONS_VALUECOMPARED', or constant values, e.g.,
        /// '{0, 0, 0, 1} AS RESTRICTIONS_ONOFFCOMPARED'.
        /// If using constant values in an identifier combination, the number
        /// of values
        /// specified must match across the combination.  </summary>
        public IList<string> restrictions { get; set; } = new List<string>();

        /// <summary>Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.RESTRICTION_THRESHOLD_VALUE">RESTRICTION_THRESHOLD_VALUE</see>:</term>
        ///         <description>Value-based restriction comparison. Any node
        /// or edge with a RESTRICTIONS_VALUECOMPARED value greater than the
        /// <i>restriction_threshold_value</i> will not be included in the
        /// graph.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.MERGE_TOLERANCE">MERGE_TOLERANCE</see>:</term>
        ///         <description>If node geospatial positions are input (e.g.,
        /// WKTPOINT, X, Y), determines the minimum separation allowed between
        /// unique nodes. If nodes are within the tolerance of each other, they
        /// will be merged as a single node.  The default value is
        /// '1.0E-4'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.MIN_X">MIN_X</see>:</term>
        ///         <description>Minimum x (longitude) value for spatial graph
        /// associations.  The default value is '-180.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.MAX_X">MAX_X</see>:</term>
        ///         <description>Maximum x (longitude) value for spatial graph
        /// associations.  The default value is '180.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.MIN_Y">MIN_Y</see>:</term>
        ///         <description>Minimum y (latitude) value for spatial graph
        /// associations.  The default value is '-90.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.MAX_Y">MAX_Y</see>:</term>
        ///         <description>Maximum y (latitude) value for spatial graph
        /// associations.  The default value is '90.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.RECREATE">RECREATE</see>:</term>
        ///         <description>If set to <i>true</i> and the graph (using
        /// <paramref cref="CreateGraphRequest.graph_name" />) already exists,
        /// the graph is deleted and recreated.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.MODIFY">MODIFY</see>:</term>
        ///         <description>If set to <i>true</i>, <i>recreate</i> is set
        /// to <i>true</i>, and the graph (specified using <paramref
        /// cref="CreateGraphRequest.graph_name" />) already exists, the graph
        /// is updated with the given components.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.EXPORT_CREATE_RESULTS">EXPORT_CREATE_RESULTS</see>:</term>
        ///         <description>If set to <i>true</i>, returns the graph
        /// topology in the response as arrays.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.ENABLE_GRAPH_DRAW">ENABLE_GRAPH_DRAW</see>:</term>
        ///         <description>If set to <i>true</i>, adds a 'EDGE_WKTLINE'
        /// column identifier to the specified <i>graph_table</i> so the graph
        /// can be viewed via WMS; for social and non-geospatial graphs, the
        /// 'EDGE_WKTLINE' column identifier will be populated with spatial
        /// coordinates derived from a flattening layout algorithm so the graph
        /// can still be viewed.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.SAVE_PERSIST">SAVE_PERSIST</see>:</term>
        ///         <description>If set to <i>true</i>, the graph will be saved
        /// in the persist directory (see the <a
        /// href="../../../config/#config-main-persistence"
        /// target="_top">config reference</a> for more information). If set to
        /// <i>false</i>, the graph will be removed when the graph server is
        /// shutdown.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.SYNC_DB">SYNC_DB</see>:</term>
        ///         <description>If set to <i>true</i> and <i>save_persist</i>
        /// is set to <i>true</i>, the graph will be fully reconstructed upon a
        /// database restart and be updated to align with any source table(s)
        /// updates made since the creation of the graph. If dynamic graph
        /// updates upon table inserts are desired, use
        /// <i>add_table_monitor</i> instead.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.ADD_TABLE_MONITOR">ADD_TABLE_MONITOR</see>:</term>
        ///         <description>Adds a table monitor to every table used in
        /// the creation of the graph; this table monitor will trigger the
        /// graph to update dynamically upon inserts to the source table(s).
        /// Note that upon database restart, if <i>save_persist</i> is also set
        /// to <i>true</i>, the graph will be fully reconstructed and the table
        /// monitors will be reattached. For more details on table monitors,
        /// see /create/tablemonitor.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.GRAPH_TABLE">GRAPH_TABLE</see>:</term>
        ///         <description>If specified, the created graph is also
        /// created as a table with the given name, in [schema_name.]table_name
        /// format, using standard <a
        /// href="../../../concepts/tables/#table-name-resolution"
        /// target="_top">name resolution rules</a> and meeting <a
        /// href="../../../concepts/tables/#table-naming-criteria"
        /// target="_top">table naming criteria</a>.  The table will have the
        /// following identifier columns: 'EDGE_ID', 'EDGE_NODE1_ID',
        /// 'EDGE_NODE2_ID'. If left blank, no table is created.  The default
        /// value is ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.REMOVE_LABEL_ONLY">REMOVE_LABEL_ONLY</see>:</term>
        ///         <description>When RESTRICTIONS on labeled entities
        /// requested, if set to true this will NOT delete the entity but only
        /// the label associated with the entity. Otherwise (default), it'll
        /// delete the label AND the entity.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.ADD_TURNS">ADD_TURNS</see>:</term>
        ///         <description>Adds dummy 'pillowed' edges around
        /// intersection nodes where there are more than three edges so that
        /// additional weight penalties can be imposed by the solve endpoints.
        /// (increases the total number of edges).
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TURN_ANGLE">TURN_ANGLE</see>:</term>
        ///         <description>Value in degrees modifies the thresholds for
        /// attributing right, left, sharp turns, and intersections. It is the
        /// vertical deviation angle from the incoming edge to the intersection
        /// node. The larger the value, the larger the threshold for sharp
        /// turns and intersections; the smaller the value, the larger the
        /// threshold for right and left turns; 0 < turn_angle < 90.  The
        /// default value is '60'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.IS_PARTITIONED">IS_PARTITIONED</see>:</term>
        ///         <description>
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.SERVER_ID">SERVER_ID</see>:</term>
        ///         <description>Indicates which graph server(s) to send the
        /// request to. Default is to send to the server with the most
        /// available memory.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.USE_RTREE">USE_RTREE</see>:</term>
        ///         <description>Use an range tree structure to accelerate and
        /// improve the accuracy of snapping, especially to edges.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.LABEL_DELIMITER">LABEL_DELIMITER</see>:</term>
        ///         <description>If provided the label string will be split
        /// according to this delimiter and each sub-string will be applied as
        /// a separate label onto the specified edge.  The default value is
        /// ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.SQL_REQUEST_AVRO_JSON">SQL_REQUEST_AVRO_JSON</see>:</term>
        ///         <description>  The default value is ''.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.</summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs a CreateGraphRequest object with default
        /// parameters.</summary>
        public CreateGraphRequest() { }

        /// <summary>Constructs a CreateGraphRequest object with the specified
        /// parameters.</summary>
        /// 
        /// <param name="graph_name">Name of the graph resource to generate.
        /// </param>
        /// <param name="directed_graph">If set to <i>true</i>, the graph will
        /// be directed. If set to <i>false</i>, the graph will not be
        /// directed. Consult <a
        /// href="../../../graph_solver/network_graph_solver/#directed-graphs"
        /// target="_top">Directed Graphs</a> for more details.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.DirectedGraph.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.DirectedGraph.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.DirectedGraph.TRUE">TRUE</see>.  </param>
        /// <param name="nodes">Nodes represent fundamental topological units
        /// of a graph.
        /// Nodes must be specified using
        /// <a href="../../../graph_solver/network_graph_solver/#identifiers"
        /// target="_top">identifiers</a>;
        /// identifiers are grouped as
        /// <a href="../../../graph_solver/network_graph_solver/#id-combos"
        /// target="_top">combinations</a>.
        /// Identifiers can be used with existing column names, e.g.,
        /// 'table.column AS NODE_ID', expressions, e.g.,
        /// 'ST_MAKEPOINT(column1, column2) AS NODE_WKTPOINT', or constant
        /// values, e.g.,
        /// '{9, 10, 11} AS NODE_ID'.
        /// If using constant values in an identifier combination, the number
        /// of values
        /// specified must match across the combination.  </param>
        /// <param name="edges">Edges represent the required fundamental
        /// topological unit of
        /// a graph that typically connect nodes. Edges must be specified using
        /// <a href="../../../graph_solver/network_graph_solver/#identifiers"
        /// target="_top">identifiers</a>;
        /// identifiers are grouped as
        /// <a href="../../../graph_solver/network_graph_solver/#id-combos"
        /// target="_top">combinations</a>.
        /// Identifiers can be used with existing column names, e.g.,
        /// 'table.column AS EDGE_ID', expressions, e.g.,
        /// 'SUBSTR(column, 1, 6) AS EDGE_NODE1_NAME', or constant values,
        /// e.g.,
        /// "{'family', 'coworker'} AS EDGE_LABEL".
        /// If using constant values in an identifier combination, the number
        /// of values
        /// specified must match across the combination.  </param>
        /// <param name="weights">Weights represent a method of informing the
        /// graph solver of
        /// the cost of including a given edge in a solution. Weights must be
        /// specified
        /// using
        /// <a href="../../../graph_solver/network_graph_solver/#identifiers"
        /// target="_top">identifiers</a>;
        /// identifiers are grouped as
        /// <a href="../../../graph_solver/network_graph_solver/#id-combos"
        /// target="_top">combinations</a>.
        /// Identifiers can be used with existing column names, e.g.,
        /// 'table.column AS WEIGHTS_EDGE_ID', expressions, e.g.,
        /// 'ST_LENGTH(wkt) AS WEIGHTS_VALUESPECIFIED', or constant values,
        /// e.g.,
        /// '{4, 15} AS WEIGHTS_VALUESPECIFIED'.
        /// If using constant values in an identifier combination, the number
        /// of values specified
        /// must match across the combination.  </param>
        /// <param name="restrictions">Restrictions represent a method of
        /// informing the graph
        /// solver which edges and/or nodes should be ignored for the solution.
        /// Restrictions
        /// must be specified using
        /// <a href="../../../graph_solver/network_graph_solver/#identifiers"
        /// target="_top">identifiers</a>;
        /// identifiers are grouped as
        /// <a href="../../../graph_solver/network_graph_solver/#id-combos"
        /// target="_top">combinations</a>.
        /// Identifiers can be used with existing column names, e.g.,
        /// 'table.column AS RESTRICTIONS_EDGE_ID', expressions, e.g.,
        /// 'column/2 AS RESTRICTIONS_VALUECOMPARED', or constant values, e.g.,
        /// '{0, 0, 0, 1} AS RESTRICTIONS_ONOFFCOMPARED'.
        /// If using constant values in an identifier combination, the number
        /// of values
        /// specified must match across the combination.  </param>
        /// <param name="options">Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.RESTRICTION_THRESHOLD_VALUE">RESTRICTION_THRESHOLD_VALUE</see>:</term>
        ///         <description>Value-based restriction comparison. Any node
        /// or edge with a RESTRICTIONS_VALUECOMPARED value greater than the
        /// <i>restriction_threshold_value</i> will not be included in the
        /// graph.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.MERGE_TOLERANCE">MERGE_TOLERANCE</see>:</term>
        ///         <description>If node geospatial positions are input (e.g.,
        /// WKTPOINT, X, Y), determines the minimum separation allowed between
        /// unique nodes. If nodes are within the tolerance of each other, they
        /// will be merged as a single node.  The default value is
        /// '1.0E-4'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.MIN_X">MIN_X</see>:</term>
        ///         <description>Minimum x (longitude) value for spatial graph
        /// associations.  The default value is '-180.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.MAX_X">MAX_X</see>:</term>
        ///         <description>Maximum x (longitude) value for spatial graph
        /// associations.  The default value is '180.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.MIN_Y">MIN_Y</see>:</term>
        ///         <description>Minimum y (latitude) value for spatial graph
        /// associations.  The default value is '-90.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.MAX_Y">MAX_Y</see>:</term>
        ///         <description>Maximum y (latitude) value for spatial graph
        /// associations.  The default value is '90.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.RECREATE">RECREATE</see>:</term>
        ///         <description>If set to <i>true</i> and the graph (using
        /// <paramref cref="CreateGraphRequest.graph_name" />) already exists,
        /// the graph is deleted and recreated.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.MODIFY">MODIFY</see>:</term>
        ///         <description>If set to <i>true</i>, <i>recreate</i> is set
        /// to <i>true</i>, and the graph (specified using <paramref
        /// cref="CreateGraphRequest.graph_name" />) already exists, the graph
        /// is updated with the given components.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.EXPORT_CREATE_RESULTS">EXPORT_CREATE_RESULTS</see>:</term>
        ///         <description>If set to <i>true</i>, returns the graph
        /// topology in the response as arrays.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.ENABLE_GRAPH_DRAW">ENABLE_GRAPH_DRAW</see>:</term>
        ///         <description>If set to <i>true</i>, adds a 'EDGE_WKTLINE'
        /// column identifier to the specified <i>graph_table</i> so the graph
        /// can be viewed via WMS; for social and non-geospatial graphs, the
        /// 'EDGE_WKTLINE' column identifier will be populated with spatial
        /// coordinates derived from a flattening layout algorithm so the graph
        /// can still be viewed.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.SAVE_PERSIST">SAVE_PERSIST</see>:</term>
        ///         <description>If set to <i>true</i>, the graph will be saved
        /// in the persist directory (see the <a
        /// href="../../../config/#config-main-persistence"
        /// target="_top">config reference</a> for more information). If set to
        /// <i>false</i>, the graph will be removed when the graph server is
        /// shutdown.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.SYNC_DB">SYNC_DB</see>:</term>
        ///         <description>If set to <i>true</i> and <i>save_persist</i>
        /// is set to <i>true</i>, the graph will be fully reconstructed upon a
        /// database restart and be updated to align with any source table(s)
        /// updates made since the creation of the graph. If dynamic graph
        /// updates upon table inserts are desired, use
        /// <i>add_table_monitor</i> instead.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.ADD_TABLE_MONITOR">ADD_TABLE_MONITOR</see>:</term>
        ///         <description>Adds a table monitor to every table used in
        /// the creation of the graph; this table monitor will trigger the
        /// graph to update dynamically upon inserts to the source table(s).
        /// Note that upon database restart, if <i>save_persist</i> is also set
        /// to <i>true</i>, the graph will be fully reconstructed and the table
        /// monitors will be reattached. For more details on table monitors,
        /// see /create/tablemonitor.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.GRAPH_TABLE">GRAPH_TABLE</see>:</term>
        ///         <description>If specified, the created graph is also
        /// created as a table with the given name, in [schema_name.]table_name
        /// format, using standard <a
        /// href="../../../concepts/tables/#table-name-resolution"
        /// target="_top">name resolution rules</a> and meeting <a
        /// href="../../../concepts/tables/#table-naming-criteria"
        /// target="_top">table naming criteria</a>.  The table will have the
        /// following identifier columns: 'EDGE_ID', 'EDGE_NODE1_ID',
        /// 'EDGE_NODE2_ID'. If left blank, no table is created.  The default
        /// value is ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.REMOVE_LABEL_ONLY">REMOVE_LABEL_ONLY</see>:</term>
        ///         <description>When RESTRICTIONS on labeled entities
        /// requested, if set to true this will NOT delete the entity but only
        /// the label associated with the entity. Otherwise (default), it'll
        /// delete the label AND the entity.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.ADD_TURNS">ADD_TURNS</see>:</term>
        ///         <description>Adds dummy 'pillowed' edges around
        /// intersection nodes where there are more than three edges so that
        /// additional weight penalties can be imposed by the solve endpoints.
        /// (increases the total number of edges).
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TURN_ANGLE">TURN_ANGLE</see>:</term>
        ///         <description>Value in degrees modifies the thresholds for
        /// attributing right, left, sharp turns, and intersections. It is the
        /// vertical deviation angle from the incoming edge to the intersection
        /// node. The larger the value, the larger the threshold for sharp
        /// turns and intersections; the smaller the value, the larger the
        /// threshold for right and left turns; 0 < turn_angle < 90.  The
        /// default value is '60'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.IS_PARTITIONED">IS_PARTITIONED</see>:</term>
        ///         <description>
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.SERVER_ID">SERVER_ID</see>:</term>
        ///         <description>Indicates which graph server(s) to send the
        /// request to. Default is to send to the server with the most
        /// available memory.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.USE_RTREE">USE_RTREE</see>:</term>
        ///         <description>Use an range tree structure to accelerate and
        /// improve the accuracy of snapping, especially to edges.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.LABEL_DELIMITER">LABEL_DELIMITER</see>:</term>
        ///         <description>If provided the label string will be split
        /// according to this delimiter and each sub-string will be applied as
        /// a separate label onto the specified edge.  The default value is
        /// ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateGraphRequest.Options.SQL_REQUEST_AVRO_JSON">SQL_REQUEST_AVRO_JSON</see>:</term>
        ///         <description>  The default value is ''.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.</param>
        /// 
        public CreateGraphRequest( string graph_name,
                                   bool? directed_graph,
                                   IList<string> nodes,
                                   IList<string> edges,
                                   IList<string> weights,
                                   IList<string> restrictions,
                                   IDictionary<string, string> options = null)
        {
            this.graph_name = graph_name ?? "";
            this.directed_graph = directed_graph ?? true;
            this.nodes = nodes ?? new List<string>();
            this.edges = edges ?? new List<string>();
            this.weights = weights ?? new List<string>();
            this.restrictions = restrictions ?? new List<string>();
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class CreateGraphRequest



    /// <summary>A set of results returned by <see
    /// cref="Kinetica.createGraph(string,bool,IList{string},IList{string},IList{string},IList{string},IDictionary{string, string})"
    /// />.</summary>
    public class CreateGraphResponse : KineticaData
    {

        /// <summary>Indicates a successful creation on all servers.
        /// </summary>
        public bool result { get; set; }

        /// <summary>Total number of nodes created.  </summary>
        public long num_nodes { get; set; }

        /// <summary>Total number of edges created.  </summary>
        public long num_edges { get; set; }

        /// <summary>Edges given as pairs of node indices. Only populated if
        /// <i>export_create_results</i> is set to <i>true</i>.  </summary>
        public IList<long> edges_ids { get; set; } = new List<long>();

        /// <summary>Additional information.  </summary>
        public IDictionary<string, string> info { get; set; } = new Dictionary<string, string>();

    } // end class CreateGraphResponse




}  // end namespace kinetica
