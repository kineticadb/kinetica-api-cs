/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>A set of parameters for <see
    /// cref="Kinetica.matchGraph(string,IList{string},string,string,IDictionary{string, string})"
    /// />.
    /// <br />
    /// Matches measured lon/lat points to an underlying graph
    /// network.</summary>
    public class MatchGraphRequest : KineticaData
    {

        /// <summary>Solver used for mapmatching.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.SolveMethod.MARKOV_CHAIN">MARKOV_CHAIN</see>:</term>
        ///         <description>Hidden Markov Model (HMM) based
        /// method.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.SolveMethod.INCREMENTAL_WEIGHTED">INCREMENTAL_WEIGHTED</see>:</term>
        ///         <description>Uses time and/or distance to influence one or
        /// more shortest paths along the sample points.</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="MatchGraphRequest.SolveMethod.INCREMENTAL_WEIGHTED">INCREMENTAL_WEIGHTED</see>.
        /// A set of string constants for the parameter <see
        /// cref="solve_method" />.</summary>
        public struct SolveMethod
        {

            /// <summary>Hidden Markov Model (HMM) based method.</summary>
            public const string MARKOV_CHAIN = "markov_chain";

            /// <summary>Uses time and/or distance to influence one or more
            /// shortest paths along the sample points.</summary>
            public const string INCREMENTAL_WEIGHTED = "incremental_weighted";
        } // end struct SolveMethod


        /// <summary>Additional parameters
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.GPS_NOISE">GPS_NOISE</see>:</term>
        ///         <description>GPS noise value - in meters - to remove
        /// redundant samplespoints (95th percentile). -1 to disable.  The
        /// default value is '5.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.NUM_SEGMENTS">NUM_SEGMENTS</see>:</term>
        ///         <description>Number of potentially matching road segments
        /// for each sample point. (Defaults to 3 for 'markov_chain' and 5 for
        /// 'incremental_weighted').  The default value is '0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.SEARCH_RADIUS">SEARCH_RADIUS</see>:</term>
        ///         <description>Maximum search radius used when snapping
        /// samples points onto potentially matching road segments. This
        /// corresponds to approximately 100m when using geodesic coordinates.
        /// The default value is '0.001'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.CHAIN_WIDTH">CHAIN_WIDTH</see>:</term>
        ///         <description>Only applicable if method is 'markov_chain'.
        /// Length of the sample points window within the Markov kernel.  The
        /// default value is '9'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.MAX_SOLVE_LENGTH">MAX_SOLVE_LENGTH</see>:</term>
        ///         <description>Only applicable if method is
        /// 'incremental_weighted'. Maximum number of samples along the path to
        /// solve on.  The default value is '200'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.TIME_WINDOW_WIDTH">TIME_WINDOW_WIDTH</see>:</term>
        ///         <description>Only applicable if method is
        /// 'incremental_weighted'. Time window in which sample points are
        /// favored (dt of 1 is the most attractive).  The default value is
        /// '30'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.DETECT_LOOPS">DETECT_LOOPS</see>:</term>
        ///         <description>Only applicable if method is
        /// 'incremental_weighted'. If true, add a break point within any loop.
        /// The default value is 'true'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.SOURCE">SOURCE</see>:</term>
        ///         <description>Optional WKT point on the trace; otherwise the
        /// beginning (in time) is taken as the source.  The default value is
        /// 'POINT NULL'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.DESTINATION">DESTINATION</see>:</term>
        ///         <description>Optional WKT point on the trace; otherwise the
        /// end (in time) is taken as the destination.  The default value is
        /// 'POINT NULL'.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.
        /// A set of string constants for the parameter <see cref="options"
        /// />.</summary>
        public struct Options
        {

            /// <summary>GPS noise value - in meters - to remove redundant
            /// samplespoints (95th percentile). -1 to disable.  The default
            /// value is '5.0'.</summary>
            public const string GPS_NOISE = "gps_noise";

            /// <summary>Number of potentially matching road segments for each
            /// sample point. (Defaults to 3 for 'markov_chain' and 5 for
            /// 'incremental_weighted').  The default value is '0'.</summary>
            public const string NUM_SEGMENTS = "num_segments";

            /// <summary>Maximum search radius used when snapping samples
            /// points onto potentially matching road segments. This
            /// corresponds to approximately 100m when using geodesic
            /// coordinates.  The default value is '0.001'.</summary>
            public const string SEARCH_RADIUS = "search_radius";

            /// <summary>Only applicable if method is 'markov_chain'. Length of
            /// the sample points window within the Markov kernel.  The default
            /// value is '9'.</summary>
            public const string CHAIN_WIDTH = "chain_width";

            /// <summary>Only applicable if method is 'incremental_weighted'.
            /// Maximum number of samples along the path to solve on.  The
            /// default value is '200'.</summary>
            public const string MAX_SOLVE_LENGTH = "max_solve_length";

            /// <summary>Only applicable if method is 'incremental_weighted'.
            /// Time window in which sample points are favored (dt of 1 is the
            /// most attractive).  The default value is '30'.</summary>
            public const string TIME_WINDOW_WIDTH = "time_window_width";

            /// <summary>Only applicable if method is 'incremental_weighted'.
            /// If true, add a break point within any loop.  The default value
            /// is 'true'.</summary>
            public const string DETECT_LOOPS = "detect_loops";

            /// <summary>Optional WKT point on the trace; otherwise the
            /// beginning (in time) is taken as the source.  The default value
            /// is 'POINT NULL'.</summary>
            public const string SOURCE = "source";

            /// <summary>Optional WKT point on the trace; otherwise the end (in
            /// time) is taken as the destination.  The default value is 'POINT
            /// NULL'.</summary>
            public const string DESTINATION = "destination";
        } // end struct Options


        /// <summary>Name of the underlying graph network.  </summary>
        public string graph_name { get; set; }

        /// <summary>['Table.column AS node_identifier', 'Table.column AS
        /// SAMPLE_TIME' ]; e.g., 't1.wkt' AS 'SAMPLE_WKTPOINT', t1.t' AS
        /// 'SAMPLE_TIME'  </summary>
        public IList<string> sample_points { get; set; } = new List<string>();

        /// <summary>Solver used for mapmatching.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.SolveMethod.MARKOV_CHAIN">MARKOV_CHAIN</see>:</term>
        ///         <description>Hidden Markov Model (HMM) based
        /// method.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.SolveMethod.INCREMENTAL_WEIGHTED">INCREMENTAL_WEIGHTED</see>:</term>
        ///         <description>Uses time and/or distance to influence one or
        /// more shortest paths along the sample points.</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="MatchGraphRequest.SolveMethod.INCREMENTAL_WEIGHTED">INCREMENTAL_WEIGHTED</see>.
        /// </summary>
        public string solve_method { get; set; } = SolveMethod.INCREMENTAL_WEIGHTED;

        /// <summary>Name of the table to store the solution. Error if table
        /// already exists.  The default value is
        /// 'map_matching_solution'.</summary>
        public string solution_table { get; set; } = "map_matching_solution";

        /// <summary>Additional parameters
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.GPS_NOISE">GPS_NOISE</see>:</term>
        ///         <description>GPS noise value - in meters - to remove
        /// redundant samplespoints (95th percentile). -1 to disable.  The
        /// default value is '5.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.NUM_SEGMENTS">NUM_SEGMENTS</see>:</term>
        ///         <description>Number of potentially matching road segments
        /// for each sample point. (Defaults to 3 for 'markov_chain' and 5 for
        /// 'incremental_weighted').  The default value is '0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.SEARCH_RADIUS">SEARCH_RADIUS</see>:</term>
        ///         <description>Maximum search radius used when snapping
        /// samples points onto potentially matching road segments. This
        /// corresponds to approximately 100m when using geodesic coordinates.
        /// The default value is '0.001'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.CHAIN_WIDTH">CHAIN_WIDTH</see>:</term>
        ///         <description>Only applicable if method is 'markov_chain'.
        /// Length of the sample points window within the Markov kernel.  The
        /// default value is '9'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.MAX_SOLVE_LENGTH">MAX_SOLVE_LENGTH</see>:</term>
        ///         <description>Only applicable if method is
        /// 'incremental_weighted'. Maximum number of samples along the path to
        /// solve on.  The default value is '200'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.TIME_WINDOW_WIDTH">TIME_WINDOW_WIDTH</see>:</term>
        ///         <description>Only applicable if method is
        /// 'incremental_weighted'. Time window in which sample points are
        /// favored (dt of 1 is the most attractive).  The default value is
        /// '30'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.DETECT_LOOPS">DETECT_LOOPS</see>:</term>
        ///         <description>Only applicable if method is
        /// 'incremental_weighted'. If true, add a break point within any loop.
        /// The default value is 'true'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.SOURCE">SOURCE</see>:</term>
        ///         <description>Optional WKT point on the trace; otherwise the
        /// beginning (in time) is taken as the source.  The default value is
        /// 'POINT NULL'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.DESTINATION">DESTINATION</see>:</term>
        ///         <description>Optional WKT point on the trace; otherwise the
        /// end (in time) is taken as the destination.  The default value is
        /// 'POINT NULL'.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.</summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs a MatchGraphRequest object with default
        /// parameters.</summary>
        public MatchGraphRequest() { }

        /// <summary>Constructs a MatchGraphRequest object with the specified
        /// parameters.</summary>
        /// 
        /// <param name="graph_name">Name of the underlying graph network.
        /// </param>
        /// <param name="sample_points">['Table.column AS node_identifier',
        /// 'Table.column AS SAMPLE_TIME' ]; e.g., 't1.wkt' AS
        /// 'SAMPLE_WKTPOINT', t1.t' AS 'SAMPLE_TIME'  </param>
        /// <param name="solve_method">Solver used for mapmatching.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.SolveMethod.MARKOV_CHAIN">MARKOV_CHAIN</see>:</term>
        ///         <description>Hidden Markov Model (HMM) based
        /// method.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.SolveMethod.INCREMENTAL_WEIGHTED">INCREMENTAL_WEIGHTED</see>:</term>
        ///         <description>Uses time and/or distance to influence one or
        /// more shortest paths along the sample points.</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="MatchGraphRequest.SolveMethod.INCREMENTAL_WEIGHTED">INCREMENTAL_WEIGHTED</see>.
        /// </param>
        /// <param name="solution_table">Name of the table to store the
        /// solution. Error if table already exists.  The default value is
        /// 'map_matching_solution'.</param>
        /// <param name="options">Additional parameters
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.GPS_NOISE">GPS_NOISE</see>:</term>
        ///         <description>GPS noise value - in meters - to remove
        /// redundant samplespoints (95th percentile). -1 to disable.  The
        /// default value is '5.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.NUM_SEGMENTS">NUM_SEGMENTS</see>:</term>
        ///         <description>Number of potentially matching road segments
        /// for each sample point. (Defaults to 3 for 'markov_chain' and 5 for
        /// 'incremental_weighted').  The default value is '0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.SEARCH_RADIUS">SEARCH_RADIUS</see>:</term>
        ///         <description>Maximum search radius used when snapping
        /// samples points onto potentially matching road segments. This
        /// corresponds to approximately 100m when using geodesic coordinates.
        /// The default value is '0.001'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.CHAIN_WIDTH">CHAIN_WIDTH</see>:</term>
        ///         <description>Only applicable if method is 'markov_chain'.
        /// Length of the sample points window within the Markov kernel.  The
        /// default value is '9'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.MAX_SOLVE_LENGTH">MAX_SOLVE_LENGTH</see>:</term>
        ///         <description>Only applicable if method is
        /// 'incremental_weighted'. Maximum number of samples along the path to
        /// solve on.  The default value is '200'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.TIME_WINDOW_WIDTH">TIME_WINDOW_WIDTH</see>:</term>
        ///         <description>Only applicable if method is
        /// 'incremental_weighted'. Time window in which sample points are
        /// favored (dt of 1 is the most attractive).  The default value is
        /// '30'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.DETECT_LOOPS">DETECT_LOOPS</see>:</term>
        ///         <description>Only applicable if method is
        /// 'incremental_weighted'. If true, add a break point within any loop.
        /// The default value is 'true'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.SOURCE">SOURCE</see>:</term>
        ///         <description>Optional WKT point on the trace; otherwise the
        /// beginning (in time) is taken as the source.  The default value is
        /// 'POINT NULL'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.DESTINATION">DESTINATION</see>:</term>
        ///         <description>Optional WKT point on the trace; otherwise the
        /// end (in time) is taken as the destination.  The default value is
        /// 'POINT NULL'.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.</param>
        /// 
        public MatchGraphRequest( string graph_name,
                                  IList<string> sample_points,
                                  string solve_method = null,
                                  string solution_table = null,
                                  IDictionary<string, string> options = null)
        {
            this.graph_name = graph_name ?? "";
            this.sample_points = sample_points ?? new List<string>();
            this.solve_method = solve_method ?? SolveMethod.INCREMENTAL_WEIGHTED;
            this.solution_table = solution_table ?? "map_matching_solution";
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class MatchGraphRequest



    /// <summary>A set of results returned by <see
    /// cref="Kinetica.matchGraph(string,IList{string},string,string,IDictionary{string, string})"
    /// />.</summary>
    public class MatchGraphResponse : KineticaData
    {

        /// <summary>Successful solution.  </summary>
        public bool result { get; set; }

        /// <summary>Mean square error.  </summary>
        public float match_score { get; set; }

        /// <summary>Additional information.  </summary>
        public IDictionary<string, string> info { get; set; } = new Dictionary<string, string>();

    } // end class MatchGraphResponse




}  // end namespace kinetica
