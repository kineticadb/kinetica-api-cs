/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>A set of parameters for <see
    /// cref="Kinetica.matchGraph(string,IList{string},string,string,IDictionary{string, string})"
    /// />.
    /// <br />
    /// Matches a directed route implied by a given set of
    /// latitude/longitude points to an existing underlying road network graph
    /// using a
    /// given solution type.
    /// <br />
    /// IMPORTANT: It's highly recommended that you review the
    /// <a href="../../graph_solver/network_graph_solver.html"
    /// target="_top">Network Graphs & Solvers</a>
    /// concepts documentation, the
    /// <a href="../../graph_solver/examples/graph_rest_guide.html"
    /// target="_top">Graph REST Tutorial</a>,
    /// and/or some
    /// <a href="../../graph_solver/examples.html#match-graph"
    /// target="_top">/match/graph examples</a>
    /// before using this endpoint.</summary>
    public class MatchGraphRequest : KineticaData
    {

        /// <summary>The type of solver to use for graph matching.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.SolveMethod.MARKOV_CHAIN">MARKOV_CHAIN</see>:</term>
        ///         <description>Matches <paramref
        /// cref="MatchGraphRequest.sample_points" /> to the graph using the
        /// Hidden Markov Model (HMM)-based method, which conducts a range-tree
        /// closest-edge search to find the best combinations of possible road
        /// segments (<i>num_segments</i>) for each sample point to create the
        /// best route. The route is secured one point at a time while looking
        /// ahead <i>chain_width</i> number of points, so the prediction is
        /// corrected after each point. This solution type is the most accurate
        /// but also the most computationally intensive. Related options:
        /// <i>num_segments</i> and <i>chain_width</i>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.SolveMethod.MATCH_OD_PAIRS">MATCH_OD_PAIRS</see>:</term>
        ///         <description>Matches <paramref
        /// cref="MatchGraphRequest.sample_points" /> to find the most probable
        /// path between origin and destination pairs with cost
        /// constraints.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.SolveMethod.MATCH_SUPPLY_DEMAND">MATCH_SUPPLY_DEMAND</see>:</term>
        ///         <description>Matches <paramref
        /// cref="MatchGraphRequest.sample_points" /> to optimize scheduling
        /// multiple supplies (trucks) with varying sizes to varying demand
        /// sites with varying capacities per depot. Related options:
        /// <i>partial_loading</i> and <i>max_combinations</i>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.SolveMethod.MATCH_BATCH_SOLVES">MATCH_BATCH_SOLVES</see>:</term>
        ///         <description>Matches <paramref
        /// cref="MatchGraphRequest.sample_points" /> source and destination
        /// pairs for the shortest path solves in batch mode.</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="MatchGraphRequest.SolveMethod.MARKOV_CHAIN">MARKOV_CHAIN</see>.
        /// A set of string constants for the parameter <see
        /// cref="solve_method" />.</summary>
        public struct SolveMethod
        {

            /// <summary>Matches <see cref="sample_points" /> to the graph
            /// using the Hidden Markov Model (HMM)-based method, which
            /// conducts a range-tree closest-edge search to find the best
            /// combinations of possible road segments (<i>num_segments</i>)
            /// for each sample point to create the best route. The route is
            /// secured one point at a time while looking ahead
            /// <i>chain_width</i> number of points, so the prediction is
            /// corrected after each point. This solution type is the most
            /// accurate but also the most computationally intensive. Related
            /// options: <i>num_segments</i> and <i>chain_width</i>.</summary>
            public const string MARKOV_CHAIN = "markov_chain";

            /// <summary>Matches <see cref="sample_points" /> to find the most
            /// probable path between origin and destination pairs with cost
            /// constraints.</summary>
            public const string MATCH_OD_PAIRS = "match_od_pairs";

            /// <summary>Matches <see cref="sample_points" /> to optimize
            /// scheduling multiple supplies (trucks) with varying sizes to
            /// varying demand sites with varying capacities per depot. Related
            /// options: <i>partial_loading</i> and
            /// <i>max_combinations</i>.</summary>
            public const string MATCH_SUPPLY_DEMAND = "match_supply_demand";

            /// <summary>Matches <see cref="sample_points" /> source and
            /// destination pairs for the shortest path solves in batch
            /// mode.</summary>
            public const string MATCH_BATCH_SOLVES = "match_batch_solves";
        } // end struct SolveMethod


        /// <summary>Additional parameters
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.GPS_NOISE">GPS_NOISE</see>:</term>
        ///         <description>GPS noise value (in meters) to remove
        /// redundant sample points. Use -1 to disable noise reduction. The
        /// default value accounts for 95% of point variation (+ or -5 meters).
        /// The default value is '5.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.NUM_SEGMENTS">NUM_SEGMENTS</see>:</term>
        ///         <description>Maximum number of potentially matching road
        /// segments for each sample point. For the <i>markov_chain</i> solver,
        /// the default is 3.  The default value is '3'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.SEARCH_RADIUS">SEARCH_RADIUS</see>:</term>
        ///         <description>Maximum search radius used when snapping
        /// sample points onto potentially matching surrounding segments. The
        /// default value corresponds to approximately 100 meters.  The default
        /// value is '0.001'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.CHAIN_WIDTH">CHAIN_WIDTH</see>:</term>
        ///         <description>For the <i>markov_chain</i> solver only.
        /// Length of the sample points lookahead window within the Markov
        /// kernel; the larger the number, the more accurate the solution.  The
        /// default value is '9'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.SOURCE">SOURCE</see>:</term>
        ///         <description>Optional WKT starting point from <paramref
        /// cref="MatchGraphRequest.sample_points" /> for the solver. The
        /// default behavior for the endpoint is to use time to determine the
        /// starting point.  The default value is 'POINT NULL'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.DESTINATION">DESTINATION</see>:</term>
        ///         <description>Optional WKT ending point from <paramref
        /// cref="MatchGraphRequest.sample_points" /> for the solver. The
        /// default behavior for the endpoint is to use time to determine the
        /// destination point.  The default value is 'POINT
        /// NULL'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.PARTIAL_LOADING">PARTIAL_LOADING</see>:</term>
        ///         <description>For the <i>match_supply_demand</i> solver
        /// only. When false (non-default), trucks do not off-load at the
        /// demand (store) side if the remainder is less than the store's need
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.TRUE">TRUE</see>:</term>
        ///         <description>Partial off-loading at multiple store (demand)
        /// locations</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.FALSE">FALSE</see>:</term>
        ///         <description>No partial off-loading allowed if supply is
        /// less than the store's demand.</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="MatchGraphRequest.Options.TRUE">TRUE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.MAX_COMBINATIONS">MAX_COMBINATIONS</see>:</term>
        ///         <description>For the <i>match_supply_demand</i> solver
        /// only. This is the cutoff for the number of generated combinations
        /// for sequencing the demand locations - can increase this up to 2M.
        /// The default value is '10000'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.LEFT_TURN_PENALTY">LEFT_TURN_PENALTY</see>:</term>
        ///         <description>This will add an additonal weight over the
        /// edges labelled as 'left turn' if the 'add_turn' option parameter of
        /// the /create/graph was invoked at graph creation.  The default value
        /// is '0.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.RIGHT_TURN_PENALTY">RIGHT_TURN_PENALTY</see>:</term>
        ///         <description>This will add an additonal weight over the
        /// edges labelled as' right turn' if the 'add_turn' option parameter
        /// of the /create/graph was invoked at graph creation.  The default
        /// value is '0.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.INTERSECTION_PENALTY">INTERSECTION_PENALTY</see>:</term>
        ///         <description>This will add an additonal weight over the
        /// edges labelled as 'intersection' if the 'add_turn' option parameter
        /// of the /create/graph was invoked at graph creation.  The default
        /// value is '0.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.SHARP_TURN_PENALTY">SHARP_TURN_PENALTY</see>:</term>
        ///         <description>This will add an additonal weight over the
        /// edges labelled as 'sharp turn' or 'u-turn' if the 'add_turn' option
        /// parameter of the /create/graph was invoked at graph creation.  The
        /// default value is '0.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.AGGREGATED_OUTPUT">AGGREGATED_OUTPUT</see>:</term>
        ///         <description>For the <i>match_supply_demand</i> solver
        /// only. When it is true (default), each record in the output table
        /// shows a particular truck's scheduled cumulative round trip path
        /// (MULTILINESTRING) and the corresponding aggregated cost. Otherwise,
        /// each record shows a single scheduled truck route (LINESTRING)
        /// towards a particular demand location (store id) with its
        /// corresponding cost.  The default value is 'true'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.MAX_TRIP_COST">MAX_TRIP_COST</see>:</term>
        ///         <description>For the <i>match_supply_demand</i> solver
        /// only. If this constraint is greater than zero (default) then the
        /// trucks will skip travelling from one demand location to another if
        /// the cost between them is greater than this number (distance or
        /// time). Zero (default) value means no check is performed.  The
        /// default value is '0.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.FILTER_FOLDING_PATHS">FILTER_FOLDING_PATHS</see>:</term>
        ///         <description>For the <i>markov_chain</i> solver only. When
        /// true (non-default), the paths per sequence combination is checked
        /// for folding over patterns and can significantly increase the
        /// execution time depending on the chain width and the number of gps
        /// samples.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.TRUE">TRUE</see>:</term>
        ///         <description>Filter out the folded paths.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.FALSE">FALSE</see>:</term>
        ///         <description>Do not filter out the folded
        /// paths</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="MatchGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.UNIT_UNLOADING_COST">UNIT_UNLOADING_COST</see>:</term>
        ///         <description>For the <i>match_supply_demand</i> solver
        /// only. The unit cost per load amount to be delivered. If this value
        /// is greater than zero (default) then the additional cost of this
        /// unit load multiplied by the total dropped load will be added over
        /// to the trip cost to the demand location.  The default value is
        /// '0.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.MAX_NUM_THREADS">MAX_NUM_THREADS</see>:</term>
        ///         <description>For the <i>markov_chain</i> solver only. If
        /// specified (greater than zero), the maximum number of threads will
        /// not be greater than the specified value. It can be lower due to the
        /// memory and the number cores available. Default value of zero allows
        /// the algorithm to set the maximal number of threads within these
        /// constraints.  The default value is '0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.TRUCK_SERVICE_LIMIT">TRUCK_SERVICE_LIMIT</see>:</term>
        ///         <description>For the <i>match_supply_demand</i> solver
        /// only. If specified (greather than zero), any truck's total service
        /// cost (distance or time) will be limited by the specified value
        /// including multiple rounds (if set).  The default value is
        /// '0.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.ENABLE_TRUCK_REUSE">ENABLE_TRUCK_REUSE</see>:</term>
        ///         <description>For the <i>match_supply_demand</i> solver
        /// only. If specified (true), all trucks can be scheduled for second
        /// rounds from their originating depots.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.TRUE">TRUE</see>:</term>
        ///         <description>Allows reusing trucks for scheduling
        /// again.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.FALSE">FALSE</see>:</term>
        ///         <description>Trucks are scheduled only once from their
        /// depots.</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="MatchGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.
        /// A set of string constants for the parameter <see cref="options"
        /// />.</summary>
        public struct Options
        {

            /// <summary>GPS noise value (in meters) to remove redundant sample
            /// points. Use -1 to disable noise reduction. The default value
            /// accounts for 95% of point variation (+ or -5 meters).  The
            /// default value is '5.0'.</summary>
            public const string GPS_NOISE = "gps_noise";

            /// <summary>Maximum number of potentially matching road segments
            /// for each sample point. For the <i>markov_chain</i> solver, the
            /// default is 3.  The default value is '3'.</summary>
            public const string NUM_SEGMENTS = "num_segments";

            /// <summary>Maximum search radius used when snapping sample points
            /// onto potentially matching surrounding segments. The default
            /// value corresponds to approximately 100 meters.  The default
            /// value is '0.001'.</summary>
            public const string SEARCH_RADIUS = "search_radius";

            /// <summary>For the <i>markov_chain</i> solver only. Length of the
            /// sample points lookahead window within the Markov kernel; the
            /// larger the number, the more accurate the solution.  The default
            /// value is '9'.</summary>
            public const string CHAIN_WIDTH = "chain_width";

            /// <summary>Optional WKT starting point from <see
            /// cref="sample_points" /> for the solver. The default behavior
            /// for the endpoint is to use time to determine the starting
            /// point.  The default value is 'POINT NULL'.</summary>
            public const string SOURCE = "source";

            /// <summary>Optional WKT ending point from <see
            /// cref="sample_points" /> for the solver. The default behavior
            /// for the endpoint is to use time to determine the destination
            /// point.  The default value is 'POINT NULL'.</summary>
            public const string DESTINATION = "destination";

            /// <summary>For the <i>match_supply_demand</i> solver only. When
            /// false (non-default), trucks do not off-load at the demand
            /// (store) side if the remainder is less than the store's need
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="MatchGraphRequest.Options.TRUE">TRUE</see>:</term>
            ///         <description>Partial off-loading at multiple store
            /// (demand) locations</description>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="MatchGraphRequest.Options.FALSE">FALSE</see>:</term>
            ///         <description>No partial off-loading allowed if supply
            /// is less than the store's demand.</description>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="MatchGraphRequest.Options.TRUE">TRUE</see>.</summary>
            public const string PARTIAL_LOADING = "partial_loading";

            /// <summary>Allows reusing trucks for scheduling again.</summary>
            public const string TRUE = "true";

            /// <summary>Trucks are scheduled only once from their
            /// depots.</summary>
            public const string FALSE = "false";

            /// <summary>For the <i>match_supply_demand</i> solver only. This
            /// is the cutoff for the number of generated combinations for
            /// sequencing the demand locations - can increase this up to 2M.
            /// The default value is '10000'.</summary>
            public const string MAX_COMBINATIONS = "max_combinations";

            /// <summary>This will add an additonal weight over the edges
            /// labelled as 'left turn' if the 'add_turn' option parameter of
            /// the <see
            /// cref="Kinetica.createGraph(string,bool,IList{string},IList{string},IList{string},IList{string},IDictionary{string, string})"
            /// /> was invoked at graph creation.  The default value is
            /// '0.0'.</summary>
            public const string LEFT_TURN_PENALTY = "left_turn_penalty";

            /// <summary>This will add an additonal weight over the edges
            /// labelled as' right turn' if the 'add_turn' option parameter of
            /// the <see
            /// cref="Kinetica.createGraph(string,bool,IList{string},IList{string},IList{string},IList{string},IDictionary{string, string})"
            /// /> was invoked at graph creation.  The default value is
            /// '0.0'.</summary>
            public const string RIGHT_TURN_PENALTY = "right_turn_penalty";

            /// <summary>This will add an additonal weight over the edges
            /// labelled as 'intersection' if the 'add_turn' option parameter
            /// of the <see
            /// cref="Kinetica.createGraph(string,bool,IList{string},IList{string},IList{string},IList{string},IDictionary{string, string})"
            /// /> was invoked at graph creation.  The default value is
            /// '0.0'.</summary>
            public const string INTERSECTION_PENALTY = "intersection_penalty";

            /// <summary>This will add an additonal weight over the edges
            /// labelled as 'sharp turn' or 'u-turn' if the 'add_turn' option
            /// parameter of the <see
            /// cref="Kinetica.createGraph(string,bool,IList{string},IList{string},IList{string},IList{string},IDictionary{string, string})"
            /// /> was invoked at graph creation.  The default value is
            /// '0.0'.</summary>
            public const string SHARP_TURN_PENALTY = "sharp_turn_penalty";

            /// <summary>For the <i>match_supply_demand</i> solver only. When
            /// it is true (default), each record in the output table shows a
            /// particular truck's scheduled cumulative round trip path
            /// (MULTILINESTRING) and the corresponding aggregated cost.
            /// Otherwise, each record shows a single scheduled truck route
            /// (LINESTRING) towards a particular demand location (store id)
            /// with its corresponding cost.  The default value is
            /// 'true'.</summary>
            public const string AGGREGATED_OUTPUT = "aggregated_output";

            /// <summary>For the <i>match_supply_demand</i> solver only. If
            /// this constraint is greater than zero (default) then the trucks
            /// will skip travelling from one demand location to another if the
            /// cost between them is greater than this number (distance or
            /// time). Zero (default) value means no check is performed.  The
            /// default value is '0.0'.</summary>
            public const string MAX_TRIP_COST = "max_trip_cost";

            /// <summary>For the <i>markov_chain</i> solver only. When true
            /// (non-default), the paths per sequence combination is checked
            /// for folding over patterns and can significantly increase the
            /// execution time depending on the chain width and the number of
            /// gps samples.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="MatchGraphRequest.Options.TRUE">TRUE</see>:</term>
            ///         <description>Filter out the folded paths.</description>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="MatchGraphRequest.Options.FALSE">FALSE</see>:</term>
            ///         <description>Do not filter out the folded
            /// paths</description>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="MatchGraphRequest.Options.FALSE">FALSE</see>.</summary>
            public const string FILTER_FOLDING_PATHS = "filter_folding_paths";

            /// <summary>For the <i>match_supply_demand</i> solver only. The
            /// unit cost per load amount to be delivered. If this value is
            /// greater than zero (default) then the additional cost of this
            /// unit load multiplied by the total dropped load will be added
            /// over to the trip cost to the demand location.  The default
            /// value is '0.0'.</summary>
            public const string UNIT_UNLOADING_COST = "unit_unloading_cost";

            /// <summary>For the <i>markov_chain</i> solver only. If specified
            /// (greater than zero), the maximum number of threads will not be
            /// greater than the specified value. It can be lower due to the
            /// memory and the number cores available. Default value of zero
            /// allows the algorithm to set the maximal number of threads
            /// within these constraints.  The default value is '0'.</summary>
            public const string MAX_NUM_THREADS = "max_num_threads";

            /// <summary>For the <i>match_supply_demand</i> solver only. If
            /// specified (greather than zero), any truck's total service cost
            /// (distance or time) will be limited by the specified value
            /// including multiple rounds (if set).  The default value is
            /// '0.0'.</summary>
            public const string TRUCK_SERVICE_LIMIT = "truck_service_limit";

            /// <summary>For the <i>match_supply_demand</i> solver only. If
            /// specified (true), all trucks can be scheduled for second rounds
            /// from their originating depots.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="MatchGraphRequest.Options.TRUE">TRUE</see>:</term>
            ///         <description>Allows reusing trucks for scheduling
            /// again.</description>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="MatchGraphRequest.Options.FALSE">FALSE</see>:</term>
            ///         <description>Trucks are scheduled only once from their
            /// depots.</description>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="MatchGraphRequest.Options.FALSE">FALSE</see>.</summary>
            public const string ENABLE_TRUCK_REUSE = "enable_truck_reuse";
        } // end struct Options


        /// <summary>Name of the underlying geospatial graph resource to match
        /// to using <paramref cref="MatchGraphRequest.sample_points" />.
        /// </summary>
        public string graph_name { get; set; }

        /// <summary>Sample points used to match to an underlying geospatial
        /// graph. Sample points must be specified using
        /// <a
        /// href="../../graph_solver/network_graph_solver.html#match-identifiers"
        /// target="_top">identifiers</a>;
        /// identifiers are grouped as
        /// <a
        /// href="../../graph_solver/network_graph_solver.html#match-combinations"
        /// target="_top">combinations</a>.
        /// Identifiers can be used with: existing column names, e.g.,
        /// 'table.column AS SAMPLE_X'; expressions, e.g.,
        /// 'ST_MAKEPOINT(table.x, table.y) AS SAMPLE_WKTPOINT'; or constant
        /// values, e.g.,
        /// '{1, 2, 10} AS SAMPLE_TRIPID'.  </summary>
        public IList<string> sample_points { get; set; } = new List<string>();

        /// <summary>The type of solver to use for graph matching.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.SolveMethod.MARKOV_CHAIN">MARKOV_CHAIN</see>:</term>
        ///         <description>Matches <paramref
        /// cref="MatchGraphRequest.sample_points" /> to the graph using the
        /// Hidden Markov Model (HMM)-based method, which conducts a range-tree
        /// closest-edge search to find the best combinations of possible road
        /// segments (<i>num_segments</i>) for each sample point to create the
        /// best route. The route is secured one point at a time while looking
        /// ahead <i>chain_width</i> number of points, so the prediction is
        /// corrected after each point. This solution type is the most accurate
        /// but also the most computationally intensive. Related options:
        /// <i>num_segments</i> and <i>chain_width</i>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.SolveMethod.MATCH_OD_PAIRS">MATCH_OD_PAIRS</see>:</term>
        ///         <description>Matches <paramref
        /// cref="MatchGraphRequest.sample_points" /> to find the most probable
        /// path between origin and destination pairs with cost
        /// constraints.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.SolveMethod.MATCH_SUPPLY_DEMAND">MATCH_SUPPLY_DEMAND</see>:</term>
        ///         <description>Matches <paramref
        /// cref="MatchGraphRequest.sample_points" /> to optimize scheduling
        /// multiple supplies (trucks) with varying sizes to varying demand
        /// sites with varying capacities per depot. Related options:
        /// <i>partial_loading</i> and <i>max_combinations</i>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.SolveMethod.MATCH_BATCH_SOLVES">MATCH_BATCH_SOLVES</see>:</term>
        ///         <description>Matches <paramref
        /// cref="MatchGraphRequest.sample_points" /> source and destination
        /// pairs for the shortest path solves in batch mode.</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="MatchGraphRequest.SolveMethod.MARKOV_CHAIN">MARKOV_CHAIN</see>.
        /// </summary>
        public string solve_method { get; set; } = SolveMethod.MARKOV_CHAIN;

        /// <summary>The name of the table used to store the results, in
        /// [schema_name.]table_name format, using standard <a
        /// href="../../concepts/tables.html#table-name-resolution"
        /// target="_top">name resolution rules</a> and meeting <a
        /// href="../../concepts/tables.html#table-naming-criteria"
        /// target="_top">table naming criteria</a>.  This table contains a <a
        /// href="../../geospatial/geo_objects.html#geospatial-tracks"
        /// target="_top">track</a> of geospatial points for the matched
        /// portion of the graph, a track ID, and a score value. Also outputs a
        /// details table containing a trip ID (that matches the track ID), the
        /// latitude/longitude pair, the timestamp the point was recorded at,
        /// and an edge ID corresponding to the matched road segment. Must not
        /// be an existing table of the same name.  The default value is
        /// ''.</summary>
        public string solution_table { get; set; } = "";

        /// <summary>Additional parameters
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.GPS_NOISE">GPS_NOISE</see>:</term>
        ///         <description>GPS noise value (in meters) to remove
        /// redundant sample points. Use -1 to disable noise reduction. The
        /// default value accounts for 95% of point variation (+ or -5 meters).
        /// The default value is '5.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.NUM_SEGMENTS">NUM_SEGMENTS</see>:</term>
        ///         <description>Maximum number of potentially matching road
        /// segments for each sample point. For the <i>markov_chain</i> solver,
        /// the default is 3.  The default value is '3'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.SEARCH_RADIUS">SEARCH_RADIUS</see>:</term>
        ///         <description>Maximum search radius used when snapping
        /// sample points onto potentially matching surrounding segments. The
        /// default value corresponds to approximately 100 meters.  The default
        /// value is '0.001'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.CHAIN_WIDTH">CHAIN_WIDTH</see>:</term>
        ///         <description>For the <i>markov_chain</i> solver only.
        /// Length of the sample points lookahead window within the Markov
        /// kernel; the larger the number, the more accurate the solution.  The
        /// default value is '9'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.SOURCE">SOURCE</see>:</term>
        ///         <description>Optional WKT starting point from <paramref
        /// cref="MatchGraphRequest.sample_points" /> for the solver. The
        /// default behavior for the endpoint is to use time to determine the
        /// starting point.  The default value is 'POINT NULL'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.DESTINATION">DESTINATION</see>:</term>
        ///         <description>Optional WKT ending point from <paramref
        /// cref="MatchGraphRequest.sample_points" /> for the solver. The
        /// default behavior for the endpoint is to use time to determine the
        /// destination point.  The default value is 'POINT
        /// NULL'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.PARTIAL_LOADING">PARTIAL_LOADING</see>:</term>
        ///         <description>For the <i>match_supply_demand</i> solver
        /// only. When false (non-default), trucks do not off-load at the
        /// demand (store) side if the remainder is less than the store's need
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.TRUE">TRUE</see>:</term>
        ///         <description>Partial off-loading at multiple store (demand)
        /// locations</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.FALSE">FALSE</see>:</term>
        ///         <description>No partial off-loading allowed if supply is
        /// less than the store's demand.</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="MatchGraphRequest.Options.TRUE">TRUE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.MAX_COMBINATIONS">MAX_COMBINATIONS</see>:</term>
        ///         <description>For the <i>match_supply_demand</i> solver
        /// only. This is the cutoff for the number of generated combinations
        /// for sequencing the demand locations - can increase this up to 2M.
        /// The default value is '10000'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.LEFT_TURN_PENALTY">LEFT_TURN_PENALTY</see>:</term>
        ///         <description>This will add an additonal weight over the
        /// edges labelled as 'left turn' if the 'add_turn' option parameter of
        /// the /create/graph was invoked at graph creation.  The default value
        /// is '0.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.RIGHT_TURN_PENALTY">RIGHT_TURN_PENALTY</see>:</term>
        ///         <description>This will add an additonal weight over the
        /// edges labelled as' right turn' if the 'add_turn' option parameter
        /// of the /create/graph was invoked at graph creation.  The default
        /// value is '0.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.INTERSECTION_PENALTY">INTERSECTION_PENALTY</see>:</term>
        ///         <description>This will add an additonal weight over the
        /// edges labelled as 'intersection' if the 'add_turn' option parameter
        /// of the /create/graph was invoked at graph creation.  The default
        /// value is '0.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.SHARP_TURN_PENALTY">SHARP_TURN_PENALTY</see>:</term>
        ///         <description>This will add an additonal weight over the
        /// edges labelled as 'sharp turn' or 'u-turn' if the 'add_turn' option
        /// parameter of the /create/graph was invoked at graph creation.  The
        /// default value is '0.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.AGGREGATED_OUTPUT">AGGREGATED_OUTPUT</see>:</term>
        ///         <description>For the <i>match_supply_demand</i> solver
        /// only. When it is true (default), each record in the output table
        /// shows a particular truck's scheduled cumulative round trip path
        /// (MULTILINESTRING) and the corresponding aggregated cost. Otherwise,
        /// each record shows a single scheduled truck route (LINESTRING)
        /// towards a particular demand location (store id) with its
        /// corresponding cost.  The default value is 'true'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.MAX_TRIP_COST">MAX_TRIP_COST</see>:</term>
        ///         <description>For the <i>match_supply_demand</i> solver
        /// only. If this constraint is greater than zero (default) then the
        /// trucks will skip travelling from one demand location to another if
        /// the cost between them is greater than this number (distance or
        /// time). Zero (default) value means no check is performed.  The
        /// default value is '0.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.FILTER_FOLDING_PATHS">FILTER_FOLDING_PATHS</see>:</term>
        ///         <description>For the <i>markov_chain</i> solver only. When
        /// true (non-default), the paths per sequence combination is checked
        /// for folding over patterns and can significantly increase the
        /// execution time depending on the chain width and the number of gps
        /// samples.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.TRUE">TRUE</see>:</term>
        ///         <description>Filter out the folded paths.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.FALSE">FALSE</see>:</term>
        ///         <description>Do not filter out the folded
        /// paths</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="MatchGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.UNIT_UNLOADING_COST">UNIT_UNLOADING_COST</see>:</term>
        ///         <description>For the <i>match_supply_demand</i> solver
        /// only. The unit cost per load amount to be delivered. If this value
        /// is greater than zero (default) then the additional cost of this
        /// unit load multiplied by the total dropped load will be added over
        /// to the trip cost to the demand location.  The default value is
        /// '0.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.MAX_NUM_THREADS">MAX_NUM_THREADS</see>:</term>
        ///         <description>For the <i>markov_chain</i> solver only. If
        /// specified (greater than zero), the maximum number of threads will
        /// not be greater than the specified value. It can be lower due to the
        /// memory and the number cores available. Default value of zero allows
        /// the algorithm to set the maximal number of threads within these
        /// constraints.  The default value is '0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.TRUCK_SERVICE_LIMIT">TRUCK_SERVICE_LIMIT</see>:</term>
        ///         <description>For the <i>match_supply_demand</i> solver
        /// only. If specified (greather than zero), any truck's total service
        /// cost (distance or time) will be limited by the specified value
        /// including multiple rounds (if set).  The default value is
        /// '0.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.ENABLE_TRUCK_REUSE">ENABLE_TRUCK_REUSE</see>:</term>
        ///         <description>For the <i>match_supply_demand</i> solver
        /// only. If specified (true), all trucks can be scheduled for second
        /// rounds from their originating depots.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.TRUE">TRUE</see>:</term>
        ///         <description>Allows reusing trucks for scheduling
        /// again.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.FALSE">FALSE</see>:</term>
        ///         <description>Trucks are scheduled only once from their
        /// depots.</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="MatchGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.</summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs a MatchGraphRequest object with default
        /// parameters.</summary>
        public MatchGraphRequest() { }

        /// <summary>Constructs a MatchGraphRequest object with the specified
        /// parameters.</summary>
        /// 
        /// <param name="graph_name">Name of the underlying geospatial graph
        /// resource to match to using <paramref
        /// cref="MatchGraphRequest.sample_points" />.  </param>
        /// <param name="sample_points">Sample points used to match to an
        /// underlying geospatial
        /// graph. Sample points must be specified using
        /// <a
        /// href="../../graph_solver/network_graph_solver.html#match-identifiers"
        /// target="_top">identifiers</a>;
        /// identifiers are grouped as
        /// <a
        /// href="../../graph_solver/network_graph_solver.html#match-combinations"
        /// target="_top">combinations</a>.
        /// Identifiers can be used with: existing column names, e.g.,
        /// 'table.column AS SAMPLE_X'; expressions, e.g.,
        /// 'ST_MAKEPOINT(table.x, table.y) AS SAMPLE_WKTPOINT'; or constant
        /// values, e.g.,
        /// '{1, 2, 10} AS SAMPLE_TRIPID'.  </param>
        /// <param name="solve_method">The type of solver to use for graph
        /// matching.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.SolveMethod.MARKOV_CHAIN">MARKOV_CHAIN</see>:</term>
        ///         <description>Matches <paramref
        /// cref="MatchGraphRequest.sample_points" /> to the graph using the
        /// Hidden Markov Model (HMM)-based method, which conducts a range-tree
        /// closest-edge search to find the best combinations of possible road
        /// segments (<i>num_segments</i>) for each sample point to create the
        /// best route. The route is secured one point at a time while looking
        /// ahead <i>chain_width</i> number of points, so the prediction is
        /// corrected after each point. This solution type is the most accurate
        /// but also the most computationally intensive. Related options:
        /// <i>num_segments</i> and <i>chain_width</i>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.SolveMethod.MATCH_OD_PAIRS">MATCH_OD_PAIRS</see>:</term>
        ///         <description>Matches <paramref
        /// cref="MatchGraphRequest.sample_points" /> to find the most probable
        /// path between origin and destination pairs with cost
        /// constraints.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.SolveMethod.MATCH_SUPPLY_DEMAND">MATCH_SUPPLY_DEMAND</see>:</term>
        ///         <description>Matches <paramref
        /// cref="MatchGraphRequest.sample_points" /> to optimize scheduling
        /// multiple supplies (trucks) with varying sizes to varying demand
        /// sites with varying capacities per depot. Related options:
        /// <i>partial_loading</i> and <i>max_combinations</i>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.SolveMethod.MATCH_BATCH_SOLVES">MATCH_BATCH_SOLVES</see>:</term>
        ///         <description>Matches <paramref
        /// cref="MatchGraphRequest.sample_points" /> source and destination
        /// pairs for the shortest path solves in batch mode.</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="MatchGraphRequest.SolveMethod.MARKOV_CHAIN">MARKOV_CHAIN</see>.
        /// </param>
        /// <param name="solution_table">The name of the table used to store
        /// the results, in [schema_name.]table_name format, using standard <a
        /// href="../../concepts/tables.html#table-name-resolution"
        /// target="_top">name resolution rules</a> and meeting <a
        /// href="../../concepts/tables.html#table-naming-criteria"
        /// target="_top">table naming criteria</a>.  This table contains a <a
        /// href="../../geospatial/geo_objects.html#geospatial-tracks"
        /// target="_top">track</a> of geospatial points for the matched
        /// portion of the graph, a track ID, and a score value. Also outputs a
        /// details table containing a trip ID (that matches the track ID), the
        /// latitude/longitude pair, the timestamp the point was recorded at,
        /// and an edge ID corresponding to the matched road segment. Must not
        /// be an existing table of the same name.  The default value is
        /// ''.</param>
        /// <param name="options">Additional parameters
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.GPS_NOISE">GPS_NOISE</see>:</term>
        ///         <description>GPS noise value (in meters) to remove
        /// redundant sample points. Use -1 to disable noise reduction. The
        /// default value accounts for 95% of point variation (+ or -5 meters).
        /// The default value is '5.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.NUM_SEGMENTS">NUM_SEGMENTS</see>:</term>
        ///         <description>Maximum number of potentially matching road
        /// segments for each sample point. For the <i>markov_chain</i> solver,
        /// the default is 3.  The default value is '3'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.SEARCH_RADIUS">SEARCH_RADIUS</see>:</term>
        ///         <description>Maximum search radius used when snapping
        /// sample points onto potentially matching surrounding segments. The
        /// default value corresponds to approximately 100 meters.  The default
        /// value is '0.001'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.CHAIN_WIDTH">CHAIN_WIDTH</see>:</term>
        ///         <description>For the <i>markov_chain</i> solver only.
        /// Length of the sample points lookahead window within the Markov
        /// kernel; the larger the number, the more accurate the solution.  The
        /// default value is '9'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.SOURCE">SOURCE</see>:</term>
        ///         <description>Optional WKT starting point from <paramref
        /// cref="MatchGraphRequest.sample_points" /> for the solver. The
        /// default behavior for the endpoint is to use time to determine the
        /// starting point.  The default value is 'POINT NULL'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.DESTINATION">DESTINATION</see>:</term>
        ///         <description>Optional WKT ending point from <paramref
        /// cref="MatchGraphRequest.sample_points" /> for the solver. The
        /// default behavior for the endpoint is to use time to determine the
        /// destination point.  The default value is 'POINT
        /// NULL'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.PARTIAL_LOADING">PARTIAL_LOADING</see>:</term>
        ///         <description>For the <i>match_supply_demand</i> solver
        /// only. When false (non-default), trucks do not off-load at the
        /// demand (store) side if the remainder is less than the store's need
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.TRUE">TRUE</see>:</term>
        ///         <description>Partial off-loading at multiple store (demand)
        /// locations</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.FALSE">FALSE</see>:</term>
        ///         <description>No partial off-loading allowed if supply is
        /// less than the store's demand.</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="MatchGraphRequest.Options.TRUE">TRUE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.MAX_COMBINATIONS">MAX_COMBINATIONS</see>:</term>
        ///         <description>For the <i>match_supply_demand</i> solver
        /// only. This is the cutoff for the number of generated combinations
        /// for sequencing the demand locations - can increase this up to 2M.
        /// The default value is '10000'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.LEFT_TURN_PENALTY">LEFT_TURN_PENALTY</see>:</term>
        ///         <description>This will add an additonal weight over the
        /// edges labelled as 'left turn' if the 'add_turn' option parameter of
        /// the /create/graph was invoked at graph creation.  The default value
        /// is '0.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.RIGHT_TURN_PENALTY">RIGHT_TURN_PENALTY</see>:</term>
        ///         <description>This will add an additonal weight over the
        /// edges labelled as' right turn' if the 'add_turn' option parameter
        /// of the /create/graph was invoked at graph creation.  The default
        /// value is '0.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.INTERSECTION_PENALTY">INTERSECTION_PENALTY</see>:</term>
        ///         <description>This will add an additonal weight over the
        /// edges labelled as 'intersection' if the 'add_turn' option parameter
        /// of the /create/graph was invoked at graph creation.  The default
        /// value is '0.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.SHARP_TURN_PENALTY">SHARP_TURN_PENALTY</see>:</term>
        ///         <description>This will add an additonal weight over the
        /// edges labelled as 'sharp turn' or 'u-turn' if the 'add_turn' option
        /// parameter of the /create/graph was invoked at graph creation.  The
        /// default value is '0.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.AGGREGATED_OUTPUT">AGGREGATED_OUTPUT</see>:</term>
        ///         <description>For the <i>match_supply_demand</i> solver
        /// only. When it is true (default), each record in the output table
        /// shows a particular truck's scheduled cumulative round trip path
        /// (MULTILINESTRING) and the corresponding aggregated cost. Otherwise,
        /// each record shows a single scheduled truck route (LINESTRING)
        /// towards a particular demand location (store id) with its
        /// corresponding cost.  The default value is 'true'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.MAX_TRIP_COST">MAX_TRIP_COST</see>:</term>
        ///         <description>For the <i>match_supply_demand</i> solver
        /// only. If this constraint is greater than zero (default) then the
        /// trucks will skip travelling from one demand location to another if
        /// the cost between them is greater than this number (distance or
        /// time). Zero (default) value means no check is performed.  The
        /// default value is '0.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.FILTER_FOLDING_PATHS">FILTER_FOLDING_PATHS</see>:</term>
        ///         <description>For the <i>markov_chain</i> solver only. When
        /// true (non-default), the paths per sequence combination is checked
        /// for folding over patterns and can significantly increase the
        /// execution time depending on the chain width and the number of gps
        /// samples.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.TRUE">TRUE</see>:</term>
        ///         <description>Filter out the folded paths.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.FALSE">FALSE</see>:</term>
        ///         <description>Do not filter out the folded
        /// paths</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="MatchGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.UNIT_UNLOADING_COST">UNIT_UNLOADING_COST</see>:</term>
        ///         <description>For the <i>match_supply_demand</i> solver
        /// only. The unit cost per load amount to be delivered. If this value
        /// is greater than zero (default) then the additional cost of this
        /// unit load multiplied by the total dropped load will be added over
        /// to the trip cost to the demand location.  The default value is
        /// '0.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.MAX_NUM_THREADS">MAX_NUM_THREADS</see>:</term>
        ///         <description>For the <i>markov_chain</i> solver only. If
        /// specified (greater than zero), the maximum number of threads will
        /// not be greater than the specified value. It can be lower due to the
        /// memory and the number cores available. Default value of zero allows
        /// the algorithm to set the maximal number of threads within these
        /// constraints.  The default value is '0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.TRUCK_SERVICE_LIMIT">TRUCK_SERVICE_LIMIT</see>:</term>
        ///         <description>For the <i>match_supply_demand</i> solver
        /// only. If specified (greather than zero), any truck's total service
        /// cost (distance or time) will be limited by the specified value
        /// including multiple rounds (if set).  The default value is
        /// '0.0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.ENABLE_TRUCK_REUSE">ENABLE_TRUCK_REUSE</see>:</term>
        ///         <description>For the <i>match_supply_demand</i> solver
        /// only. If specified (true), all trucks can be scheduled for second
        /// rounds from their originating depots.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.TRUE">TRUE</see>:</term>
        ///         <description>Allows reusing trucks for scheduling
        /// again.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="MatchGraphRequest.Options.FALSE">FALSE</see>:</term>
        ///         <description>Trucks are scheduled only once from their
        /// depots.</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="MatchGraphRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.</param>
        /// 
        public MatchGraphRequest( string graph_name,
                                  IList<string> sample_points,
                                  string solve_method = null,
                                  string solution_table = null,
                                  IDictionary<string, string> options = null)
        {
            this.graph_name = graph_name ?? "";
            this.sample_points = sample_points ?? new List<string>();
            this.solve_method = solve_method ?? SolveMethod.MARKOV_CHAIN;
            this.solution_table = solution_table ?? "";
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class MatchGraphRequest



    /// <summary>A set of results returned by <see
    /// cref="Kinetica.matchGraph(string,IList{string},string,string,IDictionary{string, string})"
    /// />.</summary>
    public class MatchGraphResponse : KineticaData
    {

        /// <summary>Indicates a successful solution.  </summary>
        public bool result { get; set; }

        /// <summary>The mean square error calculation representing the map
        /// matching score. Values closer to zero are better.  </summary>
        public float match_score { get; set; }

        /// <summary>Additional information.  </summary>
        public IDictionary<string, string> info { get; set; } = new Dictionary<string, string>();

    } // end class MatchGraphResponse




}  // end namespace kinetica
