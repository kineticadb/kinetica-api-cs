/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>A set of parameters for <see
    /// cref="Kinetica.killProc(string,IDictionary{string, string})" />.
    /// <br />
    /// Kills a running proc instance.</summary>
    public class KillProcRequest : KineticaData
    {

        /// <summary>Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="KillProcRequest.Options.RUN_TAG">RUN_TAG</see>:</term>
        ///         <description>If <paramref cref="KillProcRequest.run_id" />
        /// is specified, kill the proc instance that has a matching run ID and
        /// a matching run tag that was provided to /execute/proc. If <paramref
        /// cref="KillProcRequest.run_id" /> is not specified, kill the proc
        /// instance(s) where a matching run tag was provided to /execute/proc.
        /// The default value is ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="KillProcRequest.Options.CLEAR_EXECUTE_AT_STARTUP">CLEAR_EXECUTE_AT_STARTUP</see>:</term>
        ///         <description>If <i>true</i>, kill and remove the instance
        /// of the proc matching the auto-start run ID that was created to run
        /// when the database is started. The auto-start run ID was returned
        /// from /execute/proc and can be retrieved using /show/proc.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="KillProcRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="KillProcRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="KillProcRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.
        /// A set of string constants for the parameter <see cref="options"
        /// />.</summary>
        public struct Options
        {

            /// <summary>If <see cref="run_id" /> is specified, kill the proc
            /// instance that has a matching run ID and a matching run tag that
            /// was provided to <see
            /// cref="Kinetica.executeProc(string,IDictionary{string, string},IDictionary{string, byte[]},IList{string},IDictionary{string, IList{string}},IList{string},IDictionary{string, string})"
            /// />. If <see cref="run_id" /> is not specified, kill the proc
            /// instance(s) where a matching run tag was provided to <see
            /// cref="Kinetica.executeProc(string,IDictionary{string, string},IDictionary{string, byte[]},IList{string},IDictionary{string, IList{string}},IList{string},IDictionary{string, string})"
            /// />.  The default value is ''.</summary>
            public const string RUN_TAG = "run_tag";

            /// <summary>If <i>true</i>, kill and remove the instance of the
            /// proc matching the auto-start run ID that was created to run
            /// when the database is started. The auto-start run ID was
            /// returned from <see
            /// cref="Kinetica.executeProc(string,IDictionary{string, string},IDictionary{string, byte[]},IList{string},IDictionary{string, IList{string}},IList{string},IDictionary{string, string})"
            /// /> and can be retrieved using <see
            /// cref="Kinetica.showProc(string,IDictionary{string, string})"
            /// />.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="KillProcRequest.Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="KillProcRequest.Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="KillProcRequest.Options.FALSE">FALSE</see>.</summary>
            public const string CLEAR_EXECUTE_AT_STARTUP = "clear_execute_at_startup";
            public const string TRUE = "true";
            public const string FALSE = "false";
        } // end struct Options


        /// <summary>The run ID of a running proc instance. If a proc with a
        /// matching run ID is not found or the proc instance has already
        /// completed, no procs will be killed. If not specified, all running
        /// proc instances will be killed.  The default value is ''.</summary>
        public string run_id { get; set; } = "";

        /// <summary>Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="KillProcRequest.Options.RUN_TAG">RUN_TAG</see>:</term>
        ///         <description>If <paramref cref="KillProcRequest.run_id" />
        /// is specified, kill the proc instance that has a matching run ID and
        /// a matching run tag that was provided to /execute/proc. If <paramref
        /// cref="KillProcRequest.run_id" /> is not specified, kill the proc
        /// instance(s) where a matching run tag was provided to /execute/proc.
        /// The default value is ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="KillProcRequest.Options.CLEAR_EXECUTE_AT_STARTUP">CLEAR_EXECUTE_AT_STARTUP</see>:</term>
        ///         <description>If <i>true</i>, kill and remove the instance
        /// of the proc matching the auto-start run ID that was created to run
        /// when the database is started. The auto-start run ID was returned
        /// from /execute/proc and can be retrieved using /show/proc.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="KillProcRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="KillProcRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="KillProcRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.</summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs a KillProcRequest object with default
        /// parameters.</summary>
        public KillProcRequest() { }

        /// <summary>Constructs a KillProcRequest object with the specified
        /// parameters.</summary>
        /// 
        /// <param name="run_id">The run ID of a running proc instance. If a
        /// proc with a matching run ID is not found or the proc instance has
        /// already completed, no procs will be killed. If not specified, all
        /// running proc instances will be killed.  The default value is
        /// ''.</param>
        /// <param name="options">Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="KillProcRequest.Options.RUN_TAG">RUN_TAG</see>:</term>
        ///         <description>If <paramref cref="KillProcRequest.run_id" />
        /// is specified, kill the proc instance that has a matching run ID and
        /// a matching run tag that was provided to /execute/proc. If <paramref
        /// cref="KillProcRequest.run_id" /> is not specified, kill the proc
        /// instance(s) where a matching run tag was provided to /execute/proc.
        /// The default value is ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="KillProcRequest.Options.CLEAR_EXECUTE_AT_STARTUP">CLEAR_EXECUTE_AT_STARTUP</see>:</term>
        ///         <description>If <i>true</i>, kill and remove the instance
        /// of the proc matching the auto-start run ID that was created to run
        /// when the database is started. The auto-start run ID was returned
        /// from /execute/proc and can be retrieved using /show/proc.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="KillProcRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="KillProcRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="KillProcRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.</param>
        /// 
        public KillProcRequest( string run_id = null,
                                IDictionary<string, string> options = null)
        {
            this.run_id = run_id ?? "";
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class KillProcRequest



    /// <summary>A set of results returned by <see
    /// cref="Kinetica.killProc(string,IDictionary{string, string})"
    /// />.</summary>
    public class KillProcResponse : KineticaData
    {

        /// <summary>List of run IDs of proc instances that were killed.
        /// </summary>
        public IList<string> run_ids { get; set; } = new List<string>();

        /// <summary>Additional information.  </summary>
        public IDictionary<string, string> info { get; set; } = new Dictionary<string, string>();

    } // end class KillProcResponse




}  // end namespace kinetica
