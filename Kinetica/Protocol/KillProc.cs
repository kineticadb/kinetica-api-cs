/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>A set of parameters for <see
    /// cref="Kinetica.killProc(string,IDictionary{string, string})" />.
    /// <br />
    /// Kills a running proc instance.</summary>
    public class KillProcRequest : KineticaData
    {

        /// <summary>The run ID of the running proc instance. If the run ID is
        /// not found or the proc instance has already completed, this does
        /// nothing. If not specified, all running proc instances will be
        /// killed.  The default value is ''.</summary>
        public string run_id { get; set; } = "";

        /// <summary>Optional parameters.  The default value is an empty {@link
        /// Dictionary}.</summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs a KillProcRequest object with default
        /// parameters.</summary>
        public KillProcRequest() { }

        /// <summary>Constructs a KillProcRequest object with the specified
        /// parameters.</summary>
        /// 
        /// <param name="run_id">The run ID of the running proc instance. If
        /// the run ID is not found or the proc instance has already completed,
        /// this does nothing. If not specified, all running proc instances
        /// will be killed.  The default value is ''.</param>
        /// <param name="options">Optional parameters.  The default value is an
        /// empty {@link Dictionary}.</param>
        /// 
        public KillProcRequest( string run_id = null,
                                IDictionary<string, string> options = null)
        {
            this.run_id = run_id ?? "";
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class KillProcRequest



    /// <summary>A set of results returned by <see
    /// cref="Kinetica.killProc(string,IDictionary{string, string})"
    /// />.</summary>
    public class KillProcResponse : KineticaData
    {

        /// <summary>List of run IDs of proc instances that were killed.
        /// </summary>
        public IList<string> run_ids { get; set; } = new List<string>();

    } // end class KillProcResponse




}  // end namespace kinetica
