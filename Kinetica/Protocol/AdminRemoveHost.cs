/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;

namespace kinetica
{
    /// <summary>A set of parameters for <see
    /// cref="Kinetica.adminRemoveHost(AdminRemoveHostRequest)">Kinetica.adminRemoveHost</see>.
    /// </summary>
    /// <remarks><para>Removes a host from an existing cluster. If the host to
    /// be removed has any ranks running on it, the ranks must be removed using
    /// <see
    /// cref="Kinetica.adminRemoveRanks(AdminRemoveRanksRequest)">Kinetica.adminRemoveRanks</see>
    /// or manually switched over to a new host using <see
    /// cref="Kinetica.adminSwitchover(AdminSwitchoverRequest)">Kinetica.adminSwitchover</see>
    /// prior to host removal. If the host to be removed has the graph server
    /// or SQL planner running on it, these must be manually switched over to a
    /// new host using <see
    /// cref="Kinetica.adminSwitchover(AdminSwitchoverRequest)">Kinetica.adminSwitchover</see>.
    /// </para></remarks>
    public class AdminRemoveHostRequest : KineticaData
    {
        /// <summary>A set of string constants for the parameter <see
        /// cref="options" />.</summary>
        /// <remarks><para>Optional parameters.</para></remarks>
        public struct Options
        {
            /// <summary>If set to <see cref="Options.TRUE">TRUE</see>, only
            /// validation checks will be performed.</summary>
            /// <remarks><para>Supported values:</para>
            /// <list type="bullet">
            ///     <item>
            ///         <term><see cref="Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see cref="Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// <para>The default value is <see
            /// cref="Options.FALSE">FALSE</see>.</para></remarks>
            public const string DRY_RUN = "dry_run";

            public const string TRUE = "true";
            public const string FALSE = "false";
        } // end struct Options

        /// <summary>Identifies the host this applies to.</summary>
        /// <remarks><para>Can be the host address, or formatted as 'hostN'
        /// where N is the host number as specified in gpudb.conf</para>
        /// </remarks>
        public string host { get; set; }

        /// <summary>Optional parameters.</summary>
        /// <remarks><list type="bullet">
        ///     <item>
        ///         <term><see cref="Options.DRY_RUN">DRY_RUN</see>:</term>
        ///         <description>If set to <see cref="Options.TRUE">TRUE</see>,
        ///         only validation checks will be performed. No host is
        ///         removed.
        ///         Supported values:
        ///         <list type="bullet">
        ///             <item>
        ///                 <term><see cref="Options.TRUE">TRUE</see></term>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.FALSE">FALSE</see></term>
        ///             </item>
        ///         </list>
        ///         The default value is <see cref="Options.FALSE">FALSE</see>.
        ///         </description>
        ///     </item>
        /// </list>
        /// <para>The default value is an empty Dictionary.</para></remarks>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();

        /// <summary>Constructs an AdminRemoveHostRequest object with default
        /// parameters.</summary>
        public AdminRemoveHostRequest() { }

        /// <summary>Constructs an AdminRemoveHostRequest object with the
        /// specified parameters.</summary>
        ///
        /// <param name="host">Identifies the host this applies to. Can be the
        /// host address, or formatted as 'hostN' where N is the host number as
        /// specified in gpudb.conf</param>
        /// <param name="options">Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see cref="Options.DRY_RUN">DRY_RUN</see>:</term>
        ///         <description>If set to <see cref="Options.TRUE">TRUE</see>,
        ///         only validation checks will be performed. No host is
        ///         removed.
        ///         Supported values:
        ///         <list type="bullet">
        ///             <item>
        ///                 <term><see cref="Options.TRUE">TRUE</see></term>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.FALSE">FALSE</see></term>
        ///             </item>
        ///         </list>
        ///         The default value is <see cref="Options.FALSE">FALSE</see>.
        ///         </description>
        ///     </item>
        /// </list>
        /// The default value is an empty Dictionary.</param>
        public AdminRemoveHostRequest( string host,
                                       IDictionary<string, string> options = null)
        {
            this.host = host ?? "";
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor
    } // end class AdminRemoveHostRequest

    /// <summary>A set of results returned by <see
    /// cref="Kinetica.adminRemoveHost(AdminRemoveHostRequest)">Kinetica.adminRemoveHost</see>.
    /// </summary>
    public class AdminRemoveHostResponse : KineticaData
    {
        /// <summary>Additional information.</summary>
        public IDictionary<string, string> info { get; set; } = new Dictionary<string, string>();
    } // end class AdminRemoveHostResponse
} // end namespace kinetica
