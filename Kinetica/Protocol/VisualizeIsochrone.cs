/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>A set of parameters for <see
    /// cref="Kinetica.visualizeIsochrone(string,string,double,IList{string},IList{string},int,bool,string,IDictionary{string, string},IDictionary{string, string},IDictionary{string, string},IDictionary{string, string})"
    /// />.
    /// <br />
    /// Generate an image containing isolines for travel results using an
    /// existing graph. Isolines represent curves of equal cost, with cost
    /// typically referring to the time or distance assigned as the weights of
    /// the underlying graph. See <a
    /// href="../../graph_solver/network_graph_solver.html"
    /// target="_top">Network Graphs & Solvers</a> for more information on
    /// graphs.
    /// .</summary>
    public class VisualizeIsochroneRequest : KineticaData
    {

        /// <summary>If set to <i>true</i>, generates a PNG image of the
        /// isochrones in the response.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.GenerateImage.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.GenerateImage.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.GenerateImage.TRUE">TRUE</see>.
        /// A set of string constants for the parameter <see
        /// cref="generate_image" />.</summary>
        public struct GenerateImage
        {
            public const string TRUE = "true";
            public const string FALSE = "false";
        } // end struct GenerateImage


        /// <summary>Various style related options of the isochrone image.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.LINE_SIZE">LINE_SIZE</see>:</term>
        ///         <description>The width of the contour lines in pixels.  The
        /// default value is '3'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.COLOR">COLOR</see>:</term>
        ///         <description>Color of generated isolines. All color values
        /// must be in the format RRGGBB or AARRGGBB (to specify the alpha
        /// value). If alpha is specified and flooded contours are enabled, it
        /// will be used for as the transparency of the latter.  The default
        /// value is 'FF696969'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BG_COLOR">BG_COLOR</see>:</term>
        ///         <description>When <paramref
        /// cref="VisualizeIsochroneRequest.generate_image" /> is set to
        /// <i>true</i>, background color of the generated image. All color
        /// values must be in the format RRGGBB or AARRGGBB (to specify the
        /// alpha value).  The default value is '00000000'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.TEXT_COLOR">TEXT_COLOR</see>:</term>
        ///         <description>When <i>add_labels</i> is set to <i>true</i>,
        /// color for the labels. All color values must be in the format RRGGBB
        /// or AARRGGBB (to specify the alpha value).  The default value is
        /// 'FF000000'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.COLORMAP">COLORMAP</see>:</term>
        ///         <description>Colormap for contours or fill-in regions when
        /// applicable. All color values must be in the format RRGGBB or
        /// AARRGGBB (to specify the alpha value)
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.JET">JET</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.ACCENT">ACCENT</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.AFMHOT">AFMHOT</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.AUTUMN">AUTUMN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BINARY">BINARY</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BLUES">BLUES</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BONE">BONE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BRBG">BRBG</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BRG">BRG</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BUGN">BUGN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BUPU">BUPU</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BWR">BWR</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.CMRMAP">CMRMAP</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.COOL">COOL</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.COOLWARM">COOLWARM</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.COPPER">COPPER</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.CUBEHELIX">CUBEHELIX</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.DARK2">DARK2</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.FLAG">FLAG</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_EARTH">GIST_EARTH</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_GRAY">GIST_GRAY</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_HEAT">GIST_HEAT</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_NCAR">GIST_NCAR</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_RAINBOW">GIST_RAINBOW</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_STERN">GIST_STERN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_YARG">GIST_YARG</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GNBU">GNBU</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GNUPLOT2">GNUPLOT2</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GNUPLOT">GNUPLOT</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GRAY">GRAY</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GREENS">GREENS</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GREYS">GREYS</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.HOT">HOT</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.HSV">HSV</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.INFERNO">INFERNO</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.MAGMA">MAGMA</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.NIPY_SPECTRAL">NIPY_SPECTRAL</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.OCEAN">OCEAN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.ORANGES">ORANGES</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.ORRD">ORRD</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PAIRED">PAIRED</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PASTEL1">PASTEL1</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PASTEL2">PASTEL2</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PINK">PINK</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PIYG">PIYG</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PLASMA">PLASMA</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PRGN">PRGN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PRISM">PRISM</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PUBU">PUBU</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PUBUGN">PUBUGN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PUOR">PUOR</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PURD">PURD</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PURPLES">PURPLES</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.RAINBOW">RAINBOW</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.RDBU">RDBU</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.RDGY">RDGY</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.RDPU">RDPU</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.RDYLBU">RDYLBU</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.RDYLGN">RDYLGN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.REDS">REDS</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.SEISMIC">SEISMIC</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.SET1">SET1</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.SET2">SET2</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.SET3">SET3</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.SPECTRAL">SPECTRAL</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.SPRING">SPRING</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.SUMMER">SUMMER</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.TERRAIN">TERRAIN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.VIRIDIS">VIRIDIS</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.WINTER">WINTER</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.WISTIA">WISTIA</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.YLGN">YLGN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.YLGNBU">YLGNBU</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.YLORBR">YLORBR</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.YLORRD">YLORRD</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.StyleOptions.JET">JET</see>.</description>
        ///     </item>
        /// </list>
        /// <br />
        /// A set of string constants for the parameter <see
        /// cref="style_options" />.</summary>
        public struct StyleOptions
        {

            /// <summary>The width of the contour lines in pixels.  The default
            /// value is '3'.</summary>
            public const string LINE_SIZE = "line_size";

            /// <summary>Color of generated isolines. All color values must be
            /// in the format RRGGBB or AARRGGBB (to specify the alpha value).
            /// If alpha is specified and flooded contours are enabled, it will
            /// be used for as the transparency of the latter.  The default
            /// value is 'FF696969'.</summary>
            public const string COLOR = "color";

            /// <summary>When <see cref="generate_image" /> is set to
            /// <i>true</i>, background color of the generated image. All color
            /// values must be in the format RRGGBB or AARRGGBB (to specify the
            /// alpha value).  The default value is '00000000'.</summary>
            public const string BG_COLOR = "bg_color";

            /// <summary>When <i>add_labels</i> is set to <i>true</i>, color
            /// for the labels. All color values must be in the format RRGGBB
            /// or AARRGGBB (to specify the alpha value).  The default value is
            /// 'FF000000'.</summary>
            public const string TEXT_COLOR = "text_color";

            /// <summary>Colormap for contours or fill-in regions when
            /// applicable. All color values must be in the format RRGGBB or
            /// AARRGGBB (to specify the alpha value)
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.JET">JET</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.ACCENT">ACCENT</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.AFMHOT">AFMHOT</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.AUTUMN">AUTUMN</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.BINARY">BINARY</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.BLUES">BLUES</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.BONE">BONE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.BRBG">BRBG</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.BRG">BRG</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.BUGN">BUGN</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.BUPU">BUPU</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.BWR">BWR</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.CMRMAP">CMRMAP</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.COOL">COOL</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.COOLWARM">COOLWARM</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.COPPER">COPPER</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.CUBEHELIX">CUBEHELIX</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.DARK2">DARK2</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.FLAG">FLAG</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_EARTH">GIST_EARTH</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_GRAY">GIST_GRAY</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_HEAT">GIST_HEAT</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_NCAR">GIST_NCAR</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_RAINBOW">GIST_RAINBOW</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_STERN">GIST_STERN</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_YARG">GIST_YARG</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.GNBU">GNBU</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.GNUPLOT2">GNUPLOT2</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.GNUPLOT">GNUPLOT</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.GRAY">GRAY</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.GREENS">GREENS</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.GREYS">GREYS</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.HOT">HOT</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.HSV">HSV</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.INFERNO">INFERNO</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.MAGMA">MAGMA</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.NIPY_SPECTRAL">NIPY_SPECTRAL</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.OCEAN">OCEAN</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.ORANGES">ORANGES</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.ORRD">ORRD</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.PAIRED">PAIRED</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.PASTEL1">PASTEL1</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.PASTEL2">PASTEL2</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.PINK">PINK</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.PIYG">PIYG</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.PLASMA">PLASMA</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.PRGN">PRGN</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.PRISM">PRISM</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.PUBU">PUBU</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.PUBUGN">PUBUGN</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.PUOR">PUOR</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.PURD">PURD</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.PURPLES">PURPLES</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.RAINBOW">RAINBOW</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.RDBU">RDBU</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.RDGY">RDGY</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.RDPU">RDPU</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.RDYLBU">RDYLBU</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.RDYLGN">RDYLGN</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.REDS">REDS</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.SEISMIC">SEISMIC</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.SET1">SET1</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.SET2">SET2</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.SET3">SET3</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.SPECTRAL">SPECTRAL</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.SPRING">SPRING</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.SUMMER">SUMMER</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.TERRAIN">TERRAIN</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.VIRIDIS">VIRIDIS</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.WINTER">WINTER</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.WISTIA">WISTIA</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.YLGN">YLGN</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.YLGNBU">YLGNBU</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.YLORBR">YLORBR</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.StyleOptions.YLORRD">YLORRD</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="VisualizeIsochroneRequest.StyleOptions.JET">JET</see>.</summary>
            public const string COLORMAP = "colormap";
            public const string JET = "jet";
            public const string ACCENT = "accent";
            public const string AFMHOT = "afmhot";
            public const string AUTUMN = "autumn";
            public const string BINARY = "binary";
            public const string BLUES = "blues";
            public const string BONE = "bone";
            public const string BRBG = "brbg";
            public const string BRG = "brg";
            public const string BUGN = "bugn";
            public const string BUPU = "bupu";
            public const string BWR = "bwr";
            public const string CMRMAP = "cmrmap";
            public const string COOL = "cool";
            public const string COOLWARM = "coolwarm";
            public const string COPPER = "copper";
            public const string CUBEHELIX = "cubehelix";
            public const string DARK2 = "dark2";
            public const string FLAG = "flag";
            public const string GIST_EARTH = "gist_earth";
            public const string GIST_GRAY = "gist_gray";
            public const string GIST_HEAT = "gist_heat";
            public const string GIST_NCAR = "gist_ncar";
            public const string GIST_RAINBOW = "gist_rainbow";
            public const string GIST_STERN = "gist_stern";
            public const string GIST_YARG = "gist_yarg";
            public const string GNBU = "gnbu";
            public const string GNUPLOT2 = "gnuplot2";
            public const string GNUPLOT = "gnuplot";
            public const string GRAY = "gray";
            public const string GREENS = "greens";
            public const string GREYS = "greys";
            public const string HOT = "hot";
            public const string HSV = "hsv";
            public const string INFERNO = "inferno";
            public const string MAGMA = "magma";
            public const string NIPY_SPECTRAL = "nipy_spectral";
            public const string OCEAN = "ocean";
            public const string ORANGES = "oranges";
            public const string ORRD = "orrd";
            public const string PAIRED = "paired";
            public const string PASTEL1 = "pastel1";
            public const string PASTEL2 = "pastel2";
            public const string PINK = "pink";
            public const string PIYG = "piyg";
            public const string PLASMA = "plasma";
            public const string PRGN = "prgn";
            public const string PRISM = "prism";
            public const string PUBU = "pubu";
            public const string PUBUGN = "pubugn";
            public const string PUOR = "puor";
            public const string PURD = "purd";
            public const string PURPLES = "purples";
            public const string RAINBOW = "rainbow";
            public const string RDBU = "rdbu";
            public const string RDGY = "rdgy";
            public const string RDPU = "rdpu";
            public const string RDYLBU = "rdylbu";
            public const string RDYLGN = "rdylgn";
            public const string REDS = "reds";
            public const string SEISMIC = "seismic";
            public const string SET1 = "set1";
            public const string SET2 = "set2";
            public const string SET3 = "set3";
            public const string SPECTRAL = "spectral";
            public const string SPRING = "spring";
            public const string SUMMER = "summer";
            public const string TERRAIN = "terrain";
            public const string VIRIDIS = "viridis";
            public const string WINTER = "winter";
            public const string WISTIA = "wistia";
            public const string YLGN = "ylgn";
            public const string YLGNBU = "ylgnbu";
            public const string YLORBR = "ylorbr";
            public const string YLORRD = "ylorrd";
        } // end struct StyleOptions


        /// <summary>Solver specific parameters
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.SolveOptions.REMOVE_PREVIOUS_RESTRICTIONS">REMOVE_PREVIOUS_RESTRICTIONS</see>:</term>
        ///         <description>Ignore the restrictions applied to the graph
        /// during the creation stage and only use the restrictions specified
        /// in this request if set to <i>true</i>.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.SolveOptions.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.SolveOptions.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.SolveOptions.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.SolveOptions.RESTRICTION_THRESHOLD_VALUE">RESTRICTION_THRESHOLD_VALUE</see>:</term>
        ///         <description>Value-based restriction comparison. Any node
        /// or edge with a 'RESTRICTIONS_VALUECOMPARED' value greater than the
        /// <i>restriction_threshold_value</i> will not be included in the
        /// solution.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.SolveOptions.UNIFORM_WEIGHTS">UNIFORM_WEIGHTS</see>:</term>
        ///         <description>When specified, assigns the given value to all
        /// the edges in the graph. Note that weights provided in <paramref
        /// cref="VisualizeIsochroneRequest.weights_on_edges" /> will override
        /// this value.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.
        /// A set of string constants for the parameter <see
        /// cref="solve_options" />.</summary>
        public struct SolveOptions
        {

            /// <summary>Ignore the restrictions applied to the graph during
            /// the creation stage and only use the restrictions specified in
            /// this request if set to <i>true</i>.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.SolveOptions.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.SolveOptions.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="VisualizeIsochroneRequest.SolveOptions.FALSE">FALSE</see>.</summary>
            public const string REMOVE_PREVIOUS_RESTRICTIONS = "remove_previous_restrictions";
            public const string TRUE = "true";
            public const string FALSE = "false";

            /// <summary>Value-based restriction comparison. Any node or edge
            /// with a 'RESTRICTIONS_VALUECOMPARED' value greater than the
            /// <i>restriction_threshold_value</i> will not be included in the
            /// solution.</summary>
            public const string RESTRICTION_THRESHOLD_VALUE = "restriction_threshold_value";

            /// <summary>When specified, assigns the given value to all the
            /// edges in the graph. Note that weights provided in <see
            /// cref="weights_on_edges" /> will override this value.</summary>
            public const string UNIFORM_WEIGHTS = "uniform_weights";
        } // end struct SolveOptions


        /// <summary>Solver specific parameters
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.PROJECTION">PROJECTION</see>:</term>
        ///         <description>Spatial Reference System (i.e. EPSG Code).
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions._3857">_3857</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions._102100">_102100</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions._900913">_900913</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.EPSG_4326">EPSG_4326</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.PLATE_CARREE">PLATE_CARREE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.EPSG_900913">EPSG_900913</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.EPSG_102100">EPSG_102100</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.EPSG_3857">EPSG_3857</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.WEB_MERCATOR">WEB_MERCATOR</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.ContourOptions.PLATE_CARREE">PLATE_CARREE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.WIDTH">WIDTH</see>:</term>
        ///         <description>When <paramref
        /// cref="VisualizeIsochroneRequest.generate_image" /> is set to
        /// <i>true</i>, width of the generated image.  The default value is
        /// '512'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.HEIGHT">HEIGHT</see>:</term>
        ///         <description>When <paramref
        /// cref="VisualizeIsochroneRequest.generate_image" /> is set to
        /// <i>true</i>, height of the generated image. If the default value is
        /// used, the <i>height</i> is set to the value resulting from
        /// multiplying the aspect ratio by the <i>width</i>.  The default
        /// value is '-1'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.SEARCH_RADIUS">SEARCH_RADIUS</see>:</term>
        ///         <description>When interpolating the graph solution to
        /// generate the isochrone, neighborhood of influence of sample data
        /// (in percent of the image/grid).  The default value is
        /// '20'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.GRID_SIZE">GRID_SIZE</see>:</term>
        ///         <description>When interpolating the graph solution to
        /// generate the isochrone, number of subdivisions along the x axis
        /// when building the grid (the y is computed using the aspect ratio of
        /// the output image).  The default value is '100'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.COLOR_ISOLINES">COLOR_ISOLINES</see>:</term>
        ///         <description>Color each isoline according to the colormap;
        /// otherwise, use the foreground color.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.ContourOptions.TRUE">TRUE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.ADD_LABELS">ADD_LABELS</see>:</term>
        ///         <description>If set to <i>true</i>, add labels to the
        /// isolines.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.ContourOptions.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.LABELS_FONT_SIZE">LABELS_FONT_SIZE</see>:</term>
        ///         <description>When <i>add_labels</i> is set to <i>true</i>,
        /// size of the font (in pixels) to use for labels.  The default value
        /// is '12'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.LABELS_FONT_FAMILY">LABELS_FONT_FAMILY</see>:</term>
        ///         <description>When <i>add_labels</i> is set to <i>true</i>,
        /// font name to be used when adding labels.  The default value is
        /// 'arial'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.LABELS_SEARCH_WINDOW">LABELS_SEARCH_WINDOW</see>:</term>
        ///         <description>When <i>add_labels</i> is set to <i>true</i>,
        /// a search window is used to rate the local quality of each isoline.
        /// Smooth, continuous, long stretches with relatively flat angles are
        /// favored. The provided value is multiplied by the
        /// <i>labels_font_size</i> to calculate the final window size.  The
        /// default value is '4'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.LABELS_INTRALEVEL_SEPARATION">LABELS_INTRALEVEL_SEPARATION</see>:</term>
        ///         <description>When <i>add_labels</i> is set to <i>true</i>,
        /// this value determines the  distance (in multiples of the
        /// <i>labels_font_size</i>) to use when separating labels of different
        /// values.  The default value is '4'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.LABELS_INTERLEVEL_SEPARATION">LABELS_INTERLEVEL_SEPARATION</see>:</term>
        ///         <description>When <i>add_labels</i> is set to <i>true</i>,
        /// this value determines the distance (in percent of the total window
        /// size) to use when separating labels of the same value.  The default
        /// value is '20'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.LABELS_MAX_ANGLE">LABELS_MAX_ANGLE</see>:</term>
        ///         <description>When <i>add_labels</i> is set to <i>true</i>,
        /// maximum angle (in degrees) from the vertical to use when adding
        /// labels.  The default value is '60'.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.
        /// A set of string constants for the parameter <see
        /// cref="contour_options" />.</summary>
        public struct ContourOptions
        {

            /// <summary>Spatial Reference System (i.e. EPSG Code).
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.ContourOptions._3857">_3857</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.ContourOptions._102100">_102100</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.ContourOptions._900913">_900913</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.ContourOptions.EPSG_4326">EPSG_4326</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.ContourOptions.PLATE_CARREE">PLATE_CARREE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.ContourOptions.EPSG_900913">EPSG_900913</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.ContourOptions.EPSG_102100">EPSG_102100</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.ContourOptions.EPSG_3857">EPSG_3857</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.ContourOptions.WEB_MERCATOR">WEB_MERCATOR</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="VisualizeIsochroneRequest.ContourOptions.PLATE_CARREE">PLATE_CARREE</see>.</summary>
            public const string PROJECTION = "projection";
            public const string _3857 = "3857";
            public const string _102100 = "102100";
            public const string _900913 = "900913";
            public const string EPSG_4326 = "EPSG:4326";
            public const string PLATE_CARREE = "PLATE_CARREE";
            public const string EPSG_900913 = "EPSG:900913";
            public const string EPSG_102100 = "EPSG:102100";
            public const string EPSG_3857 = "EPSG:3857";
            public const string WEB_MERCATOR = "WEB_MERCATOR";

            /// <summary>When <see cref="generate_image" /> is set to
            /// <i>true</i>, width of the generated image.  The default value
            /// is '512'.</summary>
            public const string WIDTH = "width";

            /// <summary>When <see cref="generate_image" /> is set to
            /// <i>true</i>, height of the generated image. If the default
            /// value is used, the <i>height</i> is set to the value resulting
            /// from multiplying the aspect ratio by the <i>width</i>.  The
            /// default value is '-1'.</summary>
            public const string HEIGHT = "height";

            /// <summary>When interpolating the graph solution to generate the
            /// isochrone, neighborhood of influence of sample data (in percent
            /// of the image/grid).  The default value is '20'.</summary>
            public const string SEARCH_RADIUS = "search_radius";

            /// <summary>When interpolating the graph solution to generate the
            /// isochrone, number of subdivisions along the x axis when
            /// building the grid (the y is computed using the aspect ratio of
            /// the output image).  The default value is '100'.</summary>
            public const string GRID_SIZE = "grid_size";

            /// <summary>Color each isoline according to the colormap;
            /// otherwise, use the foreground color.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.ContourOptions.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.ContourOptions.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="VisualizeIsochroneRequest.ContourOptions.TRUE">TRUE</see>.</summary>
            public const string COLOR_ISOLINES = "color_isolines";
            public const string TRUE = "true";
            public const string FALSE = "false";

            /// <summary>If set to <i>true</i>, add labels to the isolines.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.ContourOptions.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.ContourOptions.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="VisualizeIsochroneRequest.ContourOptions.FALSE">FALSE</see>.</summary>
            public const string ADD_LABELS = "add_labels";

            /// <summary>When <i>add_labels</i> is set to <i>true</i>, size of
            /// the font (in pixels) to use for labels.  The default value is
            /// '12'.</summary>
            public const string LABELS_FONT_SIZE = "labels_font_size";

            /// <summary>When <i>add_labels</i> is set to <i>true</i>, font
            /// name to be used when adding labels.  The default value is
            /// 'arial'.</summary>
            public const string LABELS_FONT_FAMILY = "labels_font_family";

            /// <summary>When <i>add_labels</i> is set to <i>true</i>, a search
            /// window is used to rate the local quality of each isoline.
            /// Smooth, continuous, long stretches with relatively flat angles
            /// are favored. The provided value is multiplied by the
            /// <i>labels_font_size</i> to calculate the final window size.
            /// The default value is '4'.</summary>
            public const string LABELS_SEARCH_WINDOW = "labels_search_window";

            /// <summary>When <i>add_labels</i> is set to <i>true</i>, this
            /// value determines the  distance (in multiples of the
            /// <i>labels_font_size</i>) to use when separating labels of
            /// different values.  The default value is '4'.</summary>
            public const string LABELS_INTRALEVEL_SEPARATION = "labels_intralevel_separation";

            /// <summary>When <i>add_labels</i> is set to <i>true</i>, this
            /// value determines the distance (in percent of the total window
            /// size) to use when separating labels of the same value.  The
            /// default value is '20'.</summary>
            public const string LABELS_INTERLEVEL_SEPARATION = "labels_interlevel_separation";

            /// <summary>When <i>add_labels</i> is set to <i>true</i>, maximum
            /// angle (in degrees) from the vertical to use when adding labels.
            /// The default value is '60'.</summary>
            public const string LABELS_MAX_ANGLE = "labels_max_angle";
        } // end struct ContourOptions


        /// <summary>Additional parameters
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.SOLVE_TABLE">SOLVE_TABLE</see>:</term>
        ///         <description>Name of the table to host intermediate solve
        /// results containing the position and cost for each vertex in the
        /// graph. If the default value is used, a temporary table is created
        /// and deleted once the solution is calculated.  The default value is
        /// ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.IS_REPLICATED">IS_REPLICATED</see>:</term>
        ///         <description>If set to <i>true</i>, replicate the
        /// <i>solve_table</i>.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.Options.TRUE">TRUE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.DATA_MIN_X">DATA_MIN_X</see>:</term>
        ///         <description>Lower bound for the x values. If not provided,
        /// it will be computed from the bounds of the input
        /// data.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.DATA_MAX_X">DATA_MAX_X</see>:</term>
        ///         <description>Upper bound for the x values. If not provided,
        /// it will be computed from the bounds of the input
        /// data.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.DATA_MIN_Y">DATA_MIN_Y</see>:</term>
        ///         <description>Lower bound for the y values. If not provided,
        /// it will be computed from the bounds of the input
        /// data.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.DATA_MAX_Y">DATA_MAX_Y</see>:</term>
        ///         <description>Upper bound for the y values. If not provided,
        /// it will be computed from the bounds of the input
        /// data.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.CONCAVITY_LEVEL">CONCAVITY_LEVEL</see>:</term>
        ///         <description>Factor to qualify the concavity of the
        /// isochrone curves. The lower the value, the more convex (with '0'
        /// being completely convex and '1' being the most concave).  The
        /// default value is '0.5'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.USE_PRIORITY_QUEUE_SOLVERS">USE_PRIORITY_QUEUE_SOLVERS</see>:</term>
        ///         <description>sets the solver methods explicitly if true
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.TRUE">TRUE</see>:</term>
        ///         <description>uses the solvers scheduled for 'shortest_path'
        /// and 'inverse_shortest_path' based on solve_direction</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.FALSE">FALSE</see>:</term>
        ///         <description>uses the solvers 'priority_queue' and
        /// 'inverse_priority_queue' based on solve_direction</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.SOLVE_DIRECTION">SOLVE_DIRECTION</see>:</term>
        ///         <description>Specify whether we are going to the source
        /// node, or starting from it.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.FROM_SOURCE">FROM_SOURCE</see>:</term>
        ///         <description>Shortest path to get to the source (inverse
        /// Dijkstra)</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.TO_SOURCE">TO_SOURCE</see>:</term>
        ///         <description>Shortest path to source
        /// (Dijkstra)</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.Options.FROM_SOURCE">FROM_SOURCE</see>.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.
        /// A set of string constants for the parameter <see cref="options"
        /// />.</summary>
        public struct Options
        {

            /// <summary>Name of the table to host intermediate solve results
            /// containing the position and cost for each vertex in the graph.
            /// If the default value is used, a temporary table is created and
            /// deleted once the solution is calculated.  The default value is
            /// ''.</summary>
            public const string SOLVE_TABLE = "solve_table";

            /// <summary>If set to <i>true</i>, replicate the
            /// <i>solve_table</i>.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="VisualizeIsochroneRequest.Options.TRUE">TRUE</see>.</summary>
            public const string IS_REPLICATED = "is_replicated";

            /// <summary>uses the solvers scheduled for 'shortest_path' and
            /// 'inverse_shortest_path' based on solve_direction</summary>
            public const string TRUE = "true";

            /// <summary>uses the solvers 'priority_queue' and
            /// 'inverse_priority_queue' based on solve_direction</summary>
            public const string FALSE = "false";

            /// <summary>Lower bound for the x values. If not provided, it will
            /// be computed from the bounds of the input data.</summary>
            public const string DATA_MIN_X = "data_min_x";

            /// <summary>Upper bound for the x values. If not provided, it will
            /// be computed from the bounds of the input data.</summary>
            public const string DATA_MAX_X = "data_max_x";

            /// <summary>Lower bound for the y values. If not provided, it will
            /// be computed from the bounds of the input data.</summary>
            public const string DATA_MIN_Y = "data_min_y";

            /// <summary>Upper bound for the y values. If not provided, it will
            /// be computed from the bounds of the input data.</summary>
            public const string DATA_MAX_Y = "data_max_y";

            /// <summary>Factor to qualify the concavity of the isochrone
            /// curves. The lower the value, the more convex (with '0' being
            /// completely convex and '1' being the most concave).  The default
            /// value is '0.5'.</summary>
            public const string CONCAVITY_LEVEL = "concavity_level";

            /// <summary>sets the solver methods explicitly if true
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.Options.TRUE">TRUE</see>:</term>
            ///         <description>uses the solvers scheduled for
            /// 'shortest_path' and 'inverse_shortest_path' based on
            /// solve_direction</description>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.Options.FALSE">FALSE</see>:</term>
            ///         <description>uses the solvers 'priority_queue' and
            /// 'inverse_priority_queue' based on solve_direction</description>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="VisualizeIsochroneRequest.Options.FALSE">FALSE</see>.</summary>
            public const string USE_PRIORITY_QUEUE_SOLVERS = "use_priority_queue_solvers";

            /// <summary>Specify whether we are going to the source node, or
            /// starting from it.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.Options.FROM_SOURCE">FROM_SOURCE</see>:</term>
            ///         <description>Shortest path to get to the source
            /// (inverse Dijkstra)</description>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeIsochroneRequest.Options.TO_SOURCE">TO_SOURCE</see>:</term>
            ///         <description>Shortest path to source
            /// (Dijkstra)</description>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="VisualizeIsochroneRequest.Options.FROM_SOURCE">FROM_SOURCE</see>.</summary>
            public const string SOLVE_DIRECTION = "solve_direction";

            /// <summary>Shortest path to get to the source (inverse
            /// Dijkstra)</summary>
            public const string FROM_SOURCE = "from_source";

            /// <summary>Shortest path to source (Dijkstra)</summary>
            public const string TO_SOURCE = "to_source";
        } // end struct Options


        /// <summary>Name of the graph on which the isochrone is to be
        /// computed.  </summary>
        public string graph_name { get; set; }

        /// <summary>Starting vertex on the underlying graph from/to which the
        /// isochrones are created.  </summary>
        public string source_node { get; set; }

        /// <summary>Extent of the search radius around <paramref
        /// cref="VisualizeIsochroneRequest.source_node" />. Set to '-1.0' for
        /// unrestricted search radius.  The default value is -1.0.</summary>
        public double max_solution_radius { get; set; } = -1.0;

        /// <summary>Additional weights to apply to the edges of an existing
        /// graph. Weights must be specified using <a
        /// href="../../graph_solver/network_graph_solver.html#identifiers"
        /// target="_top">identifiers</a>; identifiers are grouped as <a
        /// href="../../graph_solver/network_graph_solver.html#id-combos"
        /// target="_top">combinations</a>. Identifiers can be used with
        /// existing column names, e.g., 'table.column AS WEIGHTS_EDGE_ID', or
        /// expressions, e.g., 'ST_LENGTH(wkt) AS WEIGHTS_VALUESPECIFIED'. Any
        /// provided weights will be added (in the case of
        /// 'WEIGHTS_VALUESPECIFIED') to or multiplied with (in the case of
        /// 'WEIGHTS_FACTORSPECIFIED') the existing weight(s).  The default
        /// value is an empty {@link List}.</summary>
        public IList<string> weights_on_edges { get; set; } = new List<string>();

        /// <summary>Additional restrictions to apply to the nodes/edges of an
        /// existing graph. Restrictions must be specified using <a
        /// href="../../graph_solver/network_graph_solver.html#identifiers"
        /// target="_top">identifiers</a>; identifiers are grouped as <a
        /// href="../../graph_solver/network_graph_solver.html#id-combos"
        /// target="_top">combinations</a>. Identifiers can be used with
        /// existing column names, e.g., 'table.column AS
        /// RESTRICTIONS_EDGE_ID', or expressions, e.g., 'column/2 AS
        /// RESTRICTIONS_VALUECOMPARED'. If <i>remove_previous_restrictions</i>
        /// is set to <i>true</i>, any provided restrictions will replace the
        /// existing restrictions. If <i>remove_previous_restrictions</i> is
        /// set to <i>false</i>, any provided restrictions will be added (in
        /// the case of 'RESTRICTIONS_VALUECOMPARED') to or replaced (in the
        /// case of 'RESTRICTIONS_ONOFFCOMPARED').  The default value is an
        /// empty {@link List}.</summary>
        public IList<string> restrictions { get; set; } = new List<string>();

        /// <summary>Number of equally-separated isochrones to compute.  The
        /// default value is 1.</summary>
        public int num_levels { get; set; } = 1;

        /// <summary>If set to <i>true</i>, generates a PNG image of the
        /// isochrones in the response.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.GenerateImage.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.GenerateImage.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.GenerateImage.TRUE">TRUE</see>.
        /// </summary>
        public bool generate_image { get; set; } = true;

        /// <summary>Name of the table to output the isochrones, containing
        /// levels and their corresponding WKT geometry. If no value is
        /// provided, the table is not generated.  The default value is
        /// ''.</summary>
        public string levels_table { get; set; } = "";

        /// <summary>Various style related options of the isochrone image.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.LINE_SIZE">LINE_SIZE</see>:</term>
        ///         <description>The width of the contour lines in pixels.  The
        /// default value is '3'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.COLOR">COLOR</see>:</term>
        ///         <description>Color of generated isolines. All color values
        /// must be in the format RRGGBB or AARRGGBB (to specify the alpha
        /// value). If alpha is specified and flooded contours are enabled, it
        /// will be used for as the transparency of the latter.  The default
        /// value is 'FF696969'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BG_COLOR">BG_COLOR</see>:</term>
        ///         <description>When <paramref
        /// cref="VisualizeIsochroneRequest.generate_image" /> is set to
        /// <i>true</i>, background color of the generated image. All color
        /// values must be in the format RRGGBB or AARRGGBB (to specify the
        /// alpha value).  The default value is '00000000'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.TEXT_COLOR">TEXT_COLOR</see>:</term>
        ///         <description>When <i>add_labels</i> is set to <i>true</i>,
        /// color for the labels. All color values must be in the format RRGGBB
        /// or AARRGGBB (to specify the alpha value).  The default value is
        /// 'FF000000'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.COLORMAP">COLORMAP</see>:</term>
        ///         <description>Colormap for contours or fill-in regions when
        /// applicable. All color values must be in the format RRGGBB or
        /// AARRGGBB (to specify the alpha value)
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.JET">JET</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.ACCENT">ACCENT</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.AFMHOT">AFMHOT</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.AUTUMN">AUTUMN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BINARY">BINARY</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BLUES">BLUES</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BONE">BONE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BRBG">BRBG</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BRG">BRG</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BUGN">BUGN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BUPU">BUPU</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BWR">BWR</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.CMRMAP">CMRMAP</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.COOL">COOL</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.COOLWARM">COOLWARM</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.COPPER">COPPER</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.CUBEHELIX">CUBEHELIX</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.DARK2">DARK2</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.FLAG">FLAG</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_EARTH">GIST_EARTH</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_GRAY">GIST_GRAY</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_HEAT">GIST_HEAT</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_NCAR">GIST_NCAR</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_RAINBOW">GIST_RAINBOW</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_STERN">GIST_STERN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_YARG">GIST_YARG</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GNBU">GNBU</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GNUPLOT2">GNUPLOT2</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GNUPLOT">GNUPLOT</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GRAY">GRAY</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GREENS">GREENS</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GREYS">GREYS</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.HOT">HOT</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.HSV">HSV</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.INFERNO">INFERNO</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.MAGMA">MAGMA</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.NIPY_SPECTRAL">NIPY_SPECTRAL</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.OCEAN">OCEAN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.ORANGES">ORANGES</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.ORRD">ORRD</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PAIRED">PAIRED</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PASTEL1">PASTEL1</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PASTEL2">PASTEL2</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PINK">PINK</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PIYG">PIYG</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PLASMA">PLASMA</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PRGN">PRGN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PRISM">PRISM</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PUBU">PUBU</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PUBUGN">PUBUGN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PUOR">PUOR</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PURD">PURD</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PURPLES">PURPLES</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.RAINBOW">RAINBOW</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.RDBU">RDBU</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.RDGY">RDGY</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.RDPU">RDPU</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.RDYLBU">RDYLBU</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.RDYLGN">RDYLGN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.REDS">REDS</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.SEISMIC">SEISMIC</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.SET1">SET1</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.SET2">SET2</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.SET3">SET3</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.SPECTRAL">SPECTRAL</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.SPRING">SPRING</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.SUMMER">SUMMER</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.TERRAIN">TERRAIN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.VIRIDIS">VIRIDIS</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.WINTER">WINTER</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.WISTIA">WISTIA</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.YLGN">YLGN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.YLGNBU">YLGNBU</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.YLORBR">YLORBR</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.YLORRD">YLORRD</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.StyleOptions.JET">JET</see>.</description>
        ///     </item>
        /// </list>
        ///   </summary>
        public IDictionary<string, string> style_options { get; set; } = new Dictionary<string, string>();

        /// <summary>Solver specific parameters
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.SolveOptions.REMOVE_PREVIOUS_RESTRICTIONS">REMOVE_PREVIOUS_RESTRICTIONS</see>:</term>
        ///         <description>Ignore the restrictions applied to the graph
        /// during the creation stage and only use the restrictions specified
        /// in this request if set to <i>true</i>.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.SolveOptions.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.SolveOptions.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.SolveOptions.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.SolveOptions.RESTRICTION_THRESHOLD_VALUE">RESTRICTION_THRESHOLD_VALUE</see>:</term>
        ///         <description>Value-based restriction comparison. Any node
        /// or edge with a 'RESTRICTIONS_VALUECOMPARED' value greater than the
        /// <i>restriction_threshold_value</i> will not be included in the
        /// solution.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.SolveOptions.UNIFORM_WEIGHTS">UNIFORM_WEIGHTS</see>:</term>
        ///         <description>When specified, assigns the given value to all
        /// the edges in the graph. Note that weights provided in <paramref
        /// cref="VisualizeIsochroneRequest.weights_on_edges" /> will override
        /// this value.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.</summary>
        public IDictionary<string, string> solve_options { get; set; } = new Dictionary<string, string>();

        /// <summary>Solver specific parameters
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.PROJECTION">PROJECTION</see>:</term>
        ///         <description>Spatial Reference System (i.e. EPSG Code).
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions._3857">_3857</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions._102100">_102100</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions._900913">_900913</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.EPSG_4326">EPSG_4326</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.PLATE_CARREE">PLATE_CARREE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.EPSG_900913">EPSG_900913</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.EPSG_102100">EPSG_102100</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.EPSG_3857">EPSG_3857</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.WEB_MERCATOR">WEB_MERCATOR</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.ContourOptions.PLATE_CARREE">PLATE_CARREE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.WIDTH">WIDTH</see>:</term>
        ///         <description>When <paramref
        /// cref="VisualizeIsochroneRequest.generate_image" /> is set to
        /// <i>true</i>, width of the generated image.  The default value is
        /// '512'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.HEIGHT">HEIGHT</see>:</term>
        ///         <description>When <paramref
        /// cref="VisualizeIsochroneRequest.generate_image" /> is set to
        /// <i>true</i>, height of the generated image. If the default value is
        /// used, the <i>height</i> is set to the value resulting from
        /// multiplying the aspect ratio by the <i>width</i>.  The default
        /// value is '-1'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.SEARCH_RADIUS">SEARCH_RADIUS</see>:</term>
        ///         <description>When interpolating the graph solution to
        /// generate the isochrone, neighborhood of influence of sample data
        /// (in percent of the image/grid).  The default value is
        /// '20'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.GRID_SIZE">GRID_SIZE</see>:</term>
        ///         <description>When interpolating the graph solution to
        /// generate the isochrone, number of subdivisions along the x axis
        /// when building the grid (the y is computed using the aspect ratio of
        /// the output image).  The default value is '100'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.COLOR_ISOLINES">COLOR_ISOLINES</see>:</term>
        ///         <description>Color each isoline according to the colormap;
        /// otherwise, use the foreground color.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.ContourOptions.TRUE">TRUE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.ADD_LABELS">ADD_LABELS</see>:</term>
        ///         <description>If set to <i>true</i>, add labels to the
        /// isolines.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.ContourOptions.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.LABELS_FONT_SIZE">LABELS_FONT_SIZE</see>:</term>
        ///         <description>When <i>add_labels</i> is set to <i>true</i>,
        /// size of the font (in pixels) to use for labels.  The default value
        /// is '12'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.LABELS_FONT_FAMILY">LABELS_FONT_FAMILY</see>:</term>
        ///         <description>When <i>add_labels</i> is set to <i>true</i>,
        /// font name to be used when adding labels.  The default value is
        /// 'arial'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.LABELS_SEARCH_WINDOW">LABELS_SEARCH_WINDOW</see>:</term>
        ///         <description>When <i>add_labels</i> is set to <i>true</i>,
        /// a search window is used to rate the local quality of each isoline.
        /// Smooth, continuous, long stretches with relatively flat angles are
        /// favored. The provided value is multiplied by the
        /// <i>labels_font_size</i> to calculate the final window size.  The
        /// default value is '4'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.LABELS_INTRALEVEL_SEPARATION">LABELS_INTRALEVEL_SEPARATION</see>:</term>
        ///         <description>When <i>add_labels</i> is set to <i>true</i>,
        /// this value determines the  distance (in multiples of the
        /// <i>labels_font_size</i>) to use when separating labels of different
        /// values.  The default value is '4'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.LABELS_INTERLEVEL_SEPARATION">LABELS_INTERLEVEL_SEPARATION</see>:</term>
        ///         <description>When <i>add_labels</i> is set to <i>true</i>,
        /// this value determines the distance (in percent of the total window
        /// size) to use when separating labels of the same value.  The default
        /// value is '20'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.LABELS_MAX_ANGLE">LABELS_MAX_ANGLE</see>:</term>
        ///         <description>When <i>add_labels</i> is set to <i>true</i>,
        /// maximum angle (in degrees) from the vertical to use when adding
        /// labels.  The default value is '60'.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.</summary>
        public IDictionary<string, string> contour_options { get; set; } = new Dictionary<string, string>();

        /// <summary>Additional parameters
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.SOLVE_TABLE">SOLVE_TABLE</see>:</term>
        ///         <description>Name of the table to host intermediate solve
        /// results containing the position and cost for each vertex in the
        /// graph. If the default value is used, a temporary table is created
        /// and deleted once the solution is calculated.  The default value is
        /// ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.IS_REPLICATED">IS_REPLICATED</see>:</term>
        ///         <description>If set to <i>true</i>, replicate the
        /// <i>solve_table</i>.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.Options.TRUE">TRUE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.DATA_MIN_X">DATA_MIN_X</see>:</term>
        ///         <description>Lower bound for the x values. If not provided,
        /// it will be computed from the bounds of the input
        /// data.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.DATA_MAX_X">DATA_MAX_X</see>:</term>
        ///         <description>Upper bound for the x values. If not provided,
        /// it will be computed from the bounds of the input
        /// data.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.DATA_MIN_Y">DATA_MIN_Y</see>:</term>
        ///         <description>Lower bound for the y values. If not provided,
        /// it will be computed from the bounds of the input
        /// data.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.DATA_MAX_Y">DATA_MAX_Y</see>:</term>
        ///         <description>Upper bound for the y values. If not provided,
        /// it will be computed from the bounds of the input
        /// data.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.CONCAVITY_LEVEL">CONCAVITY_LEVEL</see>:</term>
        ///         <description>Factor to qualify the concavity of the
        /// isochrone curves. The lower the value, the more convex (with '0'
        /// being completely convex and '1' being the most concave).  The
        /// default value is '0.5'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.USE_PRIORITY_QUEUE_SOLVERS">USE_PRIORITY_QUEUE_SOLVERS</see>:</term>
        ///         <description>sets the solver methods explicitly if true
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.TRUE">TRUE</see>:</term>
        ///         <description>uses the solvers scheduled for 'shortest_path'
        /// and 'inverse_shortest_path' based on solve_direction</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.FALSE">FALSE</see>:</term>
        ///         <description>uses the solvers 'priority_queue' and
        /// 'inverse_priority_queue' based on solve_direction</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.SOLVE_DIRECTION">SOLVE_DIRECTION</see>:</term>
        ///         <description>Specify whether we are going to the source
        /// node, or starting from it.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.FROM_SOURCE">FROM_SOURCE</see>:</term>
        ///         <description>Shortest path to get to the source (inverse
        /// Dijkstra)</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.TO_SOURCE">TO_SOURCE</see>:</term>
        ///         <description>Shortest path to source
        /// (Dijkstra)</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.Options.FROM_SOURCE">FROM_SOURCE</see>.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.</summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs a VisualizeIsochroneRequest object with default
        /// parameters.</summary>
        public VisualizeIsochroneRequest() { }

        /// <summary>Constructs a VisualizeIsochroneRequest object with the
        /// specified parameters.</summary>
        /// 
        /// <param name="graph_name">Name of the graph on which the isochrone
        /// is to be computed.  </param>
        /// <param name="source_node">Starting vertex on the underlying graph
        /// from/to which the isochrones are created.  </param>
        /// <param name="max_solution_radius">Extent of the search radius
        /// around <paramref cref="VisualizeIsochroneRequest.source_node" />.
        /// Set to '-1.0' for unrestricted search radius.  The default value is
        /// -1.0.</param>
        /// <param name="weights_on_edges">Additional weights to apply to the
        /// edges of an existing graph. Weights must be specified using <a
        /// href="../../graph_solver/network_graph_solver.html#identifiers"
        /// target="_top">identifiers</a>; identifiers are grouped as <a
        /// href="../../graph_solver/network_graph_solver.html#id-combos"
        /// target="_top">combinations</a>. Identifiers can be used with
        /// existing column names, e.g., 'table.column AS WEIGHTS_EDGE_ID', or
        /// expressions, e.g., 'ST_LENGTH(wkt) AS WEIGHTS_VALUESPECIFIED'. Any
        /// provided weights will be added (in the case of
        /// 'WEIGHTS_VALUESPECIFIED') to or multiplied with (in the case of
        /// 'WEIGHTS_FACTORSPECIFIED') the existing weight(s).  The default
        /// value is an empty {@link List}.</param>
        /// <param name="restrictions">Additional restrictions to apply to the
        /// nodes/edges of an existing graph. Restrictions must be specified
        /// using <a
        /// href="../../graph_solver/network_graph_solver.html#identifiers"
        /// target="_top">identifiers</a>; identifiers are grouped as <a
        /// href="../../graph_solver/network_graph_solver.html#id-combos"
        /// target="_top">combinations</a>. Identifiers can be used with
        /// existing column names, e.g., 'table.column AS
        /// RESTRICTIONS_EDGE_ID', or expressions, e.g., 'column/2 AS
        /// RESTRICTIONS_VALUECOMPARED'. If <i>remove_previous_restrictions</i>
        /// is set to <i>true</i>, any provided restrictions will replace the
        /// existing restrictions. If <i>remove_previous_restrictions</i> is
        /// set to <i>false</i>, any provided restrictions will be added (in
        /// the case of 'RESTRICTIONS_VALUECOMPARED') to or replaced (in the
        /// case of 'RESTRICTIONS_ONOFFCOMPARED').  The default value is an
        /// empty {@link List}.</param>
        /// <param name="num_levels">Number of equally-separated isochrones to
        /// compute.  The default value is 1.</param>
        /// <param name="generate_image">If set to <i>true</i>, generates a PNG
        /// image of the isochrones in the response.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.GenerateImage.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.GenerateImage.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.GenerateImage.TRUE">TRUE</see>.
        /// </param>
        /// <param name="levels_table">Name of the table to output the
        /// isochrones, containing levels and their corresponding WKT geometry.
        /// If no value is provided, the table is not generated.  The default
        /// value is ''.</param>
        /// <param name="style_options">Various style related options of the
        /// isochrone image.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.LINE_SIZE">LINE_SIZE</see>:</term>
        ///         <description>The width of the contour lines in pixels.  The
        /// default value is '3'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.COLOR">COLOR</see>:</term>
        ///         <description>Color of generated isolines. All color values
        /// must be in the format RRGGBB or AARRGGBB (to specify the alpha
        /// value). If alpha is specified and flooded contours are enabled, it
        /// will be used for as the transparency of the latter.  The default
        /// value is 'FF696969'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BG_COLOR">BG_COLOR</see>:</term>
        ///         <description>When <paramref
        /// cref="VisualizeIsochroneRequest.generate_image" /> is set to
        /// <i>true</i>, background color of the generated image. All color
        /// values must be in the format RRGGBB or AARRGGBB (to specify the
        /// alpha value).  The default value is '00000000'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.TEXT_COLOR">TEXT_COLOR</see>:</term>
        ///         <description>When <i>add_labels</i> is set to <i>true</i>,
        /// color for the labels. All color values must be in the format RRGGBB
        /// or AARRGGBB (to specify the alpha value).  The default value is
        /// 'FF000000'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.COLORMAP">COLORMAP</see>:</term>
        ///         <description>Colormap for contours or fill-in regions when
        /// applicable. All color values must be in the format RRGGBB or
        /// AARRGGBB (to specify the alpha value)
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.JET">JET</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.ACCENT">ACCENT</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.AFMHOT">AFMHOT</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.AUTUMN">AUTUMN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BINARY">BINARY</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BLUES">BLUES</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BONE">BONE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BRBG">BRBG</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BRG">BRG</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BUGN">BUGN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BUPU">BUPU</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.BWR">BWR</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.CMRMAP">CMRMAP</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.COOL">COOL</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.COOLWARM">COOLWARM</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.COPPER">COPPER</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.CUBEHELIX">CUBEHELIX</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.DARK2">DARK2</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.FLAG">FLAG</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_EARTH">GIST_EARTH</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_GRAY">GIST_GRAY</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_HEAT">GIST_HEAT</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_NCAR">GIST_NCAR</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_RAINBOW">GIST_RAINBOW</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_STERN">GIST_STERN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GIST_YARG">GIST_YARG</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GNBU">GNBU</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GNUPLOT2">GNUPLOT2</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GNUPLOT">GNUPLOT</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GRAY">GRAY</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GREENS">GREENS</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.GREYS">GREYS</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.HOT">HOT</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.HSV">HSV</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.INFERNO">INFERNO</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.MAGMA">MAGMA</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.NIPY_SPECTRAL">NIPY_SPECTRAL</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.OCEAN">OCEAN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.ORANGES">ORANGES</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.ORRD">ORRD</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PAIRED">PAIRED</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PASTEL1">PASTEL1</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PASTEL2">PASTEL2</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PINK">PINK</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PIYG">PIYG</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PLASMA">PLASMA</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PRGN">PRGN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PRISM">PRISM</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PUBU">PUBU</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PUBUGN">PUBUGN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PUOR">PUOR</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PURD">PURD</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.PURPLES">PURPLES</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.RAINBOW">RAINBOW</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.RDBU">RDBU</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.RDGY">RDGY</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.RDPU">RDPU</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.RDYLBU">RDYLBU</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.RDYLGN">RDYLGN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.REDS">REDS</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.SEISMIC">SEISMIC</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.SET1">SET1</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.SET2">SET2</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.SET3">SET3</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.SPECTRAL">SPECTRAL</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.SPRING">SPRING</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.SUMMER">SUMMER</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.TERRAIN">TERRAIN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.VIRIDIS">VIRIDIS</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.WINTER">WINTER</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.WISTIA">WISTIA</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.YLGN">YLGN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.YLGNBU">YLGNBU</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.YLORBR">YLORBR</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.StyleOptions.YLORRD">YLORRD</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.StyleOptions.JET">JET</see>.</description>
        ///     </item>
        /// </list>
        ///   </param>
        /// <param name="solve_options">Solver specific parameters
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.SolveOptions.REMOVE_PREVIOUS_RESTRICTIONS">REMOVE_PREVIOUS_RESTRICTIONS</see>:</term>
        ///         <description>Ignore the restrictions applied to the graph
        /// during the creation stage and only use the restrictions specified
        /// in this request if set to <i>true</i>.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.SolveOptions.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.SolveOptions.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.SolveOptions.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.SolveOptions.RESTRICTION_THRESHOLD_VALUE">RESTRICTION_THRESHOLD_VALUE</see>:</term>
        ///         <description>Value-based restriction comparison. Any node
        /// or edge with a 'RESTRICTIONS_VALUECOMPARED' value greater than the
        /// <i>restriction_threshold_value</i> will not be included in the
        /// solution.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.SolveOptions.UNIFORM_WEIGHTS">UNIFORM_WEIGHTS</see>:</term>
        ///         <description>When specified, assigns the given value to all
        /// the edges in the graph. Note that weights provided in <paramref
        /// cref="VisualizeIsochroneRequest.weights_on_edges" /> will override
        /// this value.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.</param>
        /// <param name="contour_options">Solver specific parameters
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.PROJECTION">PROJECTION</see>:</term>
        ///         <description>Spatial Reference System (i.e. EPSG Code).
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions._3857">_3857</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions._102100">_102100</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions._900913">_900913</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.EPSG_4326">EPSG_4326</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.PLATE_CARREE">PLATE_CARREE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.EPSG_900913">EPSG_900913</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.EPSG_102100">EPSG_102100</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.EPSG_3857">EPSG_3857</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.WEB_MERCATOR">WEB_MERCATOR</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.ContourOptions.PLATE_CARREE">PLATE_CARREE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.WIDTH">WIDTH</see>:</term>
        ///         <description>When <paramref
        /// cref="VisualizeIsochroneRequest.generate_image" /> is set to
        /// <i>true</i>, width of the generated image.  The default value is
        /// '512'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.HEIGHT">HEIGHT</see>:</term>
        ///         <description>When <paramref
        /// cref="VisualizeIsochroneRequest.generate_image" /> is set to
        /// <i>true</i>, height of the generated image. If the default value is
        /// used, the <i>height</i> is set to the value resulting from
        /// multiplying the aspect ratio by the <i>width</i>.  The default
        /// value is '-1'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.SEARCH_RADIUS">SEARCH_RADIUS</see>:</term>
        ///         <description>When interpolating the graph solution to
        /// generate the isochrone, neighborhood of influence of sample data
        /// (in percent of the image/grid).  The default value is
        /// '20'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.GRID_SIZE">GRID_SIZE</see>:</term>
        ///         <description>When interpolating the graph solution to
        /// generate the isochrone, number of subdivisions along the x axis
        /// when building the grid (the y is computed using the aspect ratio of
        /// the output image).  The default value is '100'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.COLOR_ISOLINES">COLOR_ISOLINES</see>:</term>
        ///         <description>Color each isoline according to the colormap;
        /// otherwise, use the foreground color.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.ContourOptions.TRUE">TRUE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.ADD_LABELS">ADD_LABELS</see>:</term>
        ///         <description>If set to <i>true</i>, add labels to the
        /// isolines.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.ContourOptions.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.LABELS_FONT_SIZE">LABELS_FONT_SIZE</see>:</term>
        ///         <description>When <i>add_labels</i> is set to <i>true</i>,
        /// size of the font (in pixels) to use for labels.  The default value
        /// is '12'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.LABELS_FONT_FAMILY">LABELS_FONT_FAMILY</see>:</term>
        ///         <description>When <i>add_labels</i> is set to <i>true</i>,
        /// font name to be used when adding labels.  The default value is
        /// 'arial'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.LABELS_SEARCH_WINDOW">LABELS_SEARCH_WINDOW</see>:</term>
        ///         <description>When <i>add_labels</i> is set to <i>true</i>,
        /// a search window is used to rate the local quality of each isoline.
        /// Smooth, continuous, long stretches with relatively flat angles are
        /// favored. The provided value is multiplied by the
        /// <i>labels_font_size</i> to calculate the final window size.  The
        /// default value is '4'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.LABELS_INTRALEVEL_SEPARATION">LABELS_INTRALEVEL_SEPARATION</see>:</term>
        ///         <description>When <i>add_labels</i> is set to <i>true</i>,
        /// this value determines the  distance (in multiples of the
        /// <i>labels_font_size</i>) to use when separating labels of different
        /// values.  The default value is '4'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.LABELS_INTERLEVEL_SEPARATION">LABELS_INTERLEVEL_SEPARATION</see>:</term>
        ///         <description>When <i>add_labels</i> is set to <i>true</i>,
        /// this value determines the distance (in percent of the total window
        /// size) to use when separating labels of the same value.  The default
        /// value is '20'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.ContourOptions.LABELS_MAX_ANGLE">LABELS_MAX_ANGLE</see>:</term>
        ///         <description>When <i>add_labels</i> is set to <i>true</i>,
        /// maximum angle (in degrees) from the vertical to use when adding
        /// labels.  The default value is '60'.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.</param>
        /// <param name="options">Additional parameters
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.SOLVE_TABLE">SOLVE_TABLE</see>:</term>
        ///         <description>Name of the table to host intermediate solve
        /// results containing the position and cost for each vertex in the
        /// graph. If the default value is used, a temporary table is created
        /// and deleted once the solution is calculated.  The default value is
        /// ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.IS_REPLICATED">IS_REPLICATED</see>:</term>
        ///         <description>If set to <i>true</i>, replicate the
        /// <i>solve_table</i>.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.Options.TRUE">TRUE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.DATA_MIN_X">DATA_MIN_X</see>:</term>
        ///         <description>Lower bound for the x values. If not provided,
        /// it will be computed from the bounds of the input
        /// data.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.DATA_MAX_X">DATA_MAX_X</see>:</term>
        ///         <description>Upper bound for the x values. If not provided,
        /// it will be computed from the bounds of the input
        /// data.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.DATA_MIN_Y">DATA_MIN_Y</see>:</term>
        ///         <description>Lower bound for the y values. If not provided,
        /// it will be computed from the bounds of the input
        /// data.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.DATA_MAX_Y">DATA_MAX_Y</see>:</term>
        ///         <description>Upper bound for the y values. If not provided,
        /// it will be computed from the bounds of the input
        /// data.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.CONCAVITY_LEVEL">CONCAVITY_LEVEL</see>:</term>
        ///         <description>Factor to qualify the concavity of the
        /// isochrone curves. The lower the value, the more convex (with '0'
        /// being completely convex and '1' being the most concave).  The
        /// default value is '0.5'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.USE_PRIORITY_QUEUE_SOLVERS">USE_PRIORITY_QUEUE_SOLVERS</see>:</term>
        ///         <description>sets the solver methods explicitly if true
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.TRUE">TRUE</see>:</term>
        ///         <description>uses the solvers scheduled for 'shortest_path'
        /// and 'inverse_shortest_path' based on solve_direction</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.FALSE">FALSE</see>:</term>
        ///         <description>uses the solvers 'priority_queue' and
        /// 'inverse_priority_queue' based on solve_direction</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.SOLVE_DIRECTION">SOLVE_DIRECTION</see>:</term>
        ///         <description>Specify whether we are going to the source
        /// node, or starting from it.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.FROM_SOURCE">FROM_SOURCE</see>:</term>
        ///         <description>Shortest path to get to the source (inverse
        /// Dijkstra)</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeIsochroneRequest.Options.TO_SOURCE">TO_SOURCE</see>:</term>
        ///         <description>Shortest path to source
        /// (Dijkstra)</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeIsochroneRequest.Options.FROM_SOURCE">FROM_SOURCE</see>.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.</param>
        /// 
        public VisualizeIsochroneRequest( string graph_name,
                                          string source_node,
                                          double? max_solution_radius,
                                          IList<string> weights_on_edges,
                                          IList<string> restrictions,
                                          int? num_levels,
                                          bool? generate_image,
                                          string levels_table,
                                          IDictionary<string, string> style_options,
                                          IDictionary<string, string> solve_options = null,
                                          IDictionary<string, string> contour_options = null,
                                          IDictionary<string, string> options = null)
        {
            this.graph_name = graph_name ?? "";
            this.source_node = source_node ?? "";
            this.max_solution_radius = max_solution_radius ?? -1.0;
            this.weights_on_edges = weights_on_edges ?? new List<string>();
            this.restrictions = restrictions ?? new List<string>();
            this.num_levels = num_levels ?? 1;
            this.generate_image = generate_image ?? true;
            this.levels_table = levels_table ?? "";
            this.style_options = style_options ?? new Dictionary<string, string>();
            this.solve_options = solve_options ?? new Dictionary<string, string>();
            this.contour_options = contour_options ?? new Dictionary<string, string>();
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class VisualizeIsochroneRequest



    /// <summary>A set of results returned by <see
    /// cref="Kinetica.visualizeIsochrone(string,string,double,IList{string},IList{string},int,bool,string,IDictionary{string, string},IDictionary{string, string},IDictionary{string, string},IDictionary{string, string})"
    /// />.</summary>
    public class VisualizeIsochroneResponse : KineticaData
    {

        /// <summary>Width of the image as provided in <i>width</i>.
        /// </summary>
        public int width { get; set; }

        /// <summary>Height of the image as provided in <i>height</i>.
        /// </summary>
        public int height { get; set; }

        /// <summary>Background color of the image as provided in
        /// <i>bg_color</i>.  </summary>
        public long bg_color { get; set; }

        /// <summary>Generated contour image data.  </summary>
        public byte[] image_data { get; set; }

        /// <summary>Additional information.  </summary>
        public IDictionary<string, string> info { get; set; } = new Dictionary<string, string>();

        /// <summary>Additional information.  </summary>
        public IDictionary<string, string> solve_info { get; set; } = new Dictionary<string, string>();

        /// <summary>Additional information.  </summary>
        public IDictionary<string, string> contour_info { get; set; } = new Dictionary<string, string>();

    } // end class VisualizeIsochroneResponse




}  // end namespace kinetica
