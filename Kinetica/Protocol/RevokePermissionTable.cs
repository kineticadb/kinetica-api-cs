/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>A set of parameters for <see
    /// cref="Kinetica.revokePermissionTable(string,string,string,IDictionary{string, string})"
    /// />.
    /// <br />
    /// Revokes a table-level permission from a user or role.</summary>
    public class RevokePermissionTableRequest : KineticaData
    {

        /// <summary>Permission to revoke from the user or role.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="RevokePermissionTableRequest.Permission.TABLE_ADMIN">TABLE_ADMIN</see>:</term>
        ///         <description>Full read/write and administrative access to
        /// the table.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="RevokePermissionTableRequest.Permission.TABLE_INSERT">TABLE_INSERT</see>:</term>
        ///         <description>Insert access to the table.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="RevokePermissionTableRequest.Permission.TABLE_UPDATE">TABLE_UPDATE</see>:</term>
        ///         <description>Update access to the table.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="RevokePermissionTableRequest.Permission.TABLE_DELETE">TABLE_DELETE</see>:</term>
        ///         <description>Delete access to the table.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="RevokePermissionTableRequest.Permission.TABLE_READ">TABLE_READ</see>:</term>
        ///         <description>Read access to the table.</description>
        ///     </item>
        /// </list>
        /// A set of string constants for the parameter <see cref="permission"
        /// />.</summary>
        public struct Permission
        {

            /// <summary>Full read/write and administrative access to the
            /// table.</summary>
            public const string TABLE_ADMIN = "table_admin";

            /// <summary>Insert access to the table.</summary>
            public const string TABLE_INSERT = "table_insert";

            /// <summary>Update access to the table.</summary>
            public const string TABLE_UPDATE = "table_update";

            /// <summary>Delete access to the table.</summary>
            public const string TABLE_DELETE = "table_delete";

            /// <summary>Read access to the table.</summary>
            public const string TABLE_READ = "table_read";
        } // end struct Permission


        /// <summary>Name of the user or role from which the permission will be
        /// revoked. Must be an existing user or role.  </summary>
        public string name { get; set; }

        /// <summary>Permission to revoke from the user or role.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="RevokePermissionTableRequest.Permission.TABLE_ADMIN">TABLE_ADMIN</see>:</term>
        ///         <description>Full read/write and administrative access to
        /// the table.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="RevokePermissionTableRequest.Permission.TABLE_INSERT">TABLE_INSERT</see>:</term>
        ///         <description>Insert access to the table.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="RevokePermissionTableRequest.Permission.TABLE_UPDATE">TABLE_UPDATE</see>:</term>
        ///         <description>Update access to the table.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="RevokePermissionTableRequest.Permission.TABLE_DELETE">TABLE_DELETE</see>:</term>
        ///         <description>Delete access to the table.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="RevokePermissionTableRequest.Permission.TABLE_READ">TABLE_READ</see>:</term>
        ///         <description>Read access to the table.</description>
        ///     </item>
        /// </list>  </summary>
        public string permission { get; set; }

        /// <summary>Name of the table to which the permission grants access.
        /// Must be an existing table, collection, or view.  </summary>
        public string table_name { get; set; }

        /// <summary>Optional parameters.  </summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs a RevokePermissionTableRequest object with
        /// default parameters.</summary>
        public RevokePermissionTableRequest() { }

        /// <summary>Constructs a RevokePermissionTableRequest object with the
        /// specified parameters.</summary>
        /// 
        /// <param name="name">Name of the user or role from which the
        /// permission will be revoked. Must be an existing user or role.
        /// </param>
        /// <param name="permission">Permission to revoke from the user or
        /// role.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="RevokePermissionTableRequest.Permission.TABLE_ADMIN">TABLE_ADMIN</see>:</term>
        ///         <description>Full read/write and administrative access to
        /// the table.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="RevokePermissionTableRequest.Permission.TABLE_INSERT">TABLE_INSERT</see>:</term>
        ///         <description>Insert access to the table.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="RevokePermissionTableRequest.Permission.TABLE_UPDATE">TABLE_UPDATE</see>:</term>
        ///         <description>Update access to the table.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="RevokePermissionTableRequest.Permission.TABLE_DELETE">TABLE_DELETE</see>:</term>
        ///         <description>Delete access to the table.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="RevokePermissionTableRequest.Permission.TABLE_READ">TABLE_READ</see>:</term>
        ///         <description>Read access to the table.</description>
        ///     </item>
        /// </list>  </param>
        /// <param name="table_name">Name of the table to which the permission
        /// grants access. Must be an existing table, collection, or view.
        /// </param>
        /// <param name="options">Optional parameters.  </param>
        /// 
        public RevokePermissionTableRequest( string name,
                                             string permission,
                                             string table_name,
                                             IDictionary<string, string> options = null)
        {
            this.name = name ?? "";
            this.permission = permission ?? "";
            this.table_name = table_name ?? "";
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class RevokePermissionTableRequest



    /// <summary>A set of results returned by <see
    /// cref="Kinetica.revokePermissionTable(string,string,string,IDictionary{string, string})"
    /// />.</summary>
    public class RevokePermissionTableResponse : KineticaData
    {

        /// <summary>Value of <paramref
        /// cref="RevokePermissionTableRequest.name" />.  </summary>
        public string name { get; set; }

        /// <summary>Value of <paramref
        /// cref="RevokePermissionTableRequest.permission" />.  </summary>
        public string permission { get; set; }

        /// <summary>Value of <paramref
        /// cref="RevokePermissionTableRequest.table_name" />.  </summary>
        public string table_name { get; set; }

        /// <summary>Additional information.  </summary>
        public IDictionary<string, string> info { get; set; } = new Dictionary<string, string>();

    } // end class RevokePermissionTableResponse




}  // end namespace kinetica
