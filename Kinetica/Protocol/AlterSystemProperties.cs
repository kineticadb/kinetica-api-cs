/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>A set of parameters for /alter/system/properties.
    /// <br />
    /// The /alter/system/properties endpoint is primarily used to simplify the
    /// testing of the system and is not expected to be used during normal
    /// execution.  Commands are given through the <member
    /// name="property_updates_map" /> whose keys are commands and values are
    /// strings representing integer values (for example '8000') or boolean
    /// values ('true' or 'false').</summary>
    public class AlterSystemPropertiesRequest : KineticaData
    {

        /// <summary>Map containing the properties of the system to be updated.
        /// Error if empty.
        /// <list type="bullet">
        ///     <item>
        ///         <term>sm_omp_threads</term>
        ///         <description>Set the number of OpenMP threads that will be
        /// used to service filter & aggregation requests against collections
        /// to the specified integer value.</description>
        ///     </item>
        ///     <item>
        ///         <term>kernel_omp_threads</term>
        ///         <description>Set the number of kernel OpenMP threads to the
        /// specified integer value.</description>
        ///     </item>
        ///     <item>
        ///         <term>concurrent_kernel_execution</term>
        ///         <description>Enables concurrent kernel execution if the
        /// value is <i>true</i> and disables it if the value is <i>false</i>.
        /// Values: true, false.
        /// </description>
        ///     </item>
        ///     <item>
        ///         <term>chunk_size</term>
        ///         <description>Sets the chunk size of all new sets to the
        /// specified integer value.</description>
        ///     </item>
        ///     <item>
        ///         <term>flush_to_disk</term>
        ///         <description>Flushes any changes to any tables to the
        /// persistent store.  These changes include updates to the vector
        /// store, object store, and text search store, Value string is
        /// ignored</description>
        ///     </item>
        ///     <item>
        ///         <term>clear_cache</term>
        ///         <description>Clears cached results.  Useful to allow
        /// repeated timing of endpoints. Value string is ignored</description>
        ///     </item>
        ///     <item>
        ///         <term>communicator_test</term>
        ///         <description>Invoke the communicator test and report timing
        /// results. Value string is is a comma separated list of <key>=<value>
        /// expressions.  Expressions are: num_transactions=<num> where num is
        /// the number of request reply transactions to invoke per test;
        /// message_size=<bytes> where bytes is the size of the messages to
        /// send in bytes; check_values=<enabled> where if enabled is true the
        /// value of the messages received are verified.</description>
        ///     </item>
        ///     <item>
        ///         <term>set_message_timers_enabled</term>
        ///         <description>Enables the communicator test to collect
        /// additional timing statistics when the value string is <i>true</i>.
        /// Disables the collection when the value string is <i>false</i>
        /// Values: true, false.
        /// </description>
        ///     </item>
        ///     <item>
        ///         <term>bulk_add_test</term>
        ///         <description>Invoke the bulk add test and report timing
        /// results. Value string is ignored.</description>
        ///     </item>
        ///     <item>
        ///         <term>network_speed</term>
        ///         <description>Invoke the network speed test and report
        /// timing results. Value string is a semicolon-separated list of
        /// <key>=<value> expressions.  Valid expressions are: seconds=<time>
        /// where time is the time in seconds to run the test; data_size=<size>
        /// where size is the size in bytes of the block to be transferred;
        /// threads=<number of threads>; to_ranks=<space-separated list of
        /// ranks> where the list of ranks is the ranks that rank 0 will send
        /// data to and get data from. If to_ranks is unspecified then all
        /// worker ranks are used.</description>
        ///     </item>
        ///     <item>
        ///         <term>request_timeout</term>
        ///         <description>Number of minutes after which filtering (e.g.,
        /// /filter) and aggregating (e.g., /aggregate/groupby) queries will
        /// timeout.</description>
        ///     </item>
        ///     <item>
        ///         <term>max_get_records_size</term>
        ///         <description>The maximum number of records the database
        /// will serve for a given data retrieval call</description>
        ///     </item>
        /// </list>
        /// <br />
        /// A set of string constants for the parameter <member
        /// name="property_updates_map" />.</summary>
        public struct PropertyUpdatesMap
        {

            /// <summary>Set the number of OpenMP threads that will be used to
            /// service filter & aggregation requests against collections to
            /// the specified integer value.</summary>
            public const string SM_OMP_THREADS = "sm_omp_threads";

            /// <summary>Set the number of kernel OpenMP threads to the
            /// specified integer value.</summary>
            public const string KERNEL_OMP_THREADS = "kernel_omp_threads";

            /// <summary>Enables concurrent kernel execution if the value is
            /// <i>true</i> and disables it if the value is <i>false</i>.
            /// Values: true, false.
            /// </summary>
            public const string CONCURRENT_KERNEL_EXECUTION = "concurrent_kernel_execution";
            public const string TRUE = "true";
            public const string FALSE = "false";

            /// <summary>Sets the chunk size of all new sets to the specified
            /// integer value.</summary>
            public const string CHUNK_SIZE = "chunk_size";

            /// <summary>Flushes any changes to any tables to the persistent
            /// store.  These changes include updates to the vector store,
            /// object store, and text search store, Value string is
            /// ignored</summary>
            public const string FLUSH_TO_DISK = "flush_to_disk";

            /// <summary>Clears cached results.  Useful to allow repeated
            /// timing of endpoints. Value string is ignored</summary>
            public const string CLEAR_CACHE = "clear_cache";

            /// <summary>Invoke the communicator test and report timing
            /// results. Value string is is a comma separated list of
            /// <key>=<value> expressions.  Expressions are:
            /// num_transactions=<num> where num is the number of request reply
            /// transactions to invoke per test; message_size=<bytes> where
            /// bytes is the size of the messages to send in bytes;
            /// check_values=<enabled> where if enabled is true the value of
            /// the messages received are verified.</summary>
            public const string COMMUNICATOR_TEST = "communicator_test";

            /// <summary>Enables the communicator test to collect additional
            /// timing statistics when the value string is <i>true</i>.
            /// Disables the collection when the value string is <i>false</i>
            /// Values: true, false.
            /// </summary>
            public const string SET_MESSAGE_TIMERS_ENABLED = "set_message_timers_enabled";

            /// <summary>Invoke the bulk add test and report timing results.
            /// Value string is ignored.</summary>
            public const string BULK_ADD_TEST = "bulk_add_test";

            /// <summary>Invoke the network speed test and report timing
            /// results. Value string is a semicolon-separated list of
            /// <key>=<value> expressions.  Valid expressions are:
            /// seconds=<time> where time is the time in seconds to run the
            /// test; data_size=<size> where size is the size in bytes of the
            /// block to be transferred; threads=<number of threads>;
            /// to_ranks=<space-separated list of ranks> where the list of
            /// ranks is the ranks that rank 0 will send data to and get data
            /// from. If to_ranks is unspecified then all worker ranks are
            /// used.</summary>
            public const string NETWORK_SPEED = "network_speed";

            /// <summary>Number of minutes after which filtering (e.g.,
            /// /filter) and aggregating (e.g., /aggregate/groupby) queries
            /// will timeout.</summary>
            public const string REQUEST_TIMEOUT = "request_timeout";

            /// <summary>The maximum number of records the database will serve
            /// for a given data retrieval call</summary>
            public const string MAX_GET_RECORDS_SIZE = "max_get_records_size";
        } // end struct PropertyUpdatesMap


        /// <summary>Map containing the properties of the system to be updated.
        /// Error if empty.
        /// <list type="bullet">
        ///     <item>
        ///         <term>sm_omp_threads</term>
        ///         <description>Set the number of OpenMP threads that will be
        /// used to service filter & aggregation requests against collections
        /// to the specified integer value.</description>
        ///     </item>
        ///     <item>
        ///         <term>kernel_omp_threads</term>
        ///         <description>Set the number of kernel OpenMP threads to the
        /// specified integer value.</description>
        ///     </item>
        ///     <item>
        ///         <term>concurrent_kernel_execution</term>
        ///         <description>Enables concurrent kernel execution if the
        /// value is <i>true</i> and disables it if the value is <i>false</i>.
        /// Values: true, false.
        /// </description>
        ///     </item>
        ///     <item>
        ///         <term>chunk_size</term>
        ///         <description>Sets the chunk size of all new sets to the
        /// specified integer value.</description>
        ///     </item>
        ///     <item>
        ///         <term>flush_to_disk</term>
        ///         <description>Flushes any changes to any tables to the
        /// persistent store.  These changes include updates to the vector
        /// store, object store, and text search store, Value string is
        /// ignored</description>
        ///     </item>
        ///     <item>
        ///         <term>clear_cache</term>
        ///         <description>Clears cached results.  Useful to allow
        /// repeated timing of endpoints. Value string is ignored</description>
        ///     </item>
        ///     <item>
        ///         <term>communicator_test</term>
        ///         <description>Invoke the communicator test and report timing
        /// results. Value string is is a comma separated list of <key>=<value>
        /// expressions.  Expressions are: num_transactions=<num> where num is
        /// the number of request reply transactions to invoke per test;
        /// message_size=<bytes> where bytes is the size of the messages to
        /// send in bytes; check_values=<enabled> where if enabled is true the
        /// value of the messages received are verified.</description>
        ///     </item>
        ///     <item>
        ///         <term>set_message_timers_enabled</term>
        ///         <description>Enables the communicator test to collect
        /// additional timing statistics when the value string is <i>true</i>.
        /// Disables the collection when the value string is <i>false</i>
        /// Values: true, false.
        /// </description>
        ///     </item>
        ///     <item>
        ///         <term>bulk_add_test</term>
        ///         <description>Invoke the bulk add test and report timing
        /// results. Value string is ignored.</description>
        ///     </item>
        ///     <item>
        ///         <term>network_speed</term>
        ///         <description>Invoke the network speed test and report
        /// timing results. Value string is a semicolon-separated list of
        /// <key>=<value> expressions.  Valid expressions are: seconds=<time>
        /// where time is the time in seconds to run the test; data_size=<size>
        /// where size is the size in bytes of the block to be transferred;
        /// threads=<number of threads>; to_ranks=<space-separated list of
        /// ranks> where the list of ranks is the ranks that rank 0 will send
        /// data to and get data from. If to_ranks is unspecified then all
        /// worker ranks are used.</description>
        ///     </item>
        ///     <item>
        ///         <term>request_timeout</term>
        ///         <description>Number of minutes after which filtering (e.g.,
        /// /filter) and aggregating (e.g., /aggregate/groupby) queries will
        /// timeout.</description>
        ///     </item>
        ///     <item>
        ///         <term>max_get_records_size</term>
        ///         <description>The maximum number of records the database
        /// will serve for a given data retrieval call</description>
        ///     </item>
        /// </list>
        ///   </summary>
        public IDictionary<string, string> property_updates_map { get; set; } = new Dictionary<string, string>();

        /// <summary>Optional parameters.  </summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs an AlterSystemPropertiesRequest object with
        /// default parameters.</summary>
        public AlterSystemPropertiesRequest() { }

        /// <summary>Constructs an AlterSystemPropertiesRequest object with the
        /// specified parameters.</summary>
        /// 
        /// <param name="property_updates_map">Map containing the properties of
        /// the system to be updated. Error if empty.
        /// <list type="bullet">
        ///     <item>
        ///         <term>sm_omp_threads</term>
        ///         <description>Set the number of OpenMP threads that will be
        /// used to service filter & aggregation requests against collections
        /// to the specified integer value.</description>
        ///     </item>
        ///     <item>
        ///         <term>kernel_omp_threads</term>
        ///         <description>Set the number of kernel OpenMP threads to the
        /// specified integer value.</description>
        ///     </item>
        ///     <item>
        ///         <term>concurrent_kernel_execution</term>
        ///         <description>Enables concurrent kernel execution if the
        /// value is <i>true</i> and disables it if the value is <i>false</i>.
        /// Values: true, false.
        /// </description>
        ///     </item>
        ///     <item>
        ///         <term>chunk_size</term>
        ///         <description>Sets the chunk size of all new sets to the
        /// specified integer value.</description>
        ///     </item>
        ///     <item>
        ///         <term>flush_to_disk</term>
        ///         <description>Flushes any changes to any tables to the
        /// persistent store.  These changes include updates to the vector
        /// store, object store, and text search store, Value string is
        /// ignored</description>
        ///     </item>
        ///     <item>
        ///         <term>clear_cache</term>
        ///         <description>Clears cached results.  Useful to allow
        /// repeated timing of endpoints. Value string is ignored</description>
        ///     </item>
        ///     <item>
        ///         <term>communicator_test</term>
        ///         <description>Invoke the communicator test and report timing
        /// results. Value string is is a comma separated list of <key>=<value>
        /// expressions.  Expressions are: num_transactions=<num> where num is
        /// the number of request reply transactions to invoke per test;
        /// message_size=<bytes> where bytes is the size of the messages to
        /// send in bytes; check_values=<enabled> where if enabled is true the
        /// value of the messages received are verified.</description>
        ///     </item>
        ///     <item>
        ///         <term>set_message_timers_enabled</term>
        ///         <description>Enables the communicator test to collect
        /// additional timing statistics when the value string is <i>true</i>.
        /// Disables the collection when the value string is <i>false</i>
        /// Values: true, false.
        /// </description>
        ///     </item>
        ///     <item>
        ///         <term>bulk_add_test</term>
        ///         <description>Invoke the bulk add test and report timing
        /// results. Value string is ignored.</description>
        ///     </item>
        ///     <item>
        ///         <term>network_speed</term>
        ///         <description>Invoke the network speed test and report
        /// timing results. Value string is a semicolon-separated list of
        /// <key>=<value> expressions.  Valid expressions are: seconds=<time>
        /// where time is the time in seconds to run the test; data_size=<size>
        /// where size is the size in bytes of the block to be transferred;
        /// threads=<number of threads>; to_ranks=<space-separated list of
        /// ranks> where the list of ranks is the ranks that rank 0 will send
        /// data to and get data from. If to_ranks is unspecified then all
        /// worker ranks are used.</description>
        ///     </item>
        ///     <item>
        ///         <term>request_timeout</term>
        ///         <description>Number of minutes after which filtering (e.g.,
        /// /filter) and aggregating (e.g., /aggregate/groupby) queries will
        /// timeout.</description>
        ///     </item>
        ///     <item>
        ///         <term>max_get_records_size</term>
        ///         <description>The maximum number of records the database
        /// will serve for a given data retrieval call</description>
        ///     </item>
        /// </list>
        ///   </param>
        /// <param name="options">Optional parameters.  </param>
        /// 
        public AlterSystemPropertiesRequest( IDictionary<string, string> property_updates_map,
                                             IDictionary<string, string> options = null)
        {
            this.property_updates_map = property_updates_map ?? new Dictionary<string, string>();
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class AlterSystemPropertiesRequest



    /// <summary>A set of results returned by
    /// /alter/system/properties.</summary>
    public class AlterSystemPropertiesResponse : KineticaData
    {

        /// <summary>map of values updated, For speed tests a map of values
        /// measured to the measurement  </summary>
        public IDictionary<string, string> updated_properties_map { get; set; } = new Dictionary<string, string>();

    } // end class AlterSystemPropertiesResponse




}  // end namespace kinetica
