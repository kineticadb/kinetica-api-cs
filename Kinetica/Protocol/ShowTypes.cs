/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;

namespace kinetica
{
    /// <summary>A set of parameters for <see
    /// cref="Kinetica.showTypes(ShowTypesRequest)">Kinetica.showTypes</see>.
    /// </summary>
    /// <remarks><para>Retrieves information for the specified data type ID or
    /// type label. For all data types that match the input criteria, the
    /// database returns the type ID, the type schema, the label (if
    /// available), and the type's column properties.</para></remarks>
    public class ShowTypesRequest : KineticaData
    {
        /// <summary>A set of string constants for the parameter <see
        /// cref="options" />.</summary>
        /// <remarks><para>Optional parameters.</para></remarks>
        public struct Options
        {
            /// <summary>When set to 'true', no join types will be included.
            /// </summary>
            /// <remarks><para>Supported values:</para>
            /// <list type="bullet">
            ///     <item>
            ///         <term><see cref="Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see cref="Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// <para>The default value is <see
            /// cref="Options.FALSE">FALSE</see>.</para></remarks>
            public const string NO_JOIN_TYPES = "no_join_types";

            public const string TRUE = "true";
            public const string FALSE = "false";
        } // end struct Options

        /// <summary>Type Id returned in response to a call to <see
        /// cref="Kinetica.createType(CreateTypeRequest)">Kinetica.createType</see>.
        /// </summary>
        public string type_id { get; set; }

        /// <summary>Option string that was supplied by user in a call to <see
        /// cref="Kinetica.createType(CreateTypeRequest)">Kinetica.createType</see>.
        /// </summary>
        public string label { get; set; }

        /// <summary>Optional parameters.</summary>
        /// <remarks><list type="bullet">
        ///     <item>
        ///         <term><see
        ///         cref="Options.NO_JOIN_TYPES">NO_JOIN_TYPES</see>:</term>
        ///         <description>When set to 'true', no join types will be
        ///         included.
        ///         Supported values:
        ///         <list type="bullet">
        ///             <item>
        ///                 <term><see cref="Options.TRUE">TRUE</see></term>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.FALSE">FALSE</see></term>
        ///             </item>
        ///         </list>
        ///         The default value is <see cref="Options.FALSE">FALSE</see>.
        ///         </description>
        ///     </item>
        /// </list>
        /// <para>The default value is an empty Dictionary.</para></remarks>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();

        /// <summary>Constructs a ShowTypesRequest object with default
        /// parameters.</summary>
        public ShowTypesRequest() { }

        /// <summary>Constructs a ShowTypesRequest object with the specified
        /// parameters.</summary>
        ///
        /// <param name="type_id">Type Id returned in response to a call to
        /// <see
        /// cref="Kinetica.createType(CreateTypeRequest)">Kinetica.createType</see>.
        /// </param>
        /// <param name="label">Option string that was supplied by user in a
        /// call to <see
        /// cref="Kinetica.createType(CreateTypeRequest)">Kinetica.createType</see>.
        /// </param>
        /// <param name="options">Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        ///         cref="Options.NO_JOIN_TYPES">NO_JOIN_TYPES</see>:</term>
        ///         <description>When set to 'true', no join types will be
        ///         included.
        ///         Supported values:
        ///         <list type="bullet">
        ///             <item>
        ///                 <term><see cref="Options.TRUE">TRUE</see></term>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.FALSE">FALSE</see></term>
        ///             </item>
        ///         </list>
        ///         The default value is <see cref="Options.FALSE">FALSE</see>.
        ///         </description>
        ///     </item>
        /// </list>
        /// The default value is an empty Dictionary.</param>
        public ShowTypesRequest( string type_id,
                                 string label,
                                 IDictionary<string, string> options = null)
        {
            this.type_id = type_id ?? "";
            this.label = label ?? "";
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor
    } // end class ShowTypesRequest

    /// <summary>A set of results returned by <see
    /// cref="Kinetica.showTypes(ShowTypesRequest)">Kinetica.showTypes</see>.
    /// </summary>
    public class ShowTypesResponse : KineticaData
    {
        public IList<string> type_ids { get; set; } = new List<string>();

        public IList<string> type_schemas { get; set; } = new List<string>();

        public IList<string> labels { get; set; } = new List<string>();

        public IList<IDictionary<string, IList<string>>> properties { get; set; } = new List<IDictionary<string, IList<string>>>();

        /// <summary>Additional information.</summary>
        public IDictionary<string, string> info { get; set; } = new Dictionary<string, string>();
    } // end class ShowTypesResponse
} // end namespace kinetica
