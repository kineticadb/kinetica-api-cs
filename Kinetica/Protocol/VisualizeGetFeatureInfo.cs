/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{
    /// @cond NO_DOCS
    /// <summary>A set of parameters for <see
    /// cref="Kinetica.visualizeGetFeatureInfo(IList{string},IList{string},IList{string},IList{string},IList{IList{string}},string,double,double,double,double,int,int,int,int,int,long,string,IDictionary{string, string})"
    /// />.
    /// <br />
    /// </summary>
    public class VisualizeGetFeatureInfoRequest : KineticaData
    {

        /// <summary>
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Projection.PLATE_CARREE">PLATE_CARREE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Projection.WEB_MERCATOR">WEB_MERCATOR</see></term>
        ///     </item>
        /// </list>
        /// A set of string constants for the parameter <see cref="projection"
        /// />.</summary>
        public struct Projection
        {
            public const string PLATE_CARREE = "plate_carree";
            public const string WEB_MERCATOR = "web_mercator";
        } // end struct Projection


        /// <summary>
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Encoding.BINARY">BINARY</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Encoding.JSON">JSON</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Encoding.GEOJSON">GEOJSON</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Encoding.HTML">HTML</see></term>
        ///     </item>
        /// </list>
        /// A set of string constants for the parameter <see cref="encoding"
        /// />.</summary>
        public struct Encoding
        {
            public const string BINARY = "binary";
            public const string JSON = "json";
            public const string GEOJSON = "geojson";
            public const string HTML = "html";
        } // end struct Encoding


        /// <summary>
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Options.AUTO_COLUMN_SELECTION">AUTO_COLUMN_SELECTION</see>:</term>
        ///         <description>
        /// Valid values are:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeGetFeatureInfoRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        /// </list>
        /// <br />
        /// A set of string constants for the parameter <see cref="options"
        /// />.</summary>
        public struct Options
        {

            /// <summary>
            /// Valid values are:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="VisualizeGetFeatureInfoRequest.Options.FALSE">FALSE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="VisualizeGetFeatureInfoRequest.Options.TRUE">TRUE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="VisualizeGetFeatureInfoRequest.Options.FALSE">FALSE</see>.</summary>
            public const string AUTO_COLUMN_SELECTION = "auto_column_selection";
            public const string FALSE = "false";
            public const string TRUE = "true";
        } // end struct Options

        public IList<string> table_names { get; set; } = new List<string>();
        public IList<string> x_column_names { get; set; } = new List<string>();
        public IList<string> y_column_names { get; set; } = new List<string>();
        public IList<string> geometry_column_names { get; set; } = new List<string>();
        public IList<IList<string>> query_column_names { get; set; } = new List<IList<string>>();

        /// <summary>
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Projection.PLATE_CARREE">PLATE_CARREE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Projection.WEB_MERCATOR">WEB_MERCATOR</see></term>
        ///     </item>
        /// </list></summary>
        public string projection { get; set; }
        public double min_x { get; set; }
        public double max_x { get; set; }
        public double min_y { get; set; }
        public double max_y { get; set; }
        public int width { get; set; }
        public int height { get; set; }
        public int x { get; set; }
        public int y { get; set; }
        public int radius { get; set; }
        public long limit { get; set; }

        /// <summary>
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Encoding.BINARY">BINARY</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Encoding.JSON">JSON</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Encoding.GEOJSON">GEOJSON</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Encoding.HTML">HTML</see></term>
        ///     </item>
        /// </list></summary>
        public string encoding { get; set; }

        /// <summary>
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Options.AUTO_COLUMN_SELECTION">AUTO_COLUMN_SELECTION</see>:</term>
        ///         <description>
        /// Valid values are:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeGetFeatureInfoRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        /// </list>
        /// </summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs a VisualizeGetFeatureInfoRequest object with
        /// default parameters.</summary>
        public VisualizeGetFeatureInfoRequest() { }

        /// <summary>Constructs a VisualizeGetFeatureInfoRequest object with
        /// the specified parameters.</summary>
        /// 
        /// <param name="table_names"></param>
        /// <param name="x_column_names"></param>
        /// <param name="y_column_names"></param>
        /// <param name="geometry_column_names"></param>
        /// <param name="query_column_names"></param>
        /// <param name="projection">
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Projection.PLATE_CARREE">PLATE_CARREE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Projection.WEB_MERCATOR">WEB_MERCATOR</see></term>
        ///     </item>
        /// </list></param>
        /// <param name="min_x"></param>
        /// <param name="max_x"></param>
        /// <param name="min_y"></param>
        /// <param name="max_y"></param>
        /// <param name="width"></param>
        /// <param name="height"></param>
        /// <param name="x"></param>
        /// <param name="y"></param>
        /// <param name="radius"></param>
        /// <param name="limit"></param>
        /// <param name="encoding">
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Encoding.BINARY">BINARY</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Encoding.JSON">JSON</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Encoding.GEOJSON">GEOJSON</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Encoding.HTML">HTML</see></term>
        ///     </item>
        /// </list></param>
        /// <param name="options">
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Options.AUTO_COLUMN_SELECTION">AUTO_COLUMN_SELECTION</see>:</term>
        ///         <description>
        /// Valid values are:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="VisualizeGetFeatureInfoRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="VisualizeGetFeatureInfoRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        /// </list>
        /// </param>
        /// 
        public VisualizeGetFeatureInfoRequest( IList<string> table_names,
                                               IList<string> x_column_names,
                                               IList<string> y_column_names,
                                               IList<string> geometry_column_names,
                                               IList<IList<string>> query_column_names,
                                               string projection,
                                               double min_x,
                                               double max_x,
                                               double min_y,
                                               double max_y,
                                               int width,
                                               int height,
                                               int x,
                                               int y,
                                               int radius,
                                               long limit,
                                               string encoding,
                                               IDictionary<string, string> options = null)
        {
            this.table_names = table_names ?? new List<string>();
            this.x_column_names = x_column_names ?? new List<string>();
            this.y_column_names = y_column_names ?? new List<string>();
            this.geometry_column_names = geometry_column_names ?? new List<string>();
            this.query_column_names = query_column_names ?? new List<IList<string>>();
            this.projection = projection ?? "";
            this.min_x = min_x;
            this.max_x = max_x;
            this.min_y = min_y;
            this.max_y = max_y;
            this.width = width;
            this.height = height;
            this.x = x;
            this.y = y;
            this.radius = radius;
            this.limit = limit;
            this.encoding = encoding ?? "";
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class VisualizeGetFeatureInfoRequest
    /// @endcond



    /// @cond NO_DOCS
    /// <summary>A set of results returned by <see
    /// cref="Kinetica.visualizeGetFeatureInfo(IList{string},IList{string},IList{string},IList{string},IList{IList{string}},string,double,double,double,double,int,int,int,int,int,long,string,IDictionary{string, string})"
    /// />.</summary>
    public class VisualizeGetFeatureInfoResponse : KineticaData
    {
        public IList<string> table_names { get; set; } = new List<string>();
        public IList<string> type_schemas { get; set; } = new List<string>();
        public IList<byte[]> records_binary { get; set; } = new List<byte[]>();
        public IList<string> records_json { get; set; } = new List<string>();
        public string geojson_encoded_response { get; set; }
        public string text_encoded_response { get; set; }
        public IDictionary<string, string> info { get; set; } = new Dictionary<string, string>();

    } // end class VisualizeGetFeatureInfoResponse
    /// @endcond





}  // end namespace kinetica
