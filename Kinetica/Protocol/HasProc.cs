/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>A set of parameters for /has/proc.
    /// <br />
    /// Checks the existence of a proc with the given name.</summary>
    public class HasProcRequest : KineticaData
    {

        /// <summary>Name of the proc to check for existence.  </summary>
        public string proc_name { get; set; }

        /// <summary>Optional parameters.  </summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs a HasProcRequest object with default
        /// parameters.</summary>
        public HasProcRequest() { }

        /// <summary>Constructs a HasProcRequest object with the specified
        /// parameters.</summary>
        /// 
        /// <param name="proc_name">Name of the proc to check for existence.
        /// </param>
        /// <param name="options">Optional parameters.  </param>
        /// 
        public HasProcRequest( string proc_name,
                               IDictionary<string, string> options = null)
        {
            this.proc_name = proc_name ?? "";
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class HasProcRequest



    /// <summary>A set of results returned by /has/proc.</summary>
    public class HasProcResponse : KineticaData
    {

        /// <summary>Indicates whether the proc exists or not. Values: true,
        /// false.
        /// <br />
        /// A set of string constants for the parameter <member
        /// name="proc_exists" />.</summary>
        public struct ProcExists
        {
            public const string TRUE = "true";
            public const string FALSE = "false";
        } // end struct ProcExists


        /// <summary>Value of <paramref cref="HasProcRequest.proc_name" />
        /// </summary>
        public string proc_name { get; set; }

        /// <summary>Indicates whether the proc exists or not. Values: true,
        /// false.
        ///   </summary>
        public bool proc_exists { get; set; }

    } // end class HasProcResponse




}  // end namespace kinetica
