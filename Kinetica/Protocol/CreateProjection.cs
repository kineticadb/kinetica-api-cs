/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;

namespace kinetica
{
    /// <summary>A set of parameters for <see
    /// cref="Kinetica.createProjection(CreateProjectionRequest)">Kinetica.createProjection</see>.
    /// </summary>
    /// <remarks><para>Creates a new <a href="../../../concepts/projections/"
    /// target="_top">projection</a> of an existing table. A projection
    /// represents a subset of the columns (potentially including derived
    /// columns) of a table.</para>
    /// <para>For projection details and examples, see <a
    /// href="../../../concepts/projections/" target="_top">Projections</a>.
    /// For limitations, see <a
    /// href="../../../concepts/projections/#limitations-and-cautions"
    /// target="_top">Projection Limitations and Cautions</a>.</para>
    /// <para><a href="../../../concepts/window/" target="_top">Window
    /// functions</a>, which can perform operations like moving averages, are
    /// available through this endpoint as well as <see
    /// cref="Kinetica.getRecordsByColumn(GetRecordsByColumnRequest)">Kinetica.getRecordsByColumn</see>.</para>
    /// <para>A projection can be created with a different <a
    /// href="../../../concepts/tables/#shard-keys" target="_top">shard key</a>
    /// than the source table. By specifying <see
    /// cref="Options.SHARD_KEY">SHARD_KEY</see>, the projection will be
    /// sharded according to the specified columns, regardless of how the
    /// source table is sharded.  The source table can even be unsharded or
    /// replicated.</para>
    /// <para>If <see cref="table_name" /> is empty, selection is performed
    /// against a single-row virtual table.  This can be useful in executing
    /// temporal (<a href="../../../concepts/expressions/#date-time-functions"
    /// target="_top">NOW()</a>), identity (<a
    /// href="../../../concepts/expressions/#user-security-functions"
    /// target="_top">USER()</a>), or constant-based functions (<a
    /// href="../../../concepts/expressions/#scalar-functions"
    /// target="_top">GEODIST(-77.11, 38.88, -71.06, 42.36)</a>).</para>
    /// </remarks>
    public class CreateProjectionRequest : KineticaData
    {
        /// <summary>A set of string constants for the parameter <see
        /// cref="options" />.</summary>
        /// <remarks><para>Optional parameters.</para></remarks>
        public struct Options
        {
            /// <summary>If <see cref="Options.TRUE">TRUE</see>, a unique
            /// temporary table name will be generated in the sys_temp schema
            /// and used in place of <see cref="projection_name" />.</summary>
            /// <remarks><para>Supported values:</para>
            /// <list type="bullet">
            ///     <item>
            ///         <term><see cref="Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see cref="Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// <para>The default value is <see
            /// cref="Options.FALSE">FALSE</see>.</para></remarks>
            public const string CREATE_TEMP_TABLE = "create_temp_table";

            public const string TRUE = "true";
            public const string FALSE = "false";

            /// <summary>[DEPRECATED--please specify the containing schema for
            /// the projection as part of <see cref="projection_name" /> and
            /// use <see
            /// cref="Kinetica.createSchema(CreateSchemaRequest)">Kinetica.createSchema</see>
            /// to create the schema if non-existent]  Name of a schema for the
            /// projection.</summary>
            /// <remarks><para>If the schema is non-existent, it will be
            /// automatically created. The default value is ''.</para>
            /// </remarks>
            public const string COLLECTION_NAME = "collection_name";

            /// <summary>An optional filter <a
            /// href="../../../concepts/expressions/"
            /// target="_top">expression</a> to be applied to the source table
            /// prior to the projection.</summary>
            /// <remarks><para>The default value is ''.</para></remarks>
            public const string EXPRESSION = "expression";

            /// <summary>If <see cref="Options.TRUE">TRUE</see> then the
            /// projection will be replicated even if the source table is not.
            /// </summary>
            /// <remarks><para>Supported values:</para>
            /// <list type="bullet">
            ///     <item>
            ///         <term><see cref="Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see cref="Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// <para>The default value is <see
            /// cref="Options.FALSE">FALSE</see>.</para></remarks>
            public const string IS_REPLICATED = "is_replicated";

            /// <summary>The number of initial results to skip (this can be
            /// useful for paging through the results).</summary>
            /// <remarks><para>The default value is '0'.</para></remarks>
            public const string OFFSET = "offset";

            /// <summary>The number of records to keep.</summary>
            /// <remarks><para>The default value is '-9999'.</para></remarks>
            public const string LIMIT = "limit";

            /// <summary>Comma-separated list of the columns to be sorted by;
            /// e.g. 'timestamp asc, x desc'.</summary>
            /// <remarks><para> The columns specified must be present in <see
            /// cref="column_names" />.  If any alias is given for any column
            /// name, the alias must be used, rather than the original column
            /// name. The default value is ''.</para></remarks>
            public const string ORDER_BY = "order_by";

            /// <summary>Indicates the number of records per chunk to be used
            /// for this projection.</summary>
            public const string CHUNK_SIZE = "chunk_size";

            /// <summary>Indicates the target maximum data size for each column
            /// in a chunk to be used for this projection.</summary>
            public const string CHUNK_COLUMN_MAX_MEMORY = "chunk_column_max_memory";

            /// <summary>Indicates the target maximum data size for all columns
            /// in a chunk to be used for this projection.</summary>
            public const string CHUNK_MAX_MEMORY = "chunk_max_memory";

            /// <summary>Comma-separated list of columns on which to create
            /// indexes on the projection.</summary>
            /// <remarks><para> The columns specified must be present in <see
            /// cref="column_names" />.  If any alias is given for any column
            /// name, the alias must be used, rather than the original column
            /// name.</para></remarks>
            public const string CREATE_INDEXES = "create_indexes";

            /// <summary>Sets the <a href="../../../concepts/ttl/"
            /// target="_top">TTL</a> of the projection specified in <see
            /// cref="projection_name" />.</summary>
            public const string TTL = "ttl";

            /// <summary>Comma-separated list of the columns to be sharded on;
            /// e.g. 'column1, column2'.</summary>
            /// <remarks><para> The columns specified must be present in <see
            /// cref="column_names" />.  If any alias is given for any column
            /// name, the alias must be used, rather than the original column
            /// name. The default value is ''.</para></remarks>
            public const string SHARD_KEY = "shard_key";

            /// <summary>If <see cref="Options.TRUE">TRUE</see>, then the
            /// projection specified in <see cref="projection_name" /> will be
            /// persisted and will not expire unless a <see
            /// cref="Options.TTL">TTL</see> is specified.</summary>
            /// <remarks><para>Supported values:</para>
            /// <list type="bullet">
            ///     <item>
            ///         <term><see cref="Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see cref="Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// <para>The default value is <see
            /// cref="Options.FALSE">FALSE</see>.</para></remarks>
            public const string PERSIST = "persist";

            /// <summary>If <see cref="Options.TRUE">TRUE</see>, then columns
            /// that were dict encoded in the source table will be dict encoded
            /// in the projection.</summary>
            /// <remarks><para>Supported values:</para>
            /// <list type="bullet">
            ///     <item>
            ///         <term><see cref="Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see cref="Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// <para>The default value is <see cref="Options.TRUE">TRUE</see>.
            /// </para></remarks>
            public const string PRESERVE_DICT_ENCODING = "preserve_dict_encoding";

            /// <summary>Determines whether the created projection will retain
            /// the partitioning scheme from the source table.</summary>
            /// <remarks><para>Supported values:</para>
            /// <list type="bullet">
            ///     <item>
            ///         <term><see cref="Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see cref="Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// <para>The default value is <see
            /// cref="Options.FALSE">FALSE</see>.</para></remarks>
            public const string RETAIN_PARTITIONS = "retain_partitions";

            /// <summary><a href="../../../concepts/tables/#partitioning"
            /// target="_top">Partitioning</a> scheme to use.</summary>
            /// <remarks><para>Supported values:</para>
            /// <list type="bullet">
            ///     <item>
            ///         <term><see cref="Options.RANGE">RANGE</see>:</term>
            ///         <description>Use <a
            ///         href="../../../concepts/tables/#partitioning-by-range"
            ///         target="_top">range partitioning</a>.</description>
            ///     </item>
            ///     <item>
            ///         <term><see cref="Options.INTERVAL">INTERVAL</see>:
            ///         </term>
            ///         <description>Use <a
            ///         href="../../../concepts/tables/#partitioning-by-interval"
            ///         target="_top">interval partitioning</a>.</description>
            ///     </item>
            ///     <item>
            ///         <term><see cref="Options.LIST">LIST</see>:</term>
            ///         <description>Use <a
            ///         href="../../../concepts/tables/#partitioning-by-list"
            ///         target="_top">list partitioning</a>.</description>
            ///     </item>
            ///     <item>
            ///         <term><see cref="Options.HASH">HASH</see>:</term>
            ///         <description>Use <a
            ///         href="../../../concepts/tables/#partitioning-by-hash"
            ///         target="_top">hash partitioning</a>.</description>
            ///     </item>
            ///     <item>
            ///         <term><see cref="Options.SERIES">SERIES</see>:</term>
            ///         <description>Use <a
            ///         href="../../../concepts/tables/#partitioning-by-series"
            ///         target="_top">series partitioning</a>.</description>
            ///     </item>
            /// </list></remarks>
            public const string PARTITION_TYPE = "partition_type";

            /// <summary>Use <a
            /// href="../../../concepts/tables/#partitioning-by-range"
            /// target="_top">range partitioning</a>.</summary>
            public const string RANGE = "RANGE";

            /// <summary>Use <a
            /// href="../../../concepts/tables/#partitioning-by-interval"
            /// target="_top">interval partitioning</a>.</summary>
            public const string INTERVAL = "INTERVAL";

            /// <summary>Use <a
            /// href="../../../concepts/tables/#partitioning-by-list"
            /// target="_top">list partitioning</a>.</summary>
            public const string LIST = "LIST";

            /// <summary>Use <a
            /// href="../../../concepts/tables/#partitioning-by-hash"
            /// target="_top">hash partitioning</a>.</summary>
            public const string HASH = "HASH";

            /// <summary>Use <a
            /// href="../../../concepts/tables/#partitioning-by-series"
            /// target="_top">series partitioning</a>.</summary>
            public const string SERIES = "SERIES";

            /// <summary>Comma-separated list of partition keys, which are the
            /// columns or column expressions by which records will be assigned
            /// to partitions defined by <see
            /// cref="Options.PARTITION_DEFINITIONS">PARTITION_DEFINITIONS</see>.
            /// </summary>
            public const string PARTITION_KEYS = "partition_keys";

            /// <summary>Comma-separated list of partition definitions, whose
            /// format depends on the choice of <see
            /// cref="Options.PARTITION_TYPE">PARTITION_TYPE</see>.</summary>
            /// <remarks><para> See <a
            /// href="../../../concepts/tables/#partitioning-by-range"
            /// target="_top">range partitioning</a>, <a
            /// href="../../../concepts/tables/#partitioning-by-interval"
            /// target="_top">interval partitioning</a>, <a
            /// href="../../../concepts/tables/#partitioning-by-list"
            /// target="_top">list partitioning</a>, <a
            /// href="../../../concepts/tables/#partitioning-by-hash"
            /// target="_top">hash partitioning</a>, or <a
            /// href="../../../concepts/tables/#partitioning-by-series"
            /// target="_top">series partitioning</a> for example formats.
            /// </para></remarks>
            public const string PARTITION_DEFINITIONS = "partition_definitions";

            /// <summary>If <see cref="Options.TRUE">TRUE</see>, a new
            /// partition will be created for values which don't fall into an
            /// existing partition.</summary>
            /// <remarks><para>Supported values:</para>
            /// <list type="bullet">
            ///     <item>
            ///         <term><see cref="Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see cref="Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// <para>The default value is <see
            /// cref="Options.FALSE">FALSE</see>.</para></remarks>
            public const string IS_AUTOMATIC_PARTITION = "is_automatic_partition";

            /// <summary>ID of view of which this projection is a member.
            /// </summary>
            /// <remarks><para>The default value is ''.</para></remarks>
            public const string VIEW_ID = "view_id";

            /// <summary>The <a href="../../../rm/concepts/#tier-strategies"
            /// target="_top">tier strategy</a> for the table and its columns.
            /// </summary>
            public const string STRATEGY_DEFINITION = "strategy_definition";

            /// <summary>If set, window functions which require a reshard will
            /// be computed separately and joined back together, if the width
            /// of the projection is greater than the
            /// join_window_functions_threshold.</summary>
            /// <remarks><para>The default value is 'true'.</para></remarks>
            public const string JOIN_WINDOW_FUNCTIONS = "join_window_functions";

            /// <summary>If the projection is greater than this width (in
            /// bytes), then window functions which require a reshard will be
            /// computed separately and joined back together.</summary>
            /// <remarks><para>The default value is ''.</para></remarks>
            public const string JOIN_WINDOW_FUNCTIONS_THRESHOLD = "join_window_functions_threshold";
        } // end struct Options

        /// <summary>Name of the existing table on which the projection is to
        /// be applied, in [schema_name.]table_name format, using standard <a
        /// href="../../../concepts/tables/#table-name-resolution"
        /// target="_top">name resolution rules</a>.</summary>
        /// <remarks><para> An empty table name creates a projection from a
        /// single-row virtual table, where columns specified should be
        /// constants or constant expressions.</para></remarks>
        public string table_name { get; set; }

        /// <summary>Name of the projection to be created, in
        /// [schema_name.]table_name format, using standard <a
        /// href="../../../concepts/tables/#table-name-resolution"
        /// target="_top">name resolution rules</a> and meeting <a
        /// href="../../../concepts/tables/#table-naming-criteria"
        /// target="_top">table naming criteria</a>.</summary>
        public string projection_name { get; set; }

        /// <summary>List of columns from <see cref="table_name" /> to be
        /// included in the projection.</summary>
        /// <remarks><para>Can include derived columns. Can be specified as
        /// aliased via the syntax 'column_name as alias'.</para></remarks>
        public IList<string> column_names { get; set; } = new List<string>();

        /// <summary>Optional parameters.</summary>
        /// <remarks><list type="bullet">
        ///     <item>
        ///         <term><see
        ///         cref="Options.CREATE_TEMP_TABLE">CREATE_TEMP_TABLE</see>:
        ///         </term>
        ///         <description>If <see cref="Options.TRUE">TRUE</see>, a
        ///         unique temporary table name will be generated in the
        ///         sys_temp schema and used in place of <see
        ///         cref="projection_name" />. If <see
        ///         cref="Options.PERSIST">PERSIST</see> is <see
        ///         cref="Options.FALSE">FALSE</see> (or unspecified), then
        ///         this is always allowed even if the caller does not have
        ///         permission to create tables. The generated name is returned
        ///         in <see
        ///         cref="CreateProjectionResponse.Info.QUALIFIED_PROJECTION_NAME">QUALIFIED_PROJECTION_NAME</see>.
        ///         Supported values:
        ///         <list type="bullet">
        ///             <item>
        ///                 <term><see cref="Options.TRUE">TRUE</see></term>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.FALSE">FALSE</see></term>
        ///             </item>
        ///         </list>
        ///         The default value is <see cref="Options.FALSE">FALSE</see>.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.COLLECTION_NAME">COLLECTION_NAME</see>:
        ///         </term>
        ///         <description>[DEPRECATED--please specify the containing
        ///         schema for the projection as part of <see
        ///         cref="projection_name" /> and use <see
        ///         cref="Kinetica.createSchema(CreateSchemaRequest)">Kinetica.createSchema</see>
        ///         to create the schema if non-existent]  Name of a schema for
        ///         the projection. If the schema is non-existent, it will be
        ///         automatically created. The default value is ''.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see cref="Options.EXPRESSION">EXPRESSION</see>:
        ///         </term>
        ///         <description>An optional filter <a
        ///         href="../../../concepts/expressions/"
        ///         target="_top">expression</a> to be applied to the source
        ///         table prior to the projection. The default value is ''.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.IS_REPLICATED">IS_REPLICATED</see>:</term>
        ///         <description>If <see cref="Options.TRUE">TRUE</see> then
        ///         the projection will be replicated even if the source table
        ///         is not.
        ///         Supported values:
        ///         <list type="bullet">
        ///             <item>
        ///                 <term><see cref="Options.TRUE">TRUE</see></term>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.FALSE">FALSE</see></term>
        ///             </item>
        ///         </list>
        ///         The default value is <see cref="Options.FALSE">FALSE</see>.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see cref="Options.OFFSET">OFFSET</see>:</term>
        ///         <description>The number of initial results to skip (this
        ///         can be useful for paging through the results). The default
        ///         value is '0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see cref="Options.LIMIT">LIMIT</see>:</term>
        ///         <description>The number of records to keep. The default
        ///         value is '-9999'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see cref="Options.ORDER_BY">ORDER_BY</see>:</term>
        ///         <description>Comma-separated list of the columns to be
        ///         sorted by; e.g. 'timestamp asc, x desc'.  The columns
        ///         specified must be present in <see cref="column_names" />.
        ///         If any alias is given for any column name, the alias must
        ///         be used, rather than the original column name. The default
        ///         value is ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see cref="Options.CHUNK_SIZE">CHUNK_SIZE</see>:
        ///         </term>
        ///         <description>Indicates the number of records per chunk to
        ///         be used for this projection.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.CHUNK_COLUMN_MAX_MEMORY">CHUNK_COLUMN_MAX_MEMORY</see>:
        ///         </term>
        ///         <description>Indicates the target maximum data size for
        ///         each column in a chunk to be used for this projection.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.CHUNK_MAX_MEMORY">CHUNK_MAX_MEMORY</see>:
        ///         </term>
        ///         <description>Indicates the target maximum data size for all
        ///         columns in a chunk to be used for this projection.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.CREATE_INDEXES">CREATE_INDEXES</see>:</term>
        ///         <description>Comma-separated list of columns on which to
        ///         create indexes on the projection.  The columns specified
        ///         must be present in <see cref="column_names" />.  If any
        ///         alias is given for any column name, the alias must be used,
        ///         rather than the original column name.</description>
        ///     </item>
        ///     <item>
        ///         <term><see cref="Options.TTL">TTL</see>:</term>
        ///         <description>Sets the <a href="../../../concepts/ttl/"
        ///         target="_top">TTL</a> of the projection specified in <see
        ///         cref="projection_name" />.</description>
        ///     </item>
        ///     <item>
        ///         <term><see cref="Options.SHARD_KEY">SHARD_KEY</see>:</term>
        ///         <description>Comma-separated list of the columns to be
        ///         sharded on; e.g. 'column1, column2'.  The columns specified
        ///         must be present in <see cref="column_names" />.  If any
        ///         alias is given for any column name, the alias must be used,
        ///         rather than the original column name. The default value is
        ///         ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see cref="Options.PERSIST">PERSIST</see>:</term>
        ///         <description>If <see cref="Options.TRUE">TRUE</see>, then
        ///         the projection specified in <see cref="projection_name" />
        ///         will be persisted and will not expire unless a <see
        ///         cref="Options.TTL">TTL</see> is specified.   If <see
        ///         cref="Options.FALSE">FALSE</see>, then the projection will
        ///         be an in-memory table and will expire unless a <see
        ///         cref="Options.TTL">TTL</see> is specified otherwise.
        ///         Supported values:
        ///         <list type="bullet">
        ///             <item>
        ///                 <term><see cref="Options.TRUE">TRUE</see></term>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.FALSE">FALSE</see></term>
        ///             </item>
        ///         </list>
        ///         The default value is <see cref="Options.FALSE">FALSE</see>.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.PRESERVE_DICT_ENCODING">PRESERVE_DICT_ENCODING</see>:
        ///         </term>
        ///         <description>If <see cref="Options.TRUE">TRUE</see>, then
        ///         columns that were dict encoded in the source table will be
        ///         dict encoded in the projection.
        ///         Supported values:
        ///         <list type="bullet">
        ///             <item>
        ///                 <term><see cref="Options.TRUE">TRUE</see></term>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.FALSE">FALSE</see></term>
        ///             </item>
        ///         </list>
        ///         The default value is <see cref="Options.TRUE">TRUE</see>.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.RETAIN_PARTITIONS">RETAIN_PARTITIONS</see>:
        ///         </term>
        ///         <description>Determines whether the created projection will
        ///         retain the partitioning scheme from the source table.
        ///         Supported values:
        ///         <list type="bullet">
        ///             <item>
        ///                 <term><see cref="Options.TRUE">TRUE</see></term>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.FALSE">FALSE</see></term>
        ///             </item>
        ///         </list>
        ///         The default value is <see cref="Options.FALSE">FALSE</see>.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.PARTITION_TYPE">PARTITION_TYPE</see>:</term>
        ///         <description><a
        ///         href="../../../concepts/tables/#partitioning"
        ///         target="_top">Partitioning</a> scheme to use.
        ///         Supported values:
        ///         <list type="bullet">
        ///             <item>
        ///                 <term><see cref="Options.RANGE">RANGE</see>:</term>
        ///                 <description>Use <a
        ///                 href="../../../concepts/tables/#partitioning-by-range"
        ///                 target="_top">range partitioning</a>.</description>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.INTERVAL">INTERVAL</see>:
        ///                 </term>
        ///                 <description>Use <a
        ///                 href="../../../concepts/tables/#partitioning-by-interval"
        ///                 target="_top">interval partitioning</a>.
        ///                 </description>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.LIST">LIST</see>:</term>
        ///                 <description>Use <a
        ///                 href="../../../concepts/tables/#partitioning-by-list"
        ///                 target="_top">list partitioning</a>.</description>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.HASH">HASH</see>:</term>
        ///                 <description>Use <a
        ///                 href="../../../concepts/tables/#partitioning-by-hash"
        ///                 target="_top">hash partitioning</a>.</description>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.SERIES">SERIES</see>:
        ///                 </term>
        ///                 <description>Use <a
        ///                 href="../../../concepts/tables/#partitioning-by-series"
        ///                 target="_top">series partitioning</a>.
        ///                 </description>
        ///             </item>
        ///         </list></description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.PARTITION_KEYS">PARTITION_KEYS</see>:</term>
        ///         <description>Comma-separated list of partition keys, which
        ///         are the columns or column expressions by which records will
        ///         be assigned to partitions defined by <see
        ///         cref="Options.PARTITION_DEFINITIONS">PARTITION_DEFINITIONS</see>.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.PARTITION_DEFINITIONS">PARTITION_DEFINITIONS</see>:
        ///         </term>
        ///         <description>Comma-separated list of partition definitions,
        ///         whose format depends on the choice of <see
        ///         cref="Options.PARTITION_TYPE">PARTITION_TYPE</see>.  See <a
        ///         href="../../../concepts/tables/#partitioning-by-range"
        ///         target="_top">range partitioning</a>, <a
        ///         href="../../../concepts/tables/#partitioning-by-interval"
        ///         target="_top">interval partitioning</a>, <a
        ///         href="../../../concepts/tables/#partitioning-by-list"
        ///         target="_top">list partitioning</a>, <a
        ///         href="../../../concepts/tables/#partitioning-by-hash"
        ///         target="_top">hash partitioning</a>, or <a
        ///         href="../../../concepts/tables/#partitioning-by-series"
        ///         target="_top">series partitioning</a> for example formats.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.IS_AUTOMATIC_PARTITION">IS_AUTOMATIC_PARTITION</see>:
        ///         </term>
        ///         <description>If <see cref="Options.TRUE">TRUE</see>, a new
        ///         partition will be created for values which don't fall into
        ///         an existing partition.  Currently only supported for <a
        ///         href="../../../concepts/tables/#partitioning-by-list"
        ///         target="_top">list partitions</a>.
        ///         Supported values:
        ///         <list type="bullet">
        ///             <item>
        ///                 <term><see cref="Options.TRUE">TRUE</see></term>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.FALSE">FALSE</see></term>
        ///             </item>
        ///         </list>
        ///         The default value is <see cref="Options.FALSE">FALSE</see>.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see cref="Options.VIEW_ID">VIEW_ID</see>:</term>
        ///         <description>ID of view of which this projection is a
        ///         member. The default value is ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.STRATEGY_DEFINITION">STRATEGY_DEFINITION</see>:
        ///         </term>
        ///         <description>The <a
        ///         href="../../../rm/concepts/#tier-strategies"
        ///         target="_top">tier strategy</a> for the table and its
        ///         columns.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.JOIN_WINDOW_FUNCTIONS">JOIN_WINDOW_FUNCTIONS</see>:
        ///         </term>
        ///         <description>If set, window functions which require a
        ///         reshard will be computed separately and joined back
        ///         together, if the width of the projection is greater than
        ///         the join_window_functions_threshold. The default value is
        ///         'true'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.JOIN_WINDOW_FUNCTIONS_THRESHOLD">JOIN_WINDOW_FUNCTIONS_THRESHOLD</see>:
        ///         </term>
        ///         <description>If the projection is greater than this width
        ///         (in bytes), then window functions which require a reshard
        ///         will be computed separately and joined back together. The
        ///         default value is ''.</description>
        ///     </item>
        /// </list>
        /// <para>The default value is an empty Dictionary.</para></remarks>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();

        /// <summary>Constructs a CreateProjectionRequest object with default
        /// parameters.</summary>
        public CreateProjectionRequest() { }

        /// <summary>Constructs a CreateProjectionRequest object with the
        /// specified parameters.</summary>
        ///
        /// <param name="table_name">Name of the existing table on which the
        /// projection is to be applied, in [schema_name.]table_name format,
        /// using standard <a
        /// href="../../../concepts/tables/#table-name-resolution"
        /// target="_top">name resolution rules</a>.  An empty table name
        /// creates a projection from a single-row virtual table, where columns
        /// specified should be constants or constant expressions.</param>
        /// <param name="projection_name">Name of the projection to be created,
        /// in [schema_name.]table_name format, using standard <a
        /// href="../../../concepts/tables/#table-name-resolution"
        /// target="_top">name resolution rules</a> and meeting <a
        /// href="../../../concepts/tables/#table-naming-criteria"
        /// target="_top">table naming criteria</a>.</param>
        /// <param name="column_names">List of columns from <paramref
        /// name="table_name" /> to be included in the projection. Can include
        /// derived columns. Can be specified as aliased via the syntax
        /// 'column_name as alias'.</param>
        /// <param name="options">Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        ///         cref="Options.CREATE_TEMP_TABLE">CREATE_TEMP_TABLE</see>:
        ///         </term>
        ///         <description>If <see cref="Options.TRUE">TRUE</see>, a
        ///         unique temporary table name will be generated in the
        ///         sys_temp schema and used in place of <paramref
        ///         name="projection_name" />. If <see
        ///         cref="Options.PERSIST">PERSIST</see> is <see
        ///         cref="Options.FALSE">FALSE</see> (or unspecified), then
        ///         this is always allowed even if the caller does not have
        ///         permission to create tables. The generated name is returned
        ///         in <see
        ///         cref="CreateProjectionResponse.Info.QUALIFIED_PROJECTION_NAME">QUALIFIED_PROJECTION_NAME</see>.
        ///         Supported values:
        ///         <list type="bullet">
        ///             <item>
        ///                 <term><see cref="Options.TRUE">TRUE</see></term>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.FALSE">FALSE</see></term>
        ///             </item>
        ///         </list>
        ///         The default value is <see cref="Options.FALSE">FALSE</see>.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.COLLECTION_NAME">COLLECTION_NAME</see>:
        ///         </term>
        ///         <description>[DEPRECATED--please specify the containing
        ///         schema for the projection as part of <paramref
        ///         name="projection_name" /> and use <see
        ///         cref="Kinetica.createSchema(CreateSchemaRequest)">Kinetica.createSchema</see>
        ///         to create the schema if non-existent]  Name of a schema for
        ///         the projection. If the schema is non-existent, it will be
        ///         automatically created. The default value is ''.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see cref="Options.EXPRESSION">EXPRESSION</see>:
        ///         </term>
        ///         <description>An optional filter <a
        ///         href="../../../concepts/expressions/"
        ///         target="_top">expression</a> to be applied to the source
        ///         table prior to the projection. The default value is ''.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.IS_REPLICATED">IS_REPLICATED</see>:</term>
        ///         <description>If <see cref="Options.TRUE">TRUE</see> then
        ///         the projection will be replicated even if the source table
        ///         is not.
        ///         Supported values:
        ///         <list type="bullet">
        ///             <item>
        ///                 <term><see cref="Options.TRUE">TRUE</see></term>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.FALSE">FALSE</see></term>
        ///             </item>
        ///         </list>
        ///         The default value is <see cref="Options.FALSE">FALSE</see>.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see cref="Options.OFFSET">OFFSET</see>:</term>
        ///         <description>The number of initial results to skip (this
        ///         can be useful for paging through the results). The default
        ///         value is '0'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see cref="Options.LIMIT">LIMIT</see>:</term>
        ///         <description>The number of records to keep. The default
        ///         value is '-9999'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see cref="Options.ORDER_BY">ORDER_BY</see>:</term>
        ///         <description>Comma-separated list of the columns to be
        ///         sorted by; e.g. 'timestamp asc, x desc'.  The columns
        ///         specified must be present in <paramref name="column_names"
        ///         />.  If any alias is given for any column name, the alias
        ///         must be used, rather than the original column name. The
        ///         default value is ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see cref="Options.CHUNK_SIZE">CHUNK_SIZE</see>:
        ///         </term>
        ///         <description>Indicates the number of records per chunk to
        ///         be used for this projection.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.CHUNK_COLUMN_MAX_MEMORY">CHUNK_COLUMN_MAX_MEMORY</see>:
        ///         </term>
        ///         <description>Indicates the target maximum data size for
        ///         each column in a chunk to be used for this projection.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.CHUNK_MAX_MEMORY">CHUNK_MAX_MEMORY</see>:
        ///         </term>
        ///         <description>Indicates the target maximum data size for all
        ///         columns in a chunk to be used for this projection.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.CREATE_INDEXES">CREATE_INDEXES</see>:</term>
        ///         <description>Comma-separated list of columns on which to
        ///         create indexes on the projection.  The columns specified
        ///         must be present in <paramref name="column_names" />.  If
        ///         any alias is given for any column name, the alias must be
        ///         used, rather than the original column name.</description>
        ///     </item>
        ///     <item>
        ///         <term><see cref="Options.TTL">TTL</see>:</term>
        ///         <description>Sets the <a href="../../../concepts/ttl/"
        ///         target="_top">TTL</a> of the projection specified in
        ///         <paramref name="projection_name" />.</description>
        ///     </item>
        ///     <item>
        ///         <term><see cref="Options.SHARD_KEY">SHARD_KEY</see>:</term>
        ///         <description>Comma-separated list of the columns to be
        ///         sharded on; e.g. 'column1, column2'.  The columns specified
        ///         must be present in <paramref name="column_names" />.  If
        ///         any alias is given for any column name, the alias must be
        ///         used, rather than the original column name. The default
        ///         value is ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see cref="Options.PERSIST">PERSIST</see>:</term>
        ///         <description>If <see cref="Options.TRUE">TRUE</see>, then
        ///         the projection specified in <paramref
        ///         name="projection_name" /> will be persisted and will not
        ///         expire unless a <see cref="Options.TTL">TTL</see> is
        ///         specified.   If <see cref="Options.FALSE">FALSE</see>, then
        ///         the projection will be an in-memory table and will expire
        ///         unless a <see cref="Options.TTL">TTL</see> is specified
        ///         otherwise.
        ///         Supported values:
        ///         <list type="bullet">
        ///             <item>
        ///                 <term><see cref="Options.TRUE">TRUE</see></term>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.FALSE">FALSE</see></term>
        ///             </item>
        ///         </list>
        ///         The default value is <see cref="Options.FALSE">FALSE</see>.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.PRESERVE_DICT_ENCODING">PRESERVE_DICT_ENCODING</see>:
        ///         </term>
        ///         <description>If <see cref="Options.TRUE">TRUE</see>, then
        ///         columns that were dict encoded in the source table will be
        ///         dict encoded in the projection.
        ///         Supported values:
        ///         <list type="bullet">
        ///             <item>
        ///                 <term><see cref="Options.TRUE">TRUE</see></term>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.FALSE">FALSE</see></term>
        ///             </item>
        ///         </list>
        ///         The default value is <see cref="Options.TRUE">TRUE</see>.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.RETAIN_PARTITIONS">RETAIN_PARTITIONS</see>:
        ///         </term>
        ///         <description>Determines whether the created projection will
        ///         retain the partitioning scheme from the source table.
        ///         Supported values:
        ///         <list type="bullet">
        ///             <item>
        ///                 <term><see cref="Options.TRUE">TRUE</see></term>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.FALSE">FALSE</see></term>
        ///             </item>
        ///         </list>
        ///         The default value is <see cref="Options.FALSE">FALSE</see>.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.PARTITION_TYPE">PARTITION_TYPE</see>:</term>
        ///         <description><a
        ///         href="../../../concepts/tables/#partitioning"
        ///         target="_top">Partitioning</a> scheme to use.
        ///         Supported values:
        ///         <list type="bullet">
        ///             <item>
        ///                 <term><see cref="Options.RANGE">RANGE</see>:</term>
        ///                 <description>Use <a
        ///                 href="../../../concepts/tables/#partitioning-by-range"
        ///                 target="_top">range partitioning</a>.</description>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.INTERVAL">INTERVAL</see>:
        ///                 </term>
        ///                 <description>Use <a
        ///                 href="../../../concepts/tables/#partitioning-by-interval"
        ///                 target="_top">interval partitioning</a>.
        ///                 </description>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.LIST">LIST</see>:</term>
        ///                 <description>Use <a
        ///                 href="../../../concepts/tables/#partitioning-by-list"
        ///                 target="_top">list partitioning</a>.</description>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.HASH">HASH</see>:</term>
        ///                 <description>Use <a
        ///                 href="../../../concepts/tables/#partitioning-by-hash"
        ///                 target="_top">hash partitioning</a>.</description>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.SERIES">SERIES</see>:
        ///                 </term>
        ///                 <description>Use <a
        ///                 href="../../../concepts/tables/#partitioning-by-series"
        ///                 target="_top">series partitioning</a>.
        ///                 </description>
        ///             </item>
        ///         </list></description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.PARTITION_KEYS">PARTITION_KEYS</see>:</term>
        ///         <description>Comma-separated list of partition keys, which
        ///         are the columns or column expressions by which records will
        ///         be assigned to partitions defined by <see
        ///         cref="Options.PARTITION_DEFINITIONS">PARTITION_DEFINITIONS</see>.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.PARTITION_DEFINITIONS">PARTITION_DEFINITIONS</see>:
        ///         </term>
        ///         <description>Comma-separated list of partition definitions,
        ///         whose format depends on the choice of <see
        ///         cref="Options.PARTITION_TYPE">PARTITION_TYPE</see>.  See <a
        ///         href="../../../concepts/tables/#partitioning-by-range"
        ///         target="_top">range partitioning</a>, <a
        ///         href="../../../concepts/tables/#partitioning-by-interval"
        ///         target="_top">interval partitioning</a>, <a
        ///         href="../../../concepts/tables/#partitioning-by-list"
        ///         target="_top">list partitioning</a>, <a
        ///         href="../../../concepts/tables/#partitioning-by-hash"
        ///         target="_top">hash partitioning</a>, or <a
        ///         href="../../../concepts/tables/#partitioning-by-series"
        ///         target="_top">series partitioning</a> for example formats.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.IS_AUTOMATIC_PARTITION">IS_AUTOMATIC_PARTITION</see>:
        ///         </term>
        ///         <description>If <see cref="Options.TRUE">TRUE</see>, a new
        ///         partition will be created for values which don't fall into
        ///         an existing partition.  Currently only supported for <a
        ///         href="../../../concepts/tables/#partitioning-by-list"
        ///         target="_top">list partitions</a>.
        ///         Supported values:
        ///         <list type="bullet">
        ///             <item>
        ///                 <term><see cref="Options.TRUE">TRUE</see></term>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.FALSE">FALSE</see></term>
        ///             </item>
        ///         </list>
        ///         The default value is <see cref="Options.FALSE">FALSE</see>.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see cref="Options.VIEW_ID">VIEW_ID</see>:</term>
        ///         <description>ID of view of which this projection is a
        ///         member. The default value is ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.STRATEGY_DEFINITION">STRATEGY_DEFINITION</see>:
        ///         </term>
        ///         <description>The <a
        ///         href="../../../rm/concepts/#tier-strategies"
        ///         target="_top">tier strategy</a> for the table and its
        ///         columns.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.JOIN_WINDOW_FUNCTIONS">JOIN_WINDOW_FUNCTIONS</see>:
        ///         </term>
        ///         <description>If set, window functions which require a
        ///         reshard will be computed separately and joined back
        ///         together, if the width of the projection is greater than
        ///         the join_window_functions_threshold. The default value is
        ///         'true'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.JOIN_WINDOW_FUNCTIONS_THRESHOLD">JOIN_WINDOW_FUNCTIONS_THRESHOLD</see>:
        ///         </term>
        ///         <description>If the projection is greater than this width
        ///         (in bytes), then window functions which require a reshard
        ///         will be computed separately and joined back together. The
        ///         default value is ''.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty Dictionary.</param>
        public CreateProjectionRequest( string table_name,
                                        string projection_name,
                                        IList<string> column_names,
                                        IDictionary<string, string> options = null)
        {
            this.table_name = table_name ?? "";
            this.projection_name = projection_name ?? "";
            this.column_names = column_names ?? new List<string>();
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor
    } // end class CreateProjectionRequest

    /// <summary>A set of results returned by <see
    /// cref="Kinetica.createProjection(CreateProjectionRequest)">Kinetica.createProjection</see>.
    /// </summary>
    public class CreateProjectionResponse : KineticaData
    {
        /// <summary>A set of string constants for the parameter <see
        /// cref="info" />.</summary>
        /// <remarks><para>Additional information.</para></remarks>
        public struct Info
        {
            /// <summary>Number of records in the final table</summary>
            public const string COUNT = "count";

            /// <summary>The fully qualified name of the projection (i.e.
            /// including the schema).</summary>
            public const string QUALIFIED_PROJECTION_NAME = "qualified_projection_name";
        } // end struct Info

        /// <summary>Value of <see
        /// cref="CreateProjectionRequest.projection_name">projection_name</see>.
        /// </summary>
        public string projection_name { get; set; }

        /// <summary>Additional information.</summary>
        /// <remarks><list type="bullet">
        ///     <item>
        ///         <term><see cref="Info.COUNT">COUNT</see>:</term>
        ///         <description>Number of records in the final table
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Info.QUALIFIED_PROJECTION_NAME">QUALIFIED_PROJECTION_NAME</see>:
        ///         </term>
        ///         <description>The fully qualified name of the projection
        ///         (i.e. including the schema).</description>
        ///     </item>
        /// </list>
        /// <para>The default value is an empty Dictionary.</para></remarks>
        public IDictionary<string, string> info { get; set; } = new Dictionary<string, string>();
    } // end class CreateProjectionResponse
} // end namespace kinetica
