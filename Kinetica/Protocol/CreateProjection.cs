/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>A set of parameters for <see
    /// cref="Kinetica.createProjection(string,string,IList{string},IDictionary{string, string})"
    /// />.
    /// <br />
    /// Creates a new <a href="../../concepts/projections.html"
    /// target="_top">projection</a> of an existing table. A projection
    /// represents a subset of the columns (potentially including derived
    /// columns) of a table.
    /// <br />
    /// For projection details and examples, see <a
    /// href="../../concepts/projections.html" target="_top">Projections</a>.
    /// For limitations, see <a
    /// href="../../concepts/projections.html#limitations-and-cautions"
    /// target="_top">Projection Limitations and Cautions</a>.
    /// <br />
    /// <a href="../../concepts/window.html" target="_top">Window functions</a>
    /// are available through this endpoint as well as <see
    /// cref="Kinetica.getRecordsByColumn(string,IList{string},long,long,IDictionary{string, string})"
    /// />.
    /// <br />
    /// Notes:
    /// <br />
    /// A moving average can be calculated on a given column using the
    /// following syntax in the <see cref="column_names" /> parameter:
    /// <br />
    /// 'moving_average(column_name,num_points_before,num_points_after) as
    /// new_column_name'
    /// <br />
    /// For each record in the moving_average function's 'column_name'
    /// parameter, it computes the average over the previous
    /// 'num_points_before' records and the subsequent 'num_points_after'
    /// records.
    /// <br />
    /// Note that moving average relies on <i>order_by</i>, and <i>order_by</i>
    /// requires that all the data being ordered resides on the same processing
    /// node, so it won't make sense to use <i>order_by</i> without moving
    /// average.
    /// <br />
    /// Also, a projection can be created with a different <a
    /// href="../../concepts/tables.html#shard-keys" target="_top">shard
    /// key</a> than the source table.  By specifying <i>shard_key</i>, the
    /// projection will be sharded according to the specified columns,
    /// regardless of how the source table is sharded.  The source table can
    /// even be unsharded or replicated.</summary>
    public class CreateProjectionRequest : KineticaData
    {

        /// <summary>Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.COLLECTION_NAME">COLLECTION_NAME</see>:</term>
        ///         <description>Name of a <a
        /// href="../../concepts/collections.html" target="_top">collection</a>
        /// to which the projection is to be assigned as a child. If the
        /// collection provided is non-existent, the collection will be
        /// automatically created. If empty, then the projection will be at the
        /// top level.  The default value is ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.EXPRESSION">EXPRESSION</see>:</term>
        ///         <description>An optional filter <a
        /// href="../../concepts/expressions.html" target="_top">expression</a>
        /// to be applied to the source table prior to the projection.  The
        /// default value is ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.IS_REPLICATED">IS_REPLICATED</see>:</term>
        ///         <description>If <i>true</i> then the projection will be
        /// replicated even if the source table is not.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.LIMIT">LIMIT</see>:</term>
        ///         <description>The number of records to keep.  The default
        /// value is ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.ORDER_BY">ORDER_BY</see>:</term>
        ///         <description>Comma-separated list of the columns to be
        /// sorted by; e.g. 'timestamp asc, x desc'.  The columns specified
        /// must be present in <paramref
        /// cref="CreateProjectionRequest.column_names" />.  If any alias is
        /// given for any column name, the alias must be used, rather than the
        /// original column name.  The default value is ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.MATERIALIZE_ON_GPU">MATERIALIZE_ON_GPU</see>:</term>
        ///         <description>If <i>true</i> then the columns of the
        /// projection will be cached on the GPU.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.CHUNK_SIZE">CHUNK_SIZE</see>:</term>
        ///         <description>Indicates the chunk size to be used for this
        /// table.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.CREATE_INDEXES">CREATE_INDEXES</see>:</term>
        ///         <description>Comma-separated list of columns on which to
        /// create indexes on the output table.  The columns specified must be
        /// present in <paramref cref="CreateProjectionRequest.column_names"
        /// />.  If any alias is given for any column name, the alias must be
        /// used, rather than the original column name.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.TTL">TTL</see>:</term>
        ///         <description>Sets the <a href="../../concepts/ttl.html"
        /// target="_top">TTL</a> of the projection specified in <paramref
        /// cref="CreateProjectionRequest.projection_name" />.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.SHARD_KEY">SHARD_KEY</see>:</term>
        ///         <description>Comma-separated list of the columns to be
        /// sharded on; e.g. 'column1, column2'.  The columns specified must be
        /// present in <paramref cref="CreateProjectionRequest.column_names"
        /// />.  If any alias is given for any column name, the alias must be
        /// used, rather than the original column name.  The default value is
        /// ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.PERSIST">PERSIST</see>:</term>
        ///         <description>If <i>true</i>, then the projection specified
        /// in <paramref cref="CreateProjectionRequest.projection_name" /> will
        /// be persisted and will not expire unless a <i>ttl</i> is specified.
        /// If <i>false</i>, then the projection will be an in-memory table and
        /// will expire unless a <i>ttl</i> is specified otherwise.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.PRESERVE_DICT_ENCODING">PRESERVE_DICT_ENCODING</see>:</term>
        ///         <description>If <i>true</i>, then columns that were dict
        /// encoded in the source table will be dict encoded in the projection
        /// table.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.VIEW_ID">VIEW_ID</see>:</term>
        ///         <description>view this projection is part of.  The default
        /// value is ''.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.
        /// A set of string constants for the parameter <see cref="options"
        /// />.</summary>
        public struct Options
        {

            /// <summary>Name of a <a href="../../concepts/collections.html"
            /// target="_top">collection</a> to which the projection is to be
            /// assigned as a child. If the collection provided is
            /// non-existent, the collection will be automatically created. If
            /// empty, then the projection will be at the top level.  The
            /// default value is ''.</summary>
            public const string COLLECTION_NAME = "collection_name";

            /// <summary>An optional filter <a
            /// href="../../concepts/expressions.html"
            /// target="_top">expression</a> to be applied to the source table
            /// prior to the projection.  The default value is ''.</summary>
            public const string EXPRESSION = "expression";

            /// <summary>If <i>true</i> then the projection will be replicated
            /// even if the source table is not.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="CreateProjectionRequest.Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see>.</summary>
            public const string IS_REPLICATED = "is_replicated";
            public const string TRUE = "true";
            public const string FALSE = "false";

            /// <summary>The number of records to keep.  The default value is
            /// ''.</summary>
            public const string LIMIT = "limit";

            /// <summary>Comma-separated list of the columns to be sorted by;
            /// e.g. 'timestamp asc, x desc'.  The columns specified must be
            /// present in <see cref="column_names" />.  If any alias is given
            /// for any column name, the alias must be used, rather than the
            /// original column name.  The default value is ''.</summary>
            public const string ORDER_BY = "order_by";

            /// <summary>If <i>true</i> then the columns of the projection will
            /// be cached on the GPU.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="CreateProjectionRequest.Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see>.</summary>
            public const string MATERIALIZE_ON_GPU = "materialize_on_gpu";

            /// <summary>Indicates the chunk size to be used for this
            /// table.</summary>
            public const string CHUNK_SIZE = "chunk_size";

            /// <summary>Comma-separated list of columns on which to create
            /// indexes on the output table.  The columns specified must be
            /// present in <see cref="column_names" />.  If any alias is given
            /// for any column name, the alias must be used, rather than the
            /// original column name.</summary>
            public const string CREATE_INDEXES = "create_indexes";

            /// <summary>Sets the <a href="../../concepts/ttl.html"
            /// target="_top">TTL</a> of the projection specified in <see
            /// cref="projection_name" />.</summary>
            public const string TTL = "ttl";

            /// <summary>Comma-separated list of the columns to be sharded on;
            /// e.g. 'column1, column2'.  The columns specified must be present
            /// in <see cref="column_names" />.  If any alias is given for any
            /// column name, the alias must be used, rather than the original
            /// column name.  The default value is ''.</summary>
            public const string SHARD_KEY = "shard_key";

            /// <summary>If <i>true</i>, then the projection specified in <see
            /// cref="projection_name" /> will be persisted and will not expire
            /// unless a <i>ttl</i> is specified.   If <i>false</i>, then the
            /// projection will be an in-memory table and will expire unless a
            /// <i>ttl</i> is specified otherwise.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="CreateProjectionRequest.Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see>.</summary>
            public const string PERSIST = "persist";

            /// <summary>If <i>true</i>, then columns that were dict encoded in
            /// the source table will be dict encoded in the projection table.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="CreateProjectionRequest.Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see>.</summary>
            public const string PRESERVE_DICT_ENCODING = "preserve_dict_encoding";

            /// <summary>view this projection is part of.  The default value is
            /// ''.</summary>
            public const string VIEW_ID = "view_id";
        } // end struct Options


        /// <summary>Name of the existing table on which the projection is to
        /// be applied.  </summary>
        public string table_name { get; set; }

        /// <summary>Name of the projection to be created. Has the same naming
        /// restrictions as <a href="../../concepts/tables.html"
        /// target="_top">tables</a>.  </summary>
        public string projection_name { get; set; }

        /// <summary>List of columns from <paramref
        /// cref="CreateProjectionRequest.table_name" /> to be included in the
        /// projection. Can include derived columns. Can be specified as
        /// aliased via the syntax 'column_name as alias'.  </summary>
        public IList<string> column_names { get; set; } = new List<string>();

        /// <summary>Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.COLLECTION_NAME">COLLECTION_NAME</see>:</term>
        ///         <description>Name of a <a
        /// href="../../concepts/collections.html" target="_top">collection</a>
        /// to which the projection is to be assigned as a child. If the
        /// collection provided is non-existent, the collection will be
        /// automatically created. If empty, then the projection will be at the
        /// top level.  The default value is ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.EXPRESSION">EXPRESSION</see>:</term>
        ///         <description>An optional filter <a
        /// href="../../concepts/expressions.html" target="_top">expression</a>
        /// to be applied to the source table prior to the projection.  The
        /// default value is ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.IS_REPLICATED">IS_REPLICATED</see>:</term>
        ///         <description>If <i>true</i> then the projection will be
        /// replicated even if the source table is not.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.LIMIT">LIMIT</see>:</term>
        ///         <description>The number of records to keep.  The default
        /// value is ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.ORDER_BY">ORDER_BY</see>:</term>
        ///         <description>Comma-separated list of the columns to be
        /// sorted by; e.g. 'timestamp asc, x desc'.  The columns specified
        /// must be present in <paramref
        /// cref="CreateProjectionRequest.column_names" />.  If any alias is
        /// given for any column name, the alias must be used, rather than the
        /// original column name.  The default value is ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.MATERIALIZE_ON_GPU">MATERIALIZE_ON_GPU</see>:</term>
        ///         <description>If <i>true</i> then the columns of the
        /// projection will be cached on the GPU.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.CHUNK_SIZE">CHUNK_SIZE</see>:</term>
        ///         <description>Indicates the chunk size to be used for this
        /// table.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.CREATE_INDEXES">CREATE_INDEXES</see>:</term>
        ///         <description>Comma-separated list of columns on which to
        /// create indexes on the output table.  The columns specified must be
        /// present in <paramref cref="CreateProjectionRequest.column_names"
        /// />.  If any alias is given for any column name, the alias must be
        /// used, rather than the original column name.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.TTL">TTL</see>:</term>
        ///         <description>Sets the <a href="../../concepts/ttl.html"
        /// target="_top">TTL</a> of the projection specified in <paramref
        /// cref="CreateProjectionRequest.projection_name" />.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.SHARD_KEY">SHARD_KEY</see>:</term>
        ///         <description>Comma-separated list of the columns to be
        /// sharded on; e.g. 'column1, column2'.  The columns specified must be
        /// present in <paramref cref="CreateProjectionRequest.column_names"
        /// />.  If any alias is given for any column name, the alias must be
        /// used, rather than the original column name.  The default value is
        /// ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.PERSIST">PERSIST</see>:</term>
        ///         <description>If <i>true</i>, then the projection specified
        /// in <paramref cref="CreateProjectionRequest.projection_name" /> will
        /// be persisted and will not expire unless a <i>ttl</i> is specified.
        /// If <i>false</i>, then the projection will be an in-memory table and
        /// will expire unless a <i>ttl</i> is specified otherwise.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.PRESERVE_DICT_ENCODING">PRESERVE_DICT_ENCODING</see>:</term>
        ///         <description>If <i>true</i>, then columns that were dict
        /// encoded in the source table will be dict encoded in the projection
        /// table.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.VIEW_ID">VIEW_ID</see>:</term>
        ///         <description>view this projection is part of.  The default
        /// value is ''.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.</summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs a CreateProjectionRequest object with default
        /// parameters.</summary>
        public CreateProjectionRequest() { }

        /// <summary>Constructs a CreateProjectionRequest object with the
        /// specified parameters.</summary>
        /// 
        /// <param name="table_name">Name of the existing table on which the
        /// projection is to be applied.  </param>
        /// <param name="projection_name">Name of the projection to be created.
        /// Has the same naming restrictions as <a
        /// href="../../concepts/tables.html" target="_top">tables</a>.
        /// </param>
        /// <param name="column_names">List of columns from <paramref
        /// cref="CreateProjectionRequest.table_name" /> to be included in the
        /// projection. Can include derived columns. Can be specified as
        /// aliased via the syntax 'column_name as alias'.  </param>
        /// <param name="options">Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.COLLECTION_NAME">COLLECTION_NAME</see>:</term>
        ///         <description>Name of a <a
        /// href="../../concepts/collections.html" target="_top">collection</a>
        /// to which the projection is to be assigned as a child. If the
        /// collection provided is non-existent, the collection will be
        /// automatically created. If empty, then the projection will be at the
        /// top level.  The default value is ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.EXPRESSION">EXPRESSION</see>:</term>
        ///         <description>An optional filter <a
        /// href="../../concepts/expressions.html" target="_top">expression</a>
        /// to be applied to the source table prior to the projection.  The
        /// default value is ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.IS_REPLICATED">IS_REPLICATED</see>:</term>
        ///         <description>If <i>true</i> then the projection will be
        /// replicated even if the source table is not.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.LIMIT">LIMIT</see>:</term>
        ///         <description>The number of records to keep.  The default
        /// value is ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.ORDER_BY">ORDER_BY</see>:</term>
        ///         <description>Comma-separated list of the columns to be
        /// sorted by; e.g. 'timestamp asc, x desc'.  The columns specified
        /// must be present in <paramref
        /// cref="CreateProjectionRequest.column_names" />.  If any alias is
        /// given for any column name, the alias must be used, rather than the
        /// original column name.  The default value is ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.MATERIALIZE_ON_GPU">MATERIALIZE_ON_GPU</see>:</term>
        ///         <description>If <i>true</i> then the columns of the
        /// projection will be cached on the GPU.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.CHUNK_SIZE">CHUNK_SIZE</see>:</term>
        ///         <description>Indicates the chunk size to be used for this
        /// table.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.CREATE_INDEXES">CREATE_INDEXES</see>:</term>
        ///         <description>Comma-separated list of columns on which to
        /// create indexes on the output table.  The columns specified must be
        /// present in <paramref cref="CreateProjectionRequest.column_names"
        /// />.  If any alias is given for any column name, the alias must be
        /// used, rather than the original column name.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.TTL">TTL</see>:</term>
        ///         <description>Sets the <a href="../../concepts/ttl.html"
        /// target="_top">TTL</a> of the projection specified in <paramref
        /// cref="CreateProjectionRequest.projection_name" />.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.SHARD_KEY">SHARD_KEY</see>:</term>
        ///         <description>Comma-separated list of the columns to be
        /// sharded on; e.g. 'column1, column2'.  The columns specified must be
        /// present in <paramref cref="CreateProjectionRequest.column_names"
        /// />.  If any alias is given for any column name, the alias must be
        /// used, rather than the original column name.  The default value is
        /// ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.PERSIST">PERSIST</see>:</term>
        ///         <description>If <i>true</i>, then the projection specified
        /// in <paramref cref="CreateProjectionRequest.projection_name" /> will
        /// be persisted and will not expire unless a <i>ttl</i> is specified.
        /// If <i>false</i>, then the projection will be an in-memory table and
        /// will expire unless a <i>ttl</i> is specified otherwise.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.PRESERVE_DICT_ENCODING">PRESERVE_DICT_ENCODING</see>:</term>
        ///         <description>If <i>true</i>, then columns that were dict
        /// encoded in the source table will be dict encoded in the projection
        /// table.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.TRUE">TRUE</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see></term>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateProjectionRequest.Options.FALSE">FALSE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateProjectionRequest.Options.VIEW_ID">VIEW_ID</see>:</term>
        ///         <description>view this projection is part of.  The default
        /// value is ''.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.</param>
        /// 
        public CreateProjectionRequest( string table_name,
                                        string projection_name,
                                        IList<string> column_names,
                                        IDictionary<string, string> options = null)
        {
            this.table_name = table_name ?? "";
            this.projection_name = projection_name ?? "";
            this.column_names = column_names ?? new List<string>();
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class CreateProjectionRequest



    /// <summary>A set of results returned by <see
    /// cref="Kinetica.createProjection(string,string,IList{string},IDictionary{string, string})"
    /// />.</summary>
    public class CreateProjectionResponse : KineticaData
    {

        /// <summary>Value of <paramref
        /// cref="CreateProjectionRequest.projection_name" />.  </summary>
        public string projection_name { get; set; }

        /// <summary>Additional information.  </summary>
        public IDictionary<string, string> info { get; set; } = new Dictionary<string, string>();

    } // end class CreateProjectionResponse




}  // end namespace kinetica
