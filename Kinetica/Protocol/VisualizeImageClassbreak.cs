/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>@private
    /// A set of parameters for /visualize/image/classbreak.
    /// <br />
    /// </summary>
    public class VisualizeImageClassbreakRequest : KineticaData
    {

        /// <summary>@private
        /// Values: EPSG:4326, PLATE_CARREE, 900913, EPSG:900913, 102100,
        /// EPSG:102100, 3857, EPSG:3857, WEB_MERCATOR.
        /// <br />
        /// A set of string constants for the parameter <member
        /// name="projection" />.</summary>
        public struct Projection
        {

            /// <summary>@private
            /// </summary>
            public const string EPSG_4326 = "EPSG:4326";

            /// <summary>@private
            /// </summary>
            public const string PLATE_CARREE = "PLATE_CARREE";

            /// <summary>@private
            /// </summary>
            public const string _900913 = "900913";

            /// <summary>@private
            /// </summary>
            public const string EPSG_900913 = "EPSG:900913";

            /// <summary>@private
            /// </summary>
            public const string _102100 = "102100";

            /// <summary>@private
            /// </summary>
            public const string EPSG_102100 = "EPSG:102100";

            /// <summary>@private
            /// </summary>
            public const string _3857 = "3857";

            /// <summary>@private
            /// </summary>
            public const string EPSG_3857 = "EPSG:3857";

            /// <summary>@private
            /// </summary>
            public const string WEB_MERCATOR = "WEB_MERCATOR";

    /// <summary>@private
    /// </summary>
        } // end struct Projection


        /// <summary>@private
        /// <br />
        /// <list type="bullet">
        ///     <item>
        ///         <term>do_points</term>
        ///         <description>Values: true, false.
        /// </description>
        ///     </item>
        ///     <item>
        ///         <term>do_shapes</term>
        ///         <description>Values: true, false.
        /// </description>
        ///     </item>
        ///     <item>
        ///         <term>do_tracks</term>
        ///         <description>Values: true, false.
        /// </description>
        ///     </item>
        ///     <item>
        ///         <term>do_symbology</term>
        ///         <description>Values: true, false.
        /// </description>
        ///     </item>
        ///     <item>
        ///         <term>pointcolors</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>pointsizes</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>pointshapes</term>
        ///         <description>Values: none, circle, square, diamond,
        /// hollowcircle, hollowsquare, hollowdiamond, SYMBOLCODE.
        /// </description>
        ///     </item>
        ///     <item>
        ///         <term>shapelinewidths</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>shapelinecolors</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>shapefillcolors</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>tracklinewidths</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>tracklinecolors</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>trackmarkersizes</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>trackmarkercolors</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>trackmarkershapes</term>
        ///         <description>Values: none, circle, square, diamond,
        /// hollowcircle, hollowsquare, hollowdiamond, SYMBOLCODE.
        /// </description>
        ///     </item>
        ///     <item>
        ///         <term>trackheadcolors</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>trackheadsizes</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>trackheadshapes</term>
        ///         <description>Values: none, circle, square, diamond,
        /// hollowcircle, hollowsquare, hollowdiamond, SYMBOLCODE.
        /// </description>
        ///     </item>
        /// </list>
        /// <br />
        /// A set of string constants for the parameter <member
        /// name="style_options" />.</summary>
        public struct StyleOptions
        {

            /// <summary>@private
            /// Values: true, false.
            /// </summary>
            public const string DO_POINTS = "do_points";

            /// <summary>@private
            /// </summary>
            public const string TRUE = "true";

            /// <summary>@private
            /// </summary>
            public const string FALSE = "false";

            /// <summary>@private
            /// Values: true, false.
            /// </summary>
            public const string DO_SHAPES = "do_shapes";

            /// <summary>@private
            /// Values: true, false.
            /// </summary>
            public const string DO_TRACKS = "do_tracks";

            /// <summary>@private
            /// Values: true, false.
            /// </summary>
            public const string DO_SYMBOLOGY = "do_symbology";

            /// <summary>@private
            /// </summary>
            public const string POINTCOLORS = "pointcolors";

            /// <summary>@private
            /// </summary>
            public const string POINTSIZES = "pointsizes";

            /// <summary>@private
            /// Values: none, circle, square, diamond, hollowcircle,
            /// hollowsquare, hollowdiamond, SYMBOLCODE.
            /// </summary>
            public const string POINTSHAPES = "pointshapes";

            /// <summary>@private
            /// </summary>
            public const string NONE = "none";

            /// <summary>@private
            /// </summary>
            public const string CIRCLE = "circle";

            /// <summary>@private
            /// </summary>
            public const string SQUARE = "square";

            /// <summary>@private
            /// </summary>
            public const string DIAMOND = "diamond";

            /// <summary>@private
            /// </summary>
            public const string HOLLOWCIRCLE = "hollowcircle";

            /// <summary>@private
            /// </summary>
            public const string HOLLOWSQUARE = "hollowsquare";

            /// <summary>@private
            /// </summary>
            public const string HOLLOWDIAMOND = "hollowdiamond";

            /// <summary>@private
            /// </summary>
            public const string SYMBOLCODE = "SYMBOLCODE";

            /// <summary>@private
            /// </summary>
            public const string SHAPELINEWIDTHS = "shapelinewidths";

            /// <summary>@private
            /// </summary>
            public const string SHAPELINECOLORS = "shapelinecolors";

            /// <summary>@private
            /// </summary>
            public const string SHAPEFILLCOLORS = "shapefillcolors";

            /// <summary>@private
            /// </summary>
            public const string TRACKLINEWIDTHS = "tracklinewidths";

            /// <summary>@private
            /// </summary>
            public const string TRACKLINECOLORS = "tracklinecolors";

            /// <summary>@private
            /// </summary>
            public const string TRACKMARKERSIZES = "trackmarkersizes";

            /// <summary>@private
            /// </summary>
            public const string TRACKMARKERCOLORS = "trackmarkercolors";

            /// <summary>@private
            /// Values: none, circle, square, diamond, hollowcircle,
            /// hollowsquare, hollowdiamond, SYMBOLCODE.
            /// </summary>
            public const string TRACKMARKERSHAPES = "trackmarkershapes";

            /// <summary>@private
            /// </summary>
            public const string TRACKHEADCOLORS = "trackheadcolors";

            /// <summary>@private
            /// </summary>
            public const string TRACKHEADSIZES = "trackheadsizes";

            /// <summary>@private
            /// Values: none, circle, square, diamond, hollowcircle,
            /// hollowsquare, hollowdiamond, SYMBOLCODE.
            /// </summary>
            public const string TRACKHEADSHAPES = "trackheadshapes";

    /// <summary>@private
    /// </summary>
        } // end struct StyleOptions


        /// <summary>@private
        /// </summary>

        /// <summary>@private
        /// </summary>
        public IList<string> table_names { get; set; } = new List<string>();

        /// <summary>@private
        /// </summary>
        public IList<string> world_table_names { get; set; } = new List<string>();

        /// <summary>@private
        /// </summary>
        public string x_column_name { get; set; }

        /// <summary>@private
        /// </summary>
        public string y_column_name { get; set; }

        /// <summary>@private
        /// </summary>
        public IList<IList<string>> track_ids { get; set; } = new List<IList<string>>();

        /// <summary>@private
        /// </summary>
        public string cb_column_name1 { get; set; }

        /// <summary>@private
        /// </summary>
        public IList<string> cb_vals1 { get; set; } = new List<string>();

        /// <summary>@private
        /// </summary>
        public IList<string> cb_column_name2 { get; set; } = new List<string>();

        /// <summary>@private
        /// </summary>
        public IList<IList<string>> cb_vals2 { get; set; } = new List<IList<string>>();

        /// <summary>@private
        /// </summary>
        public double min_x { get; set; }

        /// <summary>@private
        /// </summary>
        public double max_x { get; set; }

        /// <summary>@private
        /// </summary>
        public double min_y { get; set; }

        /// <summary>@private
        /// </summary>
        public double max_y { get; set; }

        /// <summary>@private
        /// </summary>
        public int width { get; set; }

        /// <summary>@private
        /// </summary>
        public int height { get; set; }

        /// <summary>@private
        /// Values: EPSG:4326, PLATE_CARREE, 900913, EPSG:900913, 102100,
        /// EPSG:102100, 3857, EPSG:3857, WEB_MERCATOR.
        /// </summary>
        public string projection { get; set; } = Projection.PLATE_CARREE;

        /// <summary>@private
        /// </summary>
        public long bg_color { get; set; }

        /// <summary>@private
        /// <br />
        /// <list type="bullet">
        ///     <item>
        ///         <term>do_points</term>
        ///         <description>Values: true, false.
        /// </description>
        ///     </item>
        ///     <item>
        ///         <term>do_shapes</term>
        ///         <description>Values: true, false.
        /// </description>
        ///     </item>
        ///     <item>
        ///         <term>do_tracks</term>
        ///         <description>Values: true, false.
        /// </description>
        ///     </item>
        ///     <item>
        ///         <term>do_symbology</term>
        ///         <description>Values: true, false.
        /// </description>
        ///     </item>
        ///     <item>
        ///         <term>pointcolors</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>pointsizes</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>pointshapes</term>
        ///         <description>Values: none, circle, square, diamond,
        /// hollowcircle, hollowsquare, hollowdiamond, SYMBOLCODE.
        /// </description>
        ///     </item>
        ///     <item>
        ///         <term>shapelinewidths</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>shapelinecolors</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>shapefillcolors</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>tracklinewidths</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>tracklinecolors</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>trackmarkersizes</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>trackmarkercolors</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>trackmarkershapes</term>
        ///         <description>Values: none, circle, square, diamond,
        /// hollowcircle, hollowsquare, hollowdiamond, SYMBOLCODE.
        /// </description>
        ///     </item>
        ///     <item>
        ///         <term>trackheadcolors</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>trackheadsizes</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>trackheadshapes</term>
        ///         <description>Values: none, circle, square, diamond,
        /// hollowcircle, hollowsquare, hollowdiamond, SYMBOLCODE.
        /// </description>
        ///     </item>
        /// </list>
        /// </summary>
        public IDictionary<string, IList<string>> style_options { get; set; } = new Dictionary<string, IList<string>>();

        /// <summary>@private
        /// </summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>@private
        /// Constructs a VisualizeImageClassbreakRequest object with default
        /// parameters.</summary>
        public VisualizeImageClassbreakRequest() { }

        /// <summary>@private
        /// Constructs a VisualizeImageClassbreakRequest object with the
        /// specified parameters.</summary>
        /// 
        /// <param name="table_names"></param>
        /// <param name="world_table_names"></param>
        /// <param name="x_column_name"></param>
        /// <param name="y_column_name"></param>
        /// <param name="track_ids"></param>
        /// <param name="cb_column_name1"></param>
        /// <param name="cb_vals1"></param>
        /// <param name="cb_column_name2"></param>
        /// <param name="cb_vals2"></param>
        /// <param name="min_x"></param>
        /// <param name="max_x"></param>
        /// <param name="min_y"></param>
        /// <param name="max_y"></param>
        /// <param name="width"></param>
        /// <param name="height"></param>
        /// <param name="projection">Values: EPSG:4326, PLATE_CARREE, 900913,
        /// EPSG:900913, 102100, EPSG:102100, 3857, EPSG:3857, WEB_MERCATOR.
        /// </param>
        /// <param name="bg_color"></param>
        /// <param name="style_options">
        /// <list type="bullet">
        ///     <item>
        ///         <term>do_points</term>
        ///         <description>Values: true, false.
        /// </description>
        ///     </item>
        ///     <item>
        ///         <term>do_shapes</term>
        ///         <description>Values: true, false.
        /// </description>
        ///     </item>
        ///     <item>
        ///         <term>do_tracks</term>
        ///         <description>Values: true, false.
        /// </description>
        ///     </item>
        ///     <item>
        ///         <term>do_symbology</term>
        ///         <description>Values: true, false.
        /// </description>
        ///     </item>
        ///     <item>
        ///         <term>pointcolors</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>pointsizes</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>pointshapes</term>
        ///         <description>Values: none, circle, square, diamond,
        /// hollowcircle, hollowsquare, hollowdiamond, SYMBOLCODE.
        /// </description>
        ///     </item>
        ///     <item>
        ///         <term>shapelinewidths</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>shapelinecolors</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>shapefillcolors</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>tracklinewidths</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>tracklinecolors</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>trackmarkersizes</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>trackmarkercolors</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>trackmarkershapes</term>
        ///         <description>Values: none, circle, square, diamond,
        /// hollowcircle, hollowsquare, hollowdiamond, SYMBOLCODE.
        /// </description>
        ///     </item>
        ///     <item>
        ///         <term>trackheadcolors</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>trackheadsizes</term>
        ///         <description></description>
        ///     </item>
        ///     <item>
        ///         <term>trackheadshapes</term>
        ///         <description>Values: none, circle, square, diamond,
        /// hollowcircle, hollowsquare, hollowdiamond, SYMBOLCODE.
        /// </description>
        ///     </item>
        /// </list>
        /// </param>
        /// <param name="options"></param>
        /// 
        public VisualizeImageClassbreakRequest( IList<string> table_names,
                                                IList<string> world_table_names,
                                                string x_column_name,
                                                string y_column_name,
                                                IList<IList<string>> track_ids,
                                                string cb_column_name1,
                                                IList<string> cb_vals1,
                                                IList<string> cb_column_name2,
                                                IList<IList<string>> cb_vals2,
                                                double min_x,
                                                double max_x,
                                                double min_y,
                                                double max_y,
                                                int width,
                                                int height,
                                                string projection,
                                                long bg_color,
                                                IDictionary<string, IList<string>> style_options,
                                                IDictionary<string, string> options = null)
        {
            this.table_names = table_names ?? new List<string>();
            this.world_table_names = world_table_names ?? new List<string>();
            this.x_column_name = x_column_name ?? "";
            this.y_column_name = y_column_name ?? "";
            this.track_ids = track_ids ?? new List<IList<string>>();
            this.cb_column_name1 = cb_column_name1 ?? "";
            this.cb_vals1 = cb_vals1 ?? new List<string>();
            this.cb_column_name2 = cb_column_name2 ?? new List<string>();
            this.cb_vals2 = cb_vals2 ?? new List<IList<string>>();
            this.min_x = min_x;
            this.max_x = max_x;
            this.min_y = min_y;
            this.max_y = max_y;
            this.width = width;
            this.height = height;
            this.projection = projection ?? Projection.PLATE_CARREE;
            this.bg_color = bg_color;
            this.style_options = style_options ?? new Dictionary<string, IList<string>>();
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor


    /// <summary>@private
    /// </summary>
    } // end class VisualizeImageClassbreakRequest



    /// <summary>@private
    /// A set of results returned by /visualize/image/classbreak.</summary>
    public class VisualizeImageClassbreakResponse : KineticaData
    {

        /// <summary>@private
        /// </summary>

        /// <summary>@private
        /// </summary>
        public double width { get; set; }

        /// <summary>@private
        /// </summary>
        public double height { get; set; }

        /// <summary>@private
        /// </summary>
        public long bg_color { get; set; }

        /// <summary>@private
        /// </summary>
        public byte[] image_data { get; set; }


    /// <summary>@private
    /// </summary>
    } // end class VisualizeImageClassbreakResponse




}  // end namespace kinetica
