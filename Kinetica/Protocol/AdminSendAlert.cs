/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;

namespace kinetica
{
    /// <summary>A set of parameters for <see
    /// cref="Kinetica.adminSendAlert(AdminSendAlertRequest)">Kinetica.adminSendAlert</see>.
    /// </summary>
    /// <remarks><para>Sends a user generated alert to the monitoring system.
    /// </para></remarks>
    public class AdminSendAlertRequest : KineticaData
    {
        /// <summary>A set of string constants for the parameter <see
        /// cref="log_level" />.</summary>
        /// <remarks><para>Alert message logging criteria</para></remarks>
        public struct LogLevel
        {
            public const string FATAL = "fatal";
            public const string ERROR = "error";
            public const string WARN = "warn";
            public const string INFO = "info";
            public const string DEBUG = "debug";
        } // end struct LogLevel

        /// <summary>Alert message body.</summary>
        /// <remarks><para>The default value is ''.</para></remarks>
        public string message { get; set; } = "";

        /// <summary>Label to add to alert message.</summary>
        /// <remarks><para>The default value is ''.</para></remarks>
        public string label { get; set; } = "";

        /// <summary>Alert message logging criteria.</summary>
        /// <remarks><para>Supported values:</para>
        /// <list type="bullet">
        ///     <item>
        ///         <term><see cref="LogLevel.FATAL">FATAL</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see cref="LogLevel.ERROR">ERROR</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see cref="LogLevel.WARN">WARN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see cref="LogLevel.INFO">INFO</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see cref="LogLevel.DEBUG">DEBUG</see></term>
        ///     </item>
        /// </list></remarks>
        public string log_level { get; set; }

        /// <summary>Optional parameters.</summary>
        /// <remarks><para>The default value is an empty Dictionary.</para>
        /// </remarks>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();

        /// <summary>Constructs an AdminSendAlertRequest object with default
        /// parameters.</summary>
        public AdminSendAlertRequest() { }

        /// <summary>Constructs an AdminSendAlertRequest object with the
        /// specified parameters.</summary>
        ///
        /// <param name="message">Alert message body. The default value is ''.
        /// </param>
        /// <param name="label">Label to add to alert message. The default
        /// value is ''.</param>
        /// <param name="log_level">Alert message logging criteria.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see cref="LogLevel.FATAL">FATAL</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see cref="LogLevel.ERROR">ERROR</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see cref="LogLevel.WARN">WARN</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see cref="LogLevel.INFO">INFO</see></term>
        ///     </item>
        ///     <item>
        ///         <term><see cref="LogLevel.DEBUG">DEBUG</see></term>
        ///     </item>
        /// </list></param>
        /// <param name="options">Optional parameters. The default value is an
        /// empty Dictionary.</param>
        public AdminSendAlertRequest( string message,
                                      string label,
                                      string log_level,
                                      IDictionary<string, string> options = null)
        {
            this.message = message ?? "";
            this.label = label ?? "";
            this.log_level = log_level ?? "";
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor
    } // end class AdminSendAlertRequest

    /// <summary>A set of results returned by <see
    /// cref="Kinetica.adminSendAlert(AdminSendAlertRequest)">Kinetica.adminSendAlert</see>.
    /// </summary>
    public class AdminSendAlertResponse : KineticaData
    {
        /// <summary>Additional information.</summary>
        public IDictionary<string, string> info { get; set; } = new Dictionary<string, string>();
    } // end class AdminSendAlertResponse
} // end namespace kinetica
