/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;

namespace kinetica
{
    /// <summary>A set of parameters for <see
    /// cref="Kinetica.grantPermissionDirectory(GrantPermissionDirectoryRequest)">Kinetica.grantPermissionDirectory</see>.
    /// </summary>
    /// <remarks><para>Grants a <a href="../../../tools/kifs/"
    /// target="_top">KiFS</a> directory-level permission to a user or role.
    /// </para></remarks>
    public class GrantPermissionDirectoryRequest : KineticaData
    {
        /// <summary>A set of string constants for the parameter <see
        /// cref="permission" />.</summary>
        /// <remarks><para>Permission to grant to the user or role.</para>
        /// </remarks>
        public struct Permission
        {
            /// <summary>For files in the directory, access to list files,
            /// download files, or use files in server side functions</summary>
            public const string DIRECTORY_READ = "directory_read";

            /// <summary>Access to upload files to, or delete files from, the
            /// directory.</summary>
            /// <remarks><para>A user or role with write access automatically
            /// has read access</para></remarks>
            public const string DIRECTORY_WRITE = "directory_write";
        } // end struct Permission

        /// <summary>Name of the user or role to which the permission will be
        /// granted.</summary>
        /// <remarks><para>Must be an existing user or role.</para></remarks>
        public string name { get; set; }

        /// <summary>Permission to grant to the user or role.</summary>
        /// <remarks><para>Supported values:</para>
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        ///         cref="Permission.DIRECTORY_READ">DIRECTORY_READ</see>:
        ///         </term>
        ///         <description>For files in the directory, access to list
        ///         files, download files, or use files in server side
        ///         functions</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Permission.DIRECTORY_WRITE">DIRECTORY_WRITE</see>:
        ///         </term>
        ///         <description>Access to upload files to, or delete files
        ///         from, the directory. A user or role with write access
        ///         automatically has read access</description>
        ///     </item>
        /// </list></remarks>
        public string permission { get; set; }

        /// <summary>Name of the KiFS directory to which the permission grants
        /// access.</summary>
        /// <remarks><para>An empty directory name grants access to all KiFS
        /// directories</para></remarks>
        public string directory_name { get; set; }

        /// <summary>Optional parameters.</summary>
        /// <remarks><para>The default value is an empty Dictionary.</para>
        /// </remarks>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();

        /// <summary>Constructs a GrantPermissionDirectoryRequest object with
        /// default parameters.</summary>
        public GrantPermissionDirectoryRequest() { }

        /// <summary>Constructs a GrantPermissionDirectoryRequest object with
        /// the specified parameters.</summary>
        ///
        /// <param name="name">Name of the user or role to which the permission
        /// will be granted. Must be an existing user or role.</param>
        /// <param name="permission">Permission to grant to the user or role.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        ///         cref="Permission.DIRECTORY_READ">DIRECTORY_READ</see>:
        ///         </term>
        ///         <description>For files in the directory, access to list
        ///         files, download files, or use files in server side
        ///         functions</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Permission.DIRECTORY_WRITE">DIRECTORY_WRITE</see>:
        ///         </term>
        ///         <description>Access to upload files to, or delete files
        ///         from, the directory. A user or role with write access
        ///         automatically has read access</description>
        ///     </item>
        /// </list></param>
        /// <param name="directory_name">Name of the KiFS directory to which
        /// the permission grants access. An empty directory name grants access
        /// to all KiFS directories</param>
        /// <param name="options">Optional parameters. The default value is an
        /// empty Dictionary.</param>
        public GrantPermissionDirectoryRequest( string name,
                                                string permission,
                                                string directory_name,
                                                IDictionary<string, string> options = null)
        {
            this.name = name ?? "";
            this.permission = permission ?? "";
            this.directory_name = directory_name ?? "";
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor
    } // end class GrantPermissionDirectoryRequest

    /// <summary>A set of results returned by <see
    /// cref="Kinetica.grantPermissionDirectory(GrantPermissionDirectoryRequest)">Kinetica.grantPermissionDirectory</see>.
    /// </summary>
    public class GrantPermissionDirectoryResponse : KineticaData
    {
        /// <summary>Value of <see
        /// cref="GrantPermissionDirectoryRequest.name">name</see>.</summary>
        public string name { get; set; }

        /// <summary>Value of <see
        /// cref="GrantPermissionDirectoryRequest.permission">permission</see>.
        /// </summary>
        public string permission { get; set; }

        /// <summary>Value of <see
        /// cref="GrantPermissionDirectoryRequest.directory_name">directory_name</see>.
        /// </summary>
        public string directory_name { get; set; }

        /// <summary>Additional information.</summary>
        public IDictionary<string, string> info { get; set; } = new Dictionary<string, string>();
    } // end class GrantPermissionDirectoryResponse
} // end namespace kinetica
