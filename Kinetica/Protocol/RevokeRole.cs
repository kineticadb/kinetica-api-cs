/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>A set of parameters for <see
    /// cref="Kinetica.revokeRole(string,string,IDictionary{string, string})"
    /// />.
    /// <br />
    /// Revokes membership in a role from a user or role.</summary>
    public class RevokeRoleRequest : KineticaData
    {

        /// <summary>Name of the role in which membership will be revoked. Must
        /// be an existing role.  </summary>
        public string role { get; set; }

        /// <summary>Name of the user or role that will be revoked membership
        /// in <paramref cref="RevokeRoleRequest.role" />. Must be an existing
        /// user or role.  </summary>
        public string member { get; set; }

        /// <summary>Optional parameters.  The default value is an empty {@link
        /// Dictionary}.</summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs a RevokeRoleRequest object with default
        /// parameters.</summary>
        public RevokeRoleRequest() { }

        /// <summary>Constructs a RevokeRoleRequest object with the specified
        /// parameters.</summary>
        /// 
        /// <param name="role">Name of the role in which membership will be
        /// revoked. Must be an existing role.  </param>
        /// <param name="member">Name of the user or role that will be revoked
        /// membership in <paramref cref="RevokeRoleRequest.role" />. Must be
        /// an existing user or role.  </param>
        /// <param name="options">Optional parameters.  The default value is an
        /// empty {@link Dictionary}.</param>
        /// 
        public RevokeRoleRequest( string role,
                                  string member,
                                  IDictionary<string, string> options = null)
        {
            this.role = role ?? "";
            this.member = member ?? "";
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class RevokeRoleRequest



    /// <summary>A set of results returned by <see
    /// cref="Kinetica.revokeRole(string,string,IDictionary{string, string})"
    /// />.</summary>
    public class RevokeRoleResponse : KineticaData
    {

        /// <summary>Value of <paramref cref="RevokeRoleRequest.role" />.
        /// </summary>
        public string role { get; set; }

        /// <summary>Value of <paramref cref="RevokeRoleRequest.member" />.
        /// </summary>
        public string member { get; set; }

    } // end class RevokeRoleResponse




}  // end namespace kinetica
