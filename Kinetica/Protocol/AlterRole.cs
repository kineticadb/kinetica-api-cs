/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>A set of parameters for <see
    /// cref="Kinetica.alterRole(string,string,string,IDictionary{string, string})"
    /// />.
    /// <br />
    /// Alters a Role.</summary>
    public class AlterRoleRequest : KineticaData
    {

        /// <summary>Modification operation to be applied to the role.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AlterRoleRequest.Action.SET_RESOURCE_GROUP">SET_RESOURCE_GROUP</see>:</term>
        ///         <description>Sets the resource group for an internal role.
        /// The resource group must exist, otherwise, an empty string assigns
        /// the role to the default resource group.</description>
        ///     </item>
        /// </list>
        /// A set of string constants for the parameter <see cref="action"
        /// />.</summary>
        public struct Action
        {

            /// <summary>Sets the resource group for an internal role. The
            /// resource group must exist, otherwise, an empty string assigns
            /// the role to the default resource group.</summary>
            public const string SET_RESOURCE_GROUP = "set_resource_group";
        } // end struct Action


        /// <summary>Name of the role to be altered. Must be an existing role.
        /// </summary>
        public string name { get; set; }

        /// <summary>Modification operation to be applied to the role.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AlterRoleRequest.Action.SET_RESOURCE_GROUP">SET_RESOURCE_GROUP</see>:</term>
        ///         <description>Sets the resource group for an internal role.
        /// The resource group must exist, otherwise, an empty string assigns
        /// the role to the default resource group.</description>
        ///     </item>
        /// </list>  </summary>
        public string action { get; set; }

        /// <summary>The value of the modification, depending on <paramref
        /// cref="AlterRoleRequest.action" />.  </summary>
        public string _value { get; set; }

        /// <summary>Optional parameters.  The default value is an empty {@link
        /// Dictionary}.</summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs an AlterRoleRequest object with default
        /// parameters.</summary>
        public AlterRoleRequest() { }

        /// <summary>Constructs an AlterRoleRequest object with the specified
        /// parameters.</summary>
        /// 
        /// <param name="name">Name of the role to be altered. Must be an
        /// existing role.  </param>
        /// <param name="action">Modification operation to be applied to the
        /// role.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AlterRoleRequest.Action.SET_RESOURCE_GROUP">SET_RESOURCE_GROUP</see>:</term>
        ///         <description>Sets the resource group for an internal role.
        /// The resource group must exist, otherwise, an empty string assigns
        /// the role to the default resource group.</description>
        ///     </item>
        /// </list>  </param>
        /// <param name="_value">The value of the modification, depending on
        /// <paramref cref="AlterRoleRequest.action" />.  </param>
        /// <param name="options">Optional parameters.  The default value is an
        /// empty {@link Dictionary}.</param>
        /// 
        public AlterRoleRequest( string name,
                                 string action,
                                 string _value,
                                 IDictionary<string, string> options = null)
        {
            this.name = name ?? "";
            this.action = action ?? "";
            this._value = _value ?? "";
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class AlterRoleRequest



    /// <summary>A set of results returned by <see
    /// cref="Kinetica.alterRole(string,string,string,IDictionary{string, string})"
    /// />.</summary>
    public class AlterRoleResponse : KineticaData
    {

        /// <summary>Value of <paramref cref="AlterRoleRequest.name" />.
        /// </summary>
        public string name { get; set; }

        /// <summary>Additional information.  </summary>
        public IDictionary<string, string> info { get; set; } = new Dictionary<string, string>();

    } // end class AlterRoleResponse




}  // end namespace kinetica
