/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>A set of parameters for <see
    /// cref="Kinetica.showSecurity(IList{string},IDictionary{string, string})"
    /// />.
    /// <br />
    /// Shows security information relating to users and/or roles. If the
    /// caller is not a system administrator, only information relating to the
    /// caller and their roles is returned.</summary>
    public class ShowSecurityRequest : KineticaData
    {

        /// <summary>A list of names of users and/or roles about which security
        /// information is requested. If none are provided, information about
        /// all users and roles will be returned.  </summary>
        public IList<string> names { get; set; } = new List<string>();

        /// <summary>Optional parameters.  </summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs a ShowSecurityRequest object with default
        /// parameters.</summary>
        public ShowSecurityRequest() { }

        /// <summary>Constructs a ShowSecurityRequest object with the specified
        /// parameters.</summary>
        /// 
        /// <param name="names">A list of names of users and/or roles about
        /// which security information is requested. If none are provided,
        /// information about all users and roles will be returned.  </param>
        /// <param name="options">Optional parameters.  </param>
        /// 
        public ShowSecurityRequest( IList<string> names,
                                    IDictionary<string, string> options = null)
        {
            this.names = names ?? new List<string>();
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class ShowSecurityRequest



    /// <summary>A set of results returned by <see
    /// cref="Kinetica.showSecurity(IList{string},IDictionary{string, string})"
    /// />.</summary>
    public class ShowSecurityResponse : KineticaData
    {

        /// <summary>Map of user/role name to the type of that user/role.
        /// Valid values are:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="ShowSecurityResponse.Types.INTERNAL_USER">INTERNAL_USER</see>:</term>
        ///         <description>A user whose credentials are managed by the
        /// database system.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="ShowSecurityResponse.Types.EXTERNAL_USER">EXTERNAL_USER</see>:</term>
        ///         <description>A user whose credentials are managed by an
        /// external LDAP.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="ShowSecurityResponse.Types.ROLE">ROLE</see>:</term>
        ///         <description>A role.</description>
        ///     </item>
        /// </list>
        /// A set of string constants for the parameter <member name="types"
        /// />.</summary>
        public struct Types
        {

            /// <summary>A user whose credentials are managed by the database
            /// system.</summary>
            public const string INTERNAL_USER = "internal_user";

            /// <summary>A user whose credentials are managed by an external
            /// LDAP.</summary>
            public const string EXTERNAL_USER = "external_user";

            /// <summary>A role.</summary>
            public const string ROLE = "role";
        } // end struct Types


        /// <summary>Map of user/role name to the type of that user/role.
        /// Valid values are:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="ShowSecurityResponse.Types.INTERNAL_USER">INTERNAL_USER</see>:</term>
        ///         <description>A user whose credentials are managed by the
        /// database system.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="ShowSecurityResponse.Types.EXTERNAL_USER">EXTERNAL_USER</see>:</term>
        ///         <description>A user whose credentials are managed by an
        /// external LDAP.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="ShowSecurityResponse.Types.ROLE">ROLE</see>:</term>
        ///         <description>A role.</description>
        ///     </item>
        /// </list>  </summary>
        public IDictionary<string, string> types { get; set; } = new Dictionary<string, string>();

        /// <summary>Map of user/role name to a list of names of roles of which
        /// that user/role is a member.  </summary>
        public IDictionary<string, IList<string>> roles { get; set; } = new Dictionary<string, IList<string>>();

        /// <summary>Map of user/role name to a list of permissions directly
        /// granted to that user/role.  </summary>
        public IDictionary<string, IList<IDictionary<string, string>>> permissions { get; set; } = new Dictionary<string, IList<IDictionary<string, string>>>();

        /// <summary>Map of user name to resource group name.  </summary>
        public IDictionary<string, string> resource_groups { get; set; } = new Dictionary<string, string>();

        /// <summary>Additional information.  </summary>
        public IDictionary<string, string> info { get; set; } = new Dictionary<string, string>();

    } // end class ShowSecurityResponse




}  // end namespace kinetica
