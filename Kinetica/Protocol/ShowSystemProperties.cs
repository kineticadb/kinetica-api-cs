/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>A set of parameters for <see
    /// cref="Kinetica.showSystemProperties(IDictionary{string, string})" />.
    /// <br />
    /// Returns server configuration and version related information to the
    /// caller. The admin tool uses it to present server related information to
    /// the user.</summary>
    public class ShowSystemPropertiesRequest : KineticaData
    {

        /// <summary>Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="ShowSystemPropertiesRequest.Options.PROPERTIES">PROPERTIES</see>:</term>
        ///         <description>A list of comma separated names of properties
        /// requested. If not specified, all properties will be
        /// returned.</description>
        ///     </item>
        /// </list>
        /// <br />
        /// A set of string constants for the parameter <see cref="options"
        /// />.</summary>
        public struct Options
        {

            /// <summary>A list of comma separated names of properties
            /// requested. If not specified, all properties will be
            /// returned.</summary>
            public const string PROPERTIES = "properties";
        } // end struct Options


        /// <summary>Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="ShowSystemPropertiesRequest.Options.PROPERTIES">PROPERTIES</see>:</term>
        ///         <description>A list of comma separated names of properties
        /// requested. If not specified, all properties will be
        /// returned.</description>
        ///     </item>
        /// </list>
        ///   </summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs a ShowSystemPropertiesRequest object with
        /// default parameters.</summary>
        public ShowSystemPropertiesRequest() { }

        /// <summary>Constructs a ShowSystemPropertiesRequest object with the
        /// specified parameters.</summary>
        /// 
        /// <param name="options">Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="ShowSystemPropertiesRequest.Options.PROPERTIES">PROPERTIES</see>:</term>
        ///         <description>A list of comma separated names of properties
        /// requested. If not specified, all properties will be
        /// returned.</description>
        ///     </item>
        /// </list>
        ///   </param>
        /// 
        public ShowSystemPropertiesRequest( IDictionary<string, string> options = null)
        {
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class ShowSystemPropertiesRequest



    /// <summary>A set of results returned by <see
    /// cref="Kinetica.showSystemProperties(IDictionary{string, string})"
    /// />.</summary>
    public class ShowSystemPropertiesResponse : KineticaData
    {

        /// <summary>A map of server configuration parameters and version
        /// information.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="ShowSystemPropertiesResponse.PropertyMap.CONF_ENABLE_WORKER_HTTP_SERVERS">CONF_ENABLE_WORKER_HTTP_SERVERS</see>:</term>
        ///         <description>Boolean value indicating whether the system is
        /// configured for multi-head ingestion.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="ShowSystemPropertiesResponse.PropertyMap.TRUE">TRUE</see>:</term>
        ///         <description>Indicates that the system is configured for
        /// multi-head ingestion.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="ShowSystemPropertiesResponse.PropertyMap.FALSE">FALSE</see>:</term>
        ///         <description>Indicates that the system is NOT configured
        /// for multi-head ingestion.</description>
        ///     </item>
        /// </list></description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="ShowSystemPropertiesResponse.PropertyMap.CONF_WORKER_HTTP_SERVER_IPS">CONF_WORKER_HTTP_SERVER_IPS</see>:</term>
        ///         <description>Semicolon (';') separated string of IP
        /// addresses of all the ingestion-enabled worker heads of the
        /// system.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="ShowSystemPropertiesResponse.PropertyMap.CONF_WORKER_HTTP_SERVER_PORTS">CONF_WORKER_HTTP_SERVER_PORTS</see>:</term>
        ///         <description>Semicolon (';') separated string of the port
        /// numbers of all the ingestion-enabled worker ranks of the
        /// system.</description>
        ///     </item>
        /// </list>
        /// <br />
        /// A set of string constants for the parameter <member
        /// name="property_map" />.</summary>
        public struct PropertyMap
        {

            /// <summary>Boolean value indicating whether the system is
            /// configured for multi-head ingestion.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="ShowSystemPropertiesResponse.PropertyMap.TRUE">TRUE</see>:</term>
            ///         <description>Indicates that the system is configured
            /// for multi-head ingestion.</description>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="ShowSystemPropertiesResponse.PropertyMap.FALSE">FALSE</see>:</term>
            ///         <description>Indicates that the system is NOT
            /// configured for multi-head ingestion.</description>
            ///     </item>
            /// </list></summary>
            public const string CONF_ENABLE_WORKER_HTTP_SERVERS = "conf.enable_worker_http_servers";

            /// <summary>Indicates that the system is configured for multi-head
            /// ingestion.</summary>
            public const string TRUE = "TRUE";

            /// <summary>Indicates that the system is NOT configured for
            /// multi-head ingestion.</summary>
            public const string FALSE = "FALSE";

            /// <summary>Semicolon (';') separated string of IP addresses of
            /// all the ingestion-enabled worker heads of the system.</summary>
            public const string CONF_WORKER_HTTP_SERVER_IPS = "conf.worker_http_server_ips";

            /// <summary>Semicolon (';') separated string of the port numbers
            /// of all the ingestion-enabled worker ranks of the
            /// system.</summary>
            public const string CONF_WORKER_HTTP_SERVER_PORTS = "conf.worker_http_server_ports";
        } // end struct PropertyMap


        /// <summary>A map of server configuration parameters and version
        /// information.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="ShowSystemPropertiesResponse.PropertyMap.CONF_ENABLE_WORKER_HTTP_SERVERS">CONF_ENABLE_WORKER_HTTP_SERVERS</see>:</term>
        ///         <description>Boolean value indicating whether the system is
        /// configured for multi-head ingestion.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="ShowSystemPropertiesResponse.PropertyMap.TRUE">TRUE</see>:</term>
        ///         <description>Indicates that the system is configured for
        /// multi-head ingestion.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="ShowSystemPropertiesResponse.PropertyMap.FALSE">FALSE</see>:</term>
        ///         <description>Indicates that the system is NOT configured
        /// for multi-head ingestion.</description>
        ///     </item>
        /// </list></description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="ShowSystemPropertiesResponse.PropertyMap.CONF_WORKER_HTTP_SERVER_IPS">CONF_WORKER_HTTP_SERVER_IPS</see>:</term>
        ///         <description>Semicolon (';') separated string of IP
        /// addresses of all the ingestion-enabled worker heads of the
        /// system.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="ShowSystemPropertiesResponse.PropertyMap.CONF_WORKER_HTTP_SERVER_PORTS">CONF_WORKER_HTTP_SERVER_PORTS</see>:</term>
        ///         <description>Semicolon (';') separated string of the port
        /// numbers of all the ingestion-enabled worker ranks of the
        /// system.</description>
        ///     </item>
        /// </list>
        ///   </summary>
        public IDictionary<string, string> property_map { get; set; } = new Dictionary<string, string>();

    } // end class ShowSystemPropertiesResponse




}  // end namespace kinetica
