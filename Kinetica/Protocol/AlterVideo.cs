/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>A set of parameters for <see
    /// cref="Kinetica.alterVideo(string,IDictionary{string, string})" />.
    /// <br />
    /// Alters a video.</summary>
    public class AlterVideoRequest : KineticaData
    {

        /// <summary>Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AlterVideoRequest.Options.TTL">TTL</see>:</term>
        ///         <description>Sets the <a href="../../../concepts/ttl/"
        /// target="_top">TTL</a> of the video.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.
        /// A set of string constants for the parameter <see cref="options"
        /// />.</summary>
        public struct Options
        {

            /// <summary>Sets the <a href="../../../concepts/ttl/"
            /// target="_top">TTL</a> of the video.</summary>
            public const string TTL = "ttl";
        } // end struct Options


        /// <summary>Fully-qualified <a href="../../../tools/kifs/"
        /// target="_top">KiFS</a> path to the video to be altered.  </summary>
        public string path { get; set; }

        /// <summary>Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AlterVideoRequest.Options.TTL">TTL</see>:</term>
        ///         <description>Sets the <a href="../../../concepts/ttl/"
        /// target="_top">TTL</a> of the video.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.</summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs an AlterVideoRequest object with default
        /// parameters.</summary>
        public AlterVideoRequest() { }

        /// <summary>Constructs an AlterVideoRequest object with the specified
        /// parameters.</summary>
        /// 
        /// <param name="path">Fully-qualified <a href="../../../tools/kifs/"
        /// target="_top">KiFS</a> path to the video to be altered.  </param>
        /// <param name="options">Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="AlterVideoRequest.Options.TTL">TTL</see>:</term>
        ///         <description>Sets the <a href="../../../concepts/ttl/"
        /// target="_top">TTL</a> of the video.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.</param>
        /// 
        public AlterVideoRequest( string path,
                                  IDictionary<string, string> options = null)
        {
            this.path = path ?? "";
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class AlterVideoRequest



    /// <summary>A set of results returned by <see
    /// cref="Kinetica.alterVideo(string,IDictionary{string, string})"
    /// />.</summary>
    public class AlterVideoResponse : KineticaData
    {

        /// <summary>Fully qualified KIFS path to the video file.  </summary>
        public string path { get; set; }

        /// <summary>Additional information.  </summary>
        public IDictionary<string, string> info { get; set; } = new Dictionary<string, string>();

    } // end class AlterVideoResponse




}  // end namespace kinetica
