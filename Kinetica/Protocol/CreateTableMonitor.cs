/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>A set of parameters for <see
    /// cref="Kinetica.createTableMonitor(string,IDictionary{string, string})"
    /// />.
    /// <br />
    /// Creates a monitor that watches for a single table modification event
    /// type (insert, update, or delete) on a particular table (identified by
    /// <see cref="table_name" />) and forwards event notifications to
    /// subscribers via ZMQ.
    /// After this call completes, subscribe to the returned <member
    /// name="topic_id" /> on the
    /// ZMQ table monitor port (default 9002). Each time an operation of the
    /// given type
    /// on the table completes, a multipart message is published for that
    /// topic; the
    /// first part contains only the topic ID, and each subsequent part
    /// contains one
    /// binary-encoded Avro object that corresponds to the event and can be
    /// decoded
    /// using <member name="type_schema" />. The monitor will continue to run
    /// (regardless of
    /// whether or not there are any subscribers) until deactivated with
    /// <see
    /// cref="Kinetica.clearTableMonitor(string,IDictionary{string, string})"
    /// />.
    /// <br />
    /// For more information on table monitors, see
    /// <a href="../../../concepts/table_monitors/" target="_top">Table
    /// Monitors</a>.</summary>
    public class CreateTableMonitorRequest : KineticaData
    {

        /// <summary>Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.EVENT">EVENT</see>:</term>
        ///         <description>Type of modification event on the target table
        /// to be monitored by this table monitor.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.INSERT">INSERT</see>:</term>
        ///         <description>Get notifications of new record insertions.
        /// The new row images are forwarded to the subscribers.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.UPDATE">UPDATE</see>:</term>
        ///         <description>Get notifications of update operations. The
        /// modified row count information is forwarded to the
        /// subscribers.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.DELETE">DELETE</see>:</term>
        ///         <description>Get notifications of delete operations. The
        /// deleted row count information is forwarded to the
        /// subscribers.</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateTableMonitorRequest.Options.INSERT">INSERT</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.MONITOR_ID">MONITOR_ID</see>:</term>
        ///         <description>ID to use for this monitor instead of a
        /// randomly generated one</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.DATASINK_NAME">DATASINK_NAME</see>:</term>
        ///         <description>Name of an existing <a
        /// href="../../../concepts/data_sinks/" target="_top">data sink</a> to
        /// send change data notifications to</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.DESTINATION">DESTINATION</see>:</term>
        ///         <description>Destination for the output data in format
        /// 'destination_type://path[:port]'. Supported destination types are
        /// 'http', 'https' and 'kafka'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.KAFKA_TOPIC_NAME">KAFKA_TOPIC_NAME</see>:</term>
        ///         <description>Name of the Kafka topic to publish to if
        /// <i>destination</i> in <paramref
        /// cref="CreateTableMonitorRequest.options" /> is specified and is a
        /// Kafka broker</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.INCREASING_COLUMN">INCREASING_COLUMN</see>:</term>
        ///         <description>Column on subscribed table that will increase
        /// for new records (e.g., TIMESTAMP).</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.EXPRESSION">EXPRESSION</see>:</term>
        ///         <description>Filter expression to limit records for
        /// notification</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.REFRESH_METHOD">REFRESH_METHOD</see>:</term>
        ///         <description>Method controlling when the table monitor
        /// reports changes to the <paramref
        /// cref="CreateTableMonitorRequest.table_name" />.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.ON_CHANGE">ON_CHANGE</see>:</term>
        ///         <description>Report changes as they occur.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.PERIODIC">PERIODIC</see>:</term>
        ///         <description>Report changes periodically at rate specified
        /// by <i>refresh_period</i>.</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateTableMonitorRequest.Options.ON_CHANGE">ON_CHANGE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.REFRESH_PERIOD">REFRESH_PERIOD</see>:</term>
        ///         <description>When <i>refresh_method</i> is <i>periodic</i>,
        /// specifies the period in seconds at which changes are
        /// reported.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.REFRESH_START_TIME">REFRESH_START_TIME</see>:</term>
        ///         <description>When <i>refresh_method</i> is <i>periodic</i>,
        /// specifies the first time at which changes are reported.  Value is a
        /// datetime string with format 'YYYY-MM-DD HH:MM:SS'.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.
        /// A set of string constants for the parameter <see cref="options"
        /// />.</summary>
        public struct Options
        {

            /// <summary>Type of modification event on the target table to be
            /// monitored by this table monitor.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="CreateTableMonitorRequest.Options.INSERT">INSERT</see>:</term>
            ///         <description>Get notifications of new record
            /// insertions. The new row images are forwarded to the
            /// subscribers.</description>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="CreateTableMonitorRequest.Options.UPDATE">UPDATE</see>:</term>
            ///         <description>Get notifications of update operations.
            /// The modified row count information is forwarded to the
            /// subscribers.</description>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="CreateTableMonitorRequest.Options.DELETE">DELETE</see>:</term>
            ///         <description>Get notifications of delete operations.
            /// The deleted row count information is forwarded to the
            /// subscribers.</description>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="CreateTableMonitorRequest.Options.INSERT">INSERT</see>.</summary>
            public const string EVENT = "event";

            /// <summary>Get notifications of new record insertions. The new
            /// row images are forwarded to the subscribers.</summary>
            public const string INSERT = "insert";

            /// <summary>Get notifications of update operations. The modified
            /// row count information is forwarded to the
            /// subscribers.</summary>
            public const string UPDATE = "update";

            /// <summary>Get notifications of delete operations. The deleted
            /// row count information is forwarded to the
            /// subscribers.</summary>
            public const string DELETE = "delete";

            /// <summary>ID to use for this monitor instead of a randomly
            /// generated one</summary>
            public const string MONITOR_ID = "monitor_id";

            /// <summary>Name of an existing <a
            /// href="../../../concepts/data_sinks/" target="_top">data
            /// sink</a> to send change data notifications to</summary>
            public const string DATASINK_NAME = "datasink_name";

            /// <summary>Destination for the output data in format
            /// 'destination_type://path[:port]'. Supported destination types
            /// are 'http', 'https' and 'kafka'.</summary>
            public const string DESTINATION = "destination";

            /// <summary>Name of the Kafka topic to publish to if
            /// <i>destination</i> in <see cref="options" /> is specified and
            /// is a Kafka broker</summary>
            public const string KAFKA_TOPIC_NAME = "kafka_topic_name";

            /// <summary>Column on subscribed table that will increase for new
            /// records (e.g., TIMESTAMP).</summary>
            public const string INCREASING_COLUMN = "increasing_column";

            /// <summary>Filter expression to limit records for
            /// notification</summary>
            public const string EXPRESSION = "expression";

            /// <summary>Method controlling when the table monitor reports
            /// changes to the <see cref="table_name" />.
            /// Supported values:
            /// <list type="bullet">
            ///     <item>
            ///         <term><see
            /// cref="CreateTableMonitorRequest.Options.ON_CHANGE">ON_CHANGE</see>:</term>
            ///         <description>Report changes as they
            /// occur.</description>
            ///     </item>
            ///     <item>
            ///         <term><see
            /// cref="CreateTableMonitorRequest.Options.PERIODIC">PERIODIC</see>:</term>
            ///         <description>Report changes periodically at rate
            /// specified by <i>refresh_period</i>.</description>
            ///     </item>
            /// </list>
            /// The default value is <see
            /// cref="CreateTableMonitorRequest.Options.ON_CHANGE">ON_CHANGE</see>.</summary>
            public const string REFRESH_METHOD = "refresh_method";

            /// <summary>Report changes as they occur.</summary>
            public const string ON_CHANGE = "on_change";

            /// <summary>Report changes periodically at rate specified by
            /// <i>refresh_period</i>.</summary>
            public const string PERIODIC = "periodic";

            /// <summary>When <i>refresh_method</i> is <i>periodic</i>,
            /// specifies the period in seconds at which changes are
            /// reported.</summary>
            public const string REFRESH_PERIOD = "refresh_period";

            /// <summary>When <i>refresh_method</i> is <i>periodic</i>,
            /// specifies the first time at which changes are reported.  Value
            /// is a datetime string with format 'YYYY-MM-DD
            /// HH:MM:SS'.</summary>
            public const string REFRESH_START_TIME = "refresh_start_time";
        } // end struct Options


        /// <summary>Name of the table to monitor, in [schema_name.]table_name
        /// format, using standard <a
        /// href="../../../concepts/tables/#table-name-resolution"
        /// target="_top">name resolution rules</a>.  </summary>
        public string table_name { get; set; }

        /// <summary>Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.EVENT">EVENT</see>:</term>
        ///         <description>Type of modification event on the target table
        /// to be monitored by this table monitor.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.INSERT">INSERT</see>:</term>
        ///         <description>Get notifications of new record insertions.
        /// The new row images are forwarded to the subscribers.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.UPDATE">UPDATE</see>:</term>
        ///         <description>Get notifications of update operations. The
        /// modified row count information is forwarded to the
        /// subscribers.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.DELETE">DELETE</see>:</term>
        ///         <description>Get notifications of delete operations. The
        /// deleted row count information is forwarded to the
        /// subscribers.</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateTableMonitorRequest.Options.INSERT">INSERT</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.MONITOR_ID">MONITOR_ID</see>:</term>
        ///         <description>ID to use for this monitor instead of a
        /// randomly generated one</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.DATASINK_NAME">DATASINK_NAME</see>:</term>
        ///         <description>Name of an existing <a
        /// href="../../../concepts/data_sinks/" target="_top">data sink</a> to
        /// send change data notifications to</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.DESTINATION">DESTINATION</see>:</term>
        ///         <description>Destination for the output data in format
        /// 'destination_type://path[:port]'. Supported destination types are
        /// 'http', 'https' and 'kafka'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.KAFKA_TOPIC_NAME">KAFKA_TOPIC_NAME</see>:</term>
        ///         <description>Name of the Kafka topic to publish to if
        /// <i>destination</i> in <paramref
        /// cref="CreateTableMonitorRequest.options" /> is specified and is a
        /// Kafka broker</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.INCREASING_COLUMN">INCREASING_COLUMN</see>:</term>
        ///         <description>Column on subscribed table that will increase
        /// for new records (e.g., TIMESTAMP).</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.EXPRESSION">EXPRESSION</see>:</term>
        ///         <description>Filter expression to limit records for
        /// notification</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.REFRESH_METHOD">REFRESH_METHOD</see>:</term>
        ///         <description>Method controlling when the table monitor
        /// reports changes to the <paramref
        /// cref="CreateTableMonitorRequest.table_name" />.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.ON_CHANGE">ON_CHANGE</see>:</term>
        ///         <description>Report changes as they occur.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.PERIODIC">PERIODIC</see>:</term>
        ///         <description>Report changes periodically at rate specified
        /// by <i>refresh_period</i>.</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateTableMonitorRequest.Options.ON_CHANGE">ON_CHANGE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.REFRESH_PERIOD">REFRESH_PERIOD</see>:</term>
        ///         <description>When <i>refresh_method</i> is <i>periodic</i>,
        /// specifies the period in seconds at which changes are
        /// reported.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.REFRESH_START_TIME">REFRESH_START_TIME</see>:</term>
        ///         <description>When <i>refresh_method</i> is <i>periodic</i>,
        /// specifies the first time at which changes are reported.  Value is a
        /// datetime string with format 'YYYY-MM-DD HH:MM:SS'.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.</summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs a CreateTableMonitorRequest object with default
        /// parameters.</summary>
        public CreateTableMonitorRequest() { }

        /// <summary>Constructs a CreateTableMonitorRequest object with the
        /// specified parameters.</summary>
        /// 
        /// <param name="table_name">Name of the table to monitor, in
        /// [schema_name.]table_name format, using standard <a
        /// href="../../../concepts/tables/#table-name-resolution"
        /// target="_top">name resolution rules</a>.  </param>
        /// <param name="options">Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.EVENT">EVENT</see>:</term>
        ///         <description>Type of modification event on the target table
        /// to be monitored by this table monitor.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.INSERT">INSERT</see>:</term>
        ///         <description>Get notifications of new record insertions.
        /// The new row images are forwarded to the subscribers.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.UPDATE">UPDATE</see>:</term>
        ///         <description>Get notifications of update operations. The
        /// modified row count information is forwarded to the
        /// subscribers.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.DELETE">DELETE</see>:</term>
        ///         <description>Get notifications of delete operations. The
        /// deleted row count information is forwarded to the
        /// subscribers.</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateTableMonitorRequest.Options.INSERT">INSERT</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.MONITOR_ID">MONITOR_ID</see>:</term>
        ///         <description>ID to use for this monitor instead of a
        /// randomly generated one</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.DATASINK_NAME">DATASINK_NAME</see>:</term>
        ///         <description>Name of an existing <a
        /// href="../../../concepts/data_sinks/" target="_top">data sink</a> to
        /// send change data notifications to</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.DESTINATION">DESTINATION</see>:</term>
        ///         <description>Destination for the output data in format
        /// 'destination_type://path[:port]'. Supported destination types are
        /// 'http', 'https' and 'kafka'.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.KAFKA_TOPIC_NAME">KAFKA_TOPIC_NAME</see>:</term>
        ///         <description>Name of the Kafka topic to publish to if
        /// <i>destination</i> in <paramref
        /// cref="CreateTableMonitorRequest.options" /> is specified and is a
        /// Kafka broker</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.INCREASING_COLUMN">INCREASING_COLUMN</see>:</term>
        ///         <description>Column on subscribed table that will increase
        /// for new records (e.g., TIMESTAMP).</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.EXPRESSION">EXPRESSION</see>:</term>
        ///         <description>Filter expression to limit records for
        /// notification</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.REFRESH_METHOD">REFRESH_METHOD</see>:</term>
        ///         <description>Method controlling when the table monitor
        /// reports changes to the <paramref
        /// cref="CreateTableMonitorRequest.table_name" />.
        /// Supported values:
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.ON_CHANGE">ON_CHANGE</see>:</term>
        ///         <description>Report changes as they occur.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.PERIODIC">PERIODIC</see>:</term>
        ///         <description>Report changes periodically at rate specified
        /// by <i>refresh_period</i>.</description>
        ///     </item>
        /// </list>
        /// The default value is <see
        /// cref="CreateTableMonitorRequest.Options.ON_CHANGE">ON_CHANGE</see>.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.REFRESH_PERIOD">REFRESH_PERIOD</see>:</term>
        ///         <description>When <i>refresh_method</i> is <i>periodic</i>,
        /// specifies the period in seconds at which changes are
        /// reported.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorRequest.Options.REFRESH_START_TIME">REFRESH_START_TIME</see>:</term>
        ///         <description>When <i>refresh_method</i> is <i>periodic</i>,
        /// specifies the first time at which changes are reported.  Value is a
        /// datetime string with format 'YYYY-MM-DD HH:MM:SS'.</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.</param>
        /// 
        public CreateTableMonitorRequest( string table_name,
                                          IDictionary<string, string> options = null)
        {
            this.table_name = table_name ?? "";
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class CreateTableMonitorRequest



    /// <summary>A set of results returned by <see
    /// cref="Kinetica.createTableMonitor(string,IDictionary{string, string})"
    /// />.</summary>
    public class CreateTableMonitorResponse : KineticaData
    {

        /// <summary>Additional information.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorResponse.Info.INSERT_TOPIC_ID">INSERT_TOPIC_ID</see>:</term>
        ///         <description>The topic id for 'insert' <i>event</i> in
        /// <paramref cref="CreateTableMonitorRequest.options" /></description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorResponse.Info.UPDATE_TOPIC_ID">UPDATE_TOPIC_ID</see>:</term>
        ///         <description>The topic id for 'update' <i>event</i> in
        /// <paramref cref="CreateTableMonitorRequest.options" /></description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorResponse.Info.DELETE_TOPIC_ID">DELETE_TOPIC_ID</see>:</term>
        ///         <description>The topic id for 'delete' <i>event</i> in
        /// <paramref cref="CreateTableMonitorRequest.options" /></description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorResponse.Info.INSERT_TYPE_SCHEMA">INSERT_TYPE_SCHEMA</see>:</term>
        ///         <description>The JSON Avro schema of the table in <member
        /// name="table_name" /></description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorResponse.Info.UPDATE_TYPE_SCHEMA">UPDATE_TYPE_SCHEMA</see>:</term>
        ///         <description>The JSON Avro schema for 'update'
        /// events</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorResponse.Info.DELETE_TYPE_SCHEMA">DELETE_TYPE_SCHEMA</see>:</term>
        ///         <description>The JSON Avro schema for 'delete'
        /// events</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.
        /// A set of string constants for the parameter <member name="info"
        /// />.</summary>
        public struct Info
        {

            /// <summary>The topic id for 'insert' <i>event</i> in <see
            /// cref="options" /></summary>
            public const string INSERT_TOPIC_ID = "insert_topic_id";

            /// <summary>The topic id for 'update' <i>event</i> in <see
            /// cref="options" /></summary>
            public const string UPDATE_TOPIC_ID = "update_topic_id";

            /// <summary>The topic id for 'delete' <i>event</i> in <see
            /// cref="options" /></summary>
            public const string DELETE_TOPIC_ID = "delete_topic_id";

            /// <summary>The JSON Avro schema of the table in <member
            /// name="table_name" /></summary>
            public const string INSERT_TYPE_SCHEMA = "insert_type_schema";

            /// <summary>The JSON Avro schema for 'update' events</summary>
            public const string UPDATE_TYPE_SCHEMA = "update_type_schema";

            /// <summary>The JSON Avro schema for 'delete' events</summary>
            public const string DELETE_TYPE_SCHEMA = "delete_type_schema";
        } // end struct Info


        /// <summary>The ZMQ topic ID to subscribe to for table events.
        /// </summary>
        public string topic_id { get; set; }

        /// <summary>Value of <paramref
        /// cref="CreateTableMonitorRequest.table_name" />.  </summary>
        public string table_name { get; set; }

        /// <summary>JSON Avro schema of the table, for use in decoding
        /// published records.  </summary>
        public string type_schema { get; set; }

        /// <summary>Additional information.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorResponse.Info.INSERT_TOPIC_ID">INSERT_TOPIC_ID</see>:</term>
        ///         <description>The topic id for 'insert' <i>event</i> in
        /// <paramref cref="CreateTableMonitorRequest.options" /></description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorResponse.Info.UPDATE_TOPIC_ID">UPDATE_TOPIC_ID</see>:</term>
        ///         <description>The topic id for 'update' <i>event</i> in
        /// <paramref cref="CreateTableMonitorRequest.options" /></description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorResponse.Info.DELETE_TOPIC_ID">DELETE_TOPIC_ID</see>:</term>
        ///         <description>The topic id for 'delete' <i>event</i> in
        /// <paramref cref="CreateTableMonitorRequest.options" /></description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorResponse.Info.INSERT_TYPE_SCHEMA">INSERT_TYPE_SCHEMA</see>:</term>
        ///         <description>The JSON Avro schema of the table in <member
        /// name="table_name" /></description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorResponse.Info.UPDATE_TYPE_SCHEMA">UPDATE_TYPE_SCHEMA</see>:</term>
        ///         <description>The JSON Avro schema for 'update'
        /// events</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        /// cref="CreateTableMonitorResponse.Info.DELETE_TYPE_SCHEMA">DELETE_TYPE_SCHEMA</see>:</term>
        ///         <description>The JSON Avro schema for 'delete'
        /// events</description>
        ///     </item>
        /// </list>
        /// The default value is an empty {@link Dictionary}.</summary>
        public IDictionary<string, string> info { get; set; } = new Dictionary<string, string>();

    } // end class CreateTableMonitorResponse




}  // end namespace kinetica
