/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>A set of parameters for <see
    /// cref="Kinetica.deleteProc(string,IDictionary{string, string})" />.
    /// <br />
    /// Deletes a proc. Any currently running instances of the proc will be
    /// killed.</summary>
    public class DeleteProcRequest : KineticaData
    {

        /// <summary>Name of the proc to be deleted. Must be the name of a
        /// currently existing proc.  </summary>
        public string proc_name { get; set; }

        /// <summary>Optional parameters.  </summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs a DeleteProcRequest object with default
        /// parameters.</summary>
        public DeleteProcRequest() { }

        /// <summary>Constructs a DeleteProcRequest object with the specified
        /// parameters.</summary>
        /// 
        /// <param name="proc_name">Name of the proc to be deleted. Must be the
        /// name of a currently existing proc.  </param>
        /// <param name="options">Optional parameters.  </param>
        /// 
        public DeleteProcRequest( string proc_name,
                                  IDictionary<string, string> options = null)
        {
            this.proc_name = proc_name ?? "";
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class DeleteProcRequest



    /// <summary>A set of results returned by <see
    /// cref="Kinetica.deleteProc(string,IDictionary{string, string})"
    /// />.</summary>
    public class DeleteProcResponse : KineticaData
    {

        /// <summary>Value of <paramref cref="DeleteProcRequest.proc_name" />.
        /// </summary>
        public string proc_name { get; set; }

        /// <summary>Additional information.  </summary>
        public IDictionary<string, string> info { get; set; } = new Dictionary<string, string>();

    } // end class DeleteProcResponse




}  // end namespace kinetica
