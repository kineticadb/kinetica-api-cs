/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>A set of parameters for /create/user/internal.
    /// <br />
    /// Creates a new internal user (a user whose credentials are managed by
    /// the database system).</summary>
    public class CreateUserInternalRequest : KineticaData
    {

        /// <summary>Name of the user to be created. Must contain only
        /// lowercase letters, digits, and underscores, and cannot begin with a
        /// digit. Must not be the same name as an existing user or role.
        /// </summary>
        public string name { get; set; }

        /// <summary>Initial password of the user to be created. May be an
        /// empty string for no password.  </summary>
        public string password { get; set; }

        /// <summary>Optional parameters.  </summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs a CreateUserInternalRequest object with default
        /// parameters.</summary>
        public CreateUserInternalRequest() { }

        /// <summary>Constructs a CreateUserInternalRequest object with the
        /// specified parameters.</summary>
        /// 
        /// <param name="name">Name of the user to be created. Must contain
        /// only lowercase letters, digits, and underscores, and cannot begin
        /// with a digit. Must not be the same name as an existing user or
        /// role.  </param>
        /// <param name="password">Initial password of the user to be created.
        /// May be an empty string for no password.  </param>
        /// <param name="options">Optional parameters.  </param>
        /// 
        public CreateUserInternalRequest( string name,
                                          string password,
                                          IDictionary<string, string> options)
        {
            this.name = name ?? "";
            this.password = password ?? "";
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class CreateUserInternalRequest



    /// <summary>A set of results returned by /create/user/internal.</summary>
    public class CreateUserInternalResponse : KineticaData
    {

        /// <summary>Value of <paramref cref="CreateUserInternalRequest.name"
        /// />.  </summary>
        public string name { get; set; }

    } // end class CreateUserInternalResponse




}  // end namespace kinetica
