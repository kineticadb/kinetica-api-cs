/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;



namespace kinetica
{

    /// <summary>A set of parameters for /has/table.
    /// <br />
    /// Checks for the existence of a table with the given name.</summary>
    public class HasTableRequest : KineticaData
    {

        /// <summary>Name of the table to check for existence.  </summary>
        public string table_name { get; set; }

        /// <summary>Optional parameters.  </summary>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();


        /// <summary>Constructs a HasTableRequest object with default
        /// parameters.</summary>
        public HasTableRequest() { }

        /// <summary>Constructs a HasTableRequest object with the specified
        /// parameters.</summary>
        /// 
        /// <param name="table_name">Name of the table to check for existence.
        /// </param>
        /// <param name="options">Optional parameters.  </param>
        /// 
        public HasTableRequest( string table_name,
                                IDictionary<string, string> options = null)
        {
            this.table_name = table_name ?? "";
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor

    } // end class HasTableRequest



    /// <summary>A set of results returned by /has/table.</summary>
    public class HasTableResponse : KineticaData
    {

        /// <summary>Indicates whether the table exists or not. Values: true,
        /// false.
        /// <br />
        /// A set of string constants for the parameter <member
        /// name="table_exists" />.</summary>
        public struct TableExists
        {
            public const string TRUE = "true";
            public const string FALSE = "false";
        } // end struct TableExists


        /// <summary>Value of <paramref cref="HasTableRequest.table_name" />
        /// </summary>
        public string table_name { get; set; }

        /// <summary>Indicates whether the table exists or not. Values: true,
        /// false.
        ///   </summary>
        public bool table_exists { get; set; }

    } // end class HasTableResponse




}  // end namespace kinetica
