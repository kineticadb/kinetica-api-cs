/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */

using System.Collections.Generic;

namespace kinetica
{
    /// <summary>A set of parameters for <see
    /// cref="Kinetica.showBackup(ShowBackupRequest)">Kinetica.showBackup</see>.
    /// </summary>
    /// <remarks><para>Shows information about a backup
    /// Returns detailed information about one or more backup instances.</para>
    /// </remarks>
    public class ShowBackupRequest : KineticaData
    {
        /// <summary>A set of string constants for the parameter <see
        /// cref="options" />.</summary>
        /// <remarks><para>Optional parameters.</para></remarks>
        public struct Options
        {
            /// <summary>Backup instance ID to show.</summary>
            /// <remarks><para>Leave empty to show information from the most
            /// recent backup instance in the container. The default value is
            /// ''.</para></remarks>
            public const string BACKUP_ID = "backup_id";

            /// <summary>Shows the contents of the specified backup_id.
            /// </summary>
            /// <remarks><para>Supported values:</para>
            /// <list type="bullet">
            ///     <item>
            ///         <term><see cref="Options.NONE">NONE</see>:</term>
            ///         <description>No backup contents</description>
            ///     </item>
            ///     <item>
            ///         <term><see
            ///         cref="Options.OBJECT_NAMES">OBJECT_NAMES</see>:</term>
            ///         <description>Object names only</description>
            ///     </item>
            ///     <item>
            ///         <term><see
            ///         cref="Options.OBJECT_FILES">OBJECT_FILES</see>:</term>
            ///         <description>Object names and files</description>
            ///     </item>
            /// </list>
            /// <para>The default value is <see cref="Options.NONE">NONE</see>.
            /// </para></remarks>
            public const string SHOW_CONTENTS = "show_contents";

            /// <summary>No backup contents</summary>
            public const string NONE = "none";

            /// <summary>Object names only</summary>
            public const string OBJECT_NAMES = "object_names";

            /// <summary>Object names and files</summary>
            public const string OBJECT_FILES = "object_files";

            /// <summary>If <see cref="Options.FALSE">FALSE</see> will return
            /// an error if the provided <see cref="backup_name" /> does not
            /// exist.</summary>
            /// <remarks><para>Supported values:</para>
            /// <list type="bullet">
            ///     <item>
            ///         <term><see cref="Options.TRUE">TRUE</see></term>
            ///     </item>
            ///     <item>
            ///         <term><see cref="Options.FALSE">FALSE</see></term>
            ///     </item>
            /// </list>
            /// <para>The default value is <see
            /// cref="Options.FALSE">FALSE</see>.</para></remarks>
            public const string NO_ERROR_IF_NOT_EXISTS = "no_error_if_not_exists";

            public const string TRUE = "true";
            public const string FALSE = "false";
        } // end struct Options

        /// <summary>Name of the backup object.</summary>
        /// <remarks><para>An empty string or '*' will return all existing
        /// backups. The default value is ''.</para></remarks>
        public string backup_name { get; set; } = "";

        /// <summary>Datasource where backup is located.</summary>
        public string datasource_name { get; set; }

        /// <summary>Optional parameters.</summary>
        /// <remarks><list type="bullet">
        ///     <item>
        ///         <term><see cref="Options.BACKUP_ID">BACKUP_ID</see>:</term>
        ///         <description>Backup instance ID to show. Leave empty to
        ///         show information from the most recent backup instance in
        ///         the container. The default value is ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.SHOW_CONTENTS">SHOW_CONTENTS</see>:</term>
        ///         <description>Shows the contents of the specified backup_id.
        ///         Supported values:
        ///         <list type="bullet">
        ///             <item>
        ///                 <term><see cref="Options.NONE">NONE</see>:</term>
        ///                 <description>No backup contents</description>
        ///             </item>
        ///             <item>
        ///                 <term><see
        ///                 cref="Options.OBJECT_NAMES">OBJECT_NAMES</see>:
        ///                 </term>
        ///                 <description>Object names only</description>
        ///             </item>
        ///             <item>
        ///                 <term><see
        ///                 cref="Options.OBJECT_FILES">OBJECT_FILES</see>:
        ///                 </term>
        ///                 <description>Object names and files</description>
        ///             </item>
        ///         </list>
        ///         The default value is <see cref="Options.NONE">NONE</see>.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.NO_ERROR_IF_NOT_EXISTS">NO_ERROR_IF_NOT_EXISTS</see>:
        ///         </term>
        ///         <description>If <see cref="Options.FALSE">FALSE</see> will
        ///         return an error if the provided <see cref="backup_name" />
        ///         does not exist. If <see cref="Options.TRUE">TRUE</see> then
        ///         it will return an empty result.
        ///         Supported values:
        ///         <list type="bullet">
        ///             <item>
        ///                 <term><see cref="Options.TRUE">TRUE</see></term>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.FALSE">FALSE</see></term>
        ///             </item>
        ///         </list>
        ///         The default value is <see cref="Options.FALSE">FALSE</see>.
        ///         </description>
        ///     </item>
        /// </list>
        /// <para>The default value is an empty Dictionary.</para></remarks>
        public IDictionary<string, string> options { get; set; } = new Dictionary<string, string>();

        /// <summary>Constructs a ShowBackupRequest object with default
        /// parameters.</summary>
        public ShowBackupRequest() { }

        /// <summary>Constructs a ShowBackupRequest object with the specified
        /// parameters.</summary>
        ///
        /// <param name="backup_name">Name of the backup object. An empty
        /// string or '*' will return all existing backups. The default value
        /// is ''.</param>
        /// <param name="datasource_name">Datasource where backup is located.
        /// </param>
        /// <param name="options">Optional parameters.
        /// <list type="bullet">
        ///     <item>
        ///         <term><see cref="Options.BACKUP_ID">BACKUP_ID</see>:</term>
        ///         <description>Backup instance ID to show. Leave empty to
        ///         show information from the most recent backup instance in
        ///         the container. The default value is ''.</description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.SHOW_CONTENTS">SHOW_CONTENTS</see>:</term>
        ///         <description>Shows the contents of the specified backup_id.
        ///         Supported values:
        ///         <list type="bullet">
        ///             <item>
        ///                 <term><see cref="Options.NONE">NONE</see>:</term>
        ///                 <description>No backup contents</description>
        ///             </item>
        ///             <item>
        ///                 <term><see
        ///                 cref="Options.OBJECT_NAMES">OBJECT_NAMES</see>:
        ///                 </term>
        ///                 <description>Object names only</description>
        ///             </item>
        ///             <item>
        ///                 <term><see
        ///                 cref="Options.OBJECT_FILES">OBJECT_FILES</see>:
        ///                 </term>
        ///                 <description>Object names and files</description>
        ///             </item>
        ///         </list>
        ///         The default value is <see cref="Options.NONE">NONE</see>.
        ///         </description>
        ///     </item>
        ///     <item>
        ///         <term><see
        ///         cref="Options.NO_ERROR_IF_NOT_EXISTS">NO_ERROR_IF_NOT_EXISTS</see>:
        ///         </term>
        ///         <description>If <see cref="Options.FALSE">FALSE</see> will
        ///         return an error if the provided <paramref
        ///         name="backup_name" /> does not exist. If <see
        ///         cref="Options.TRUE">TRUE</see> then it will return an empty
        ///         result.
        ///         Supported values:
        ///         <list type="bullet">
        ///             <item>
        ///                 <term><see cref="Options.TRUE">TRUE</see></term>
        ///             </item>
        ///             <item>
        ///                 <term><see cref="Options.FALSE">FALSE</see></term>
        ///             </item>
        ///         </list>
        ///         The default value is <see cref="Options.FALSE">FALSE</see>.
        ///         </description>
        ///     </item>
        /// </list>
        /// The default value is an empty Dictionary.</param>
        public ShowBackupRequest( string backup_name,
                                  string datasource_name,
                                  IDictionary<string, string> options = null)
        {
            this.backup_name = backup_name ?? "";
            this.datasource_name = datasource_name ?? "";
            this.options = options ?? new Dictionary<string, string>();
        } // end constructor
    } // end class ShowBackupRequest

    /// <summary>A set of results returned by <see
    /// cref="Kinetica.showBackup(ShowBackupRequest)">Kinetica.showBackup</see>.
    /// </summary>
    public class ShowBackupResponse : KineticaData
    {
        /// <summary>Value of <see
        /// cref="ShowBackupRequest.backup_name">backup_name</see>.</summary>
        public string backup_name { get; set; }

        /// <summary>Backup description</summary>
        public IList<IDictionary<string, string>> backup_description { get; set; } = new List<IDictionary<string, string>>();

        /// <summary>Backup instances in this backup</summary>
        public IList<IDictionary<string, string>> backup_ids { get; set; } = new List<IDictionary<string, string>>();

        /// <summary>Backup contents</summary>
        public IList<IDictionary<string, string>> backup_contents { get; set; } = new List<IDictionary<string, string>>();

        /// <summary>Backup instances that have been deleted from this backup
        /// object</summary>
        public IList<IDictionary<string, string>> deleted_backup_ids { get; set; } = new List<IDictionary<string, string>>();

        /// <summary>Additional information.</summary>
        public IDictionary<string, string> info { get; set; } = new Dictionary<string, string>();
    } // end class ShowBackupResponse
} // end namespace kinetica
